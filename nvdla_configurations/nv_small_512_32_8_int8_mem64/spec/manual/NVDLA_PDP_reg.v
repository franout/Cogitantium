//   Ordt 171103.01 autogenerated file 
//   Input: NVDLA_PDP.rdl
//   Parms: opendla.parms
//   Date: Sat Feb 29 19:31:22 CET 2020
//

//
//---------- module addrmap_NVDLA_jrdl_logic
//
module addrmap_NVDLA_jrdl_logic
(
  clk,
  reset,
  d2l_NVDLA_PDP_S_STATUS_w,
  d2l_NVDLA_PDP_S_STATUS_we,
  d2l_NVDLA_PDP_S_STATUS_re,
  d2l_NVDLA_PDP_S_POINTER_w,
  d2l_NVDLA_PDP_S_POINTER_we,
  d2l_NVDLA_PDP_S_POINTER_re,
  d2l_NVDLA_PDP_D_OP_ENABLE_w,
  d2l_NVDLA_PDP_D_OP_ENABLE_we,
  d2l_NVDLA_PDP_D_OP_ENABLE_re,
  d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_w,
  d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_we,
  d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_re,
  d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_w,
  d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_we,
  d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_re,
  d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_w,
  d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_we,
  d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_re,
  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_w,
  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_we,
  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_re,
  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_w,
  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_we,
  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_re,
  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_w,
  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_we,
  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_re,
  d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_w,
  d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_we,
  d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_re,
  d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_w,
  d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_we,
  d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_re,
  d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_w,
  d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_we,
  d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_re,
  d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_w,
  d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_we,
  d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_re,
  d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_w,
  d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_we,
  d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_re,
  d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_w,
  d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_we,
  d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_re,
  d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_w,
  d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_we,
  d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_re,
  d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_w,
  d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_we,
  d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_re,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_w,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_we,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_re,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_w,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_we,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_re,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_w,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_we,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_re,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_w,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_we,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_re,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_w,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_we,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_re,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_w,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_we,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_re,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_w,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_we,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_re,
  d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_w,
  d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_we,
  d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_re,
  d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_w,
  d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_we,
  d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_re,
  d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_w,
  d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_we,
  d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_re,
  d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_w,
  d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_we,
  d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_re,
  d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_w,
  d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_we,
  d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_re,
  d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_w,
  d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_we,
  d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_re,
  d2l_NVDLA_PDP_D_DST_LINE_STRIDE_w,
  d2l_NVDLA_PDP_D_DST_LINE_STRIDE_we,
  d2l_NVDLA_PDP_D_DST_LINE_STRIDE_re,
  d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_w,
  d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_we,
  d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_re,
  d2l_NVDLA_PDP_D_DST_RAM_CFG_w,
  d2l_NVDLA_PDP_D_DST_RAM_CFG_we,
  d2l_NVDLA_PDP_D_DST_RAM_CFG_re,
  d2l_NVDLA_PDP_D_DATA_FORMAT_w,
  d2l_NVDLA_PDP_D_DATA_FORMAT_we,
  d2l_NVDLA_PDP_D_DATA_FORMAT_re,
  d2l_NVDLA_PDP_D_INF_INPUT_NUM_w,
  d2l_NVDLA_PDP_D_INF_INPUT_NUM_we,
  d2l_NVDLA_PDP_D_INF_INPUT_NUM_re,
  d2l_NVDLA_PDP_D_NAN_INPUT_NUM_w,
  d2l_NVDLA_PDP_D_NAN_INPUT_NUM_we,
  d2l_NVDLA_PDP_D_NAN_INPUT_NUM_re,
  d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_w,
  d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_we,
  d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_re,
  d2l_NVDLA_PDP_D_PERF_ENABLE_w,
  d2l_NVDLA_PDP_D_PERF_ENABLE_we,
  d2l_NVDLA_PDP_D_PERF_ENABLE_re,
  d2l_NVDLA_PDP_D_PERF_WRITE_STALL_w,
  d2l_NVDLA_PDP_D_PERF_WRITE_STALL_we,
  d2l_NVDLA_PDP_D_PERF_WRITE_STALL_re,
  d2l_NVDLA_PDP_D_CYA_w,
  d2l_NVDLA_PDP_D_CYA_we,
  d2l_NVDLA_PDP_D_CYA_re,
  h2l_NVDLA_PDP_S_STATUS_STATUS_0_w,
  h2l_NVDLA_PDP_S_STATUS_STATUS_1_w,
  h2l_NVDLA_PDP_S_POINTER_CONSUMER_w,
  h2l_NVDLA_PDP_D_INF_INPUT_NUM_INF_INPUT_NUM_w,
  h2l_NVDLA_PDP_D_NAN_INPUT_NUM_NAN_INPUT_NUM_w,
  h2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_NAN_OUTPUT_NUM_w,
  h2l_NVDLA_PDP_D_PERF_WRITE_STALL_PERF_WRITE_STALL_w,

  l2d_NVDLA_PDP_S_STATUS_r,
  l2d_NVDLA_PDP_S_POINTER_r,
  l2d_NVDLA_PDP_D_OP_ENABLE_r,
  l2d_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_r,
  l2d_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_r,
  l2d_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_r,
  l2d_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_r,
  l2d_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_r,
  l2d_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_r,
  l2d_NVDLA_PDP_D_OPERATION_MODE_CFG_r,
  l2d_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_r,
  l2d_NVDLA_PDP_D_PARTIAL_WIDTH_IN_r,
  l2d_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_r,
  l2d_NVDLA_PDP_D_POOLING_KERNEL_CFG_r,
  l2d_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_r,
  l2d_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_r,
  l2d_NVDLA_PDP_D_POOLING_PADDING_CFG_r,
  l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_r,
  l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_r,
  l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_r,
  l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_r,
  l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_r,
  l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_r,
  l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_r,
  l2d_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_r,
  l2d_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_r,
  l2d_NVDLA_PDP_D_SRC_LINE_STRIDE_r,
  l2d_NVDLA_PDP_D_SRC_SURFACE_STRIDE_r,
  l2d_NVDLA_PDP_D_DST_BASE_ADDR_LOW_r,
  l2d_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_r,
  l2d_NVDLA_PDP_D_DST_LINE_STRIDE_r,
  l2d_NVDLA_PDP_D_DST_SURFACE_STRIDE_r,
  l2d_NVDLA_PDP_D_DST_RAM_CFG_r,
  l2d_NVDLA_PDP_D_DATA_FORMAT_r,
  l2d_NVDLA_PDP_D_INF_INPUT_NUM_r,
  l2d_NVDLA_PDP_D_NAN_INPUT_NUM_r,
  l2d_NVDLA_PDP_D_NAN_OUTPUT_NUM_r,
  l2d_NVDLA_PDP_D_PERF_ENABLE_r,
  l2d_NVDLA_PDP_D_PERF_WRITE_STALL_r,
  l2d_NVDLA_PDP_D_CYA_r,
  l2h_NVDLA_PDP_S_POINTER_PRODUCER_r,
  l2h_NVDLA_PDP_D_OP_ENABLE_OP_EN_r,
  l2h_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_CUBE_IN_WIDTH_r,
  l2h_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_CUBE_IN_HEIGHT_r,
  l2h_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_CUBE_IN_CHANNEL_r,
  l2h_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_CUBE_OUT_WIDTH_r,
  l2h_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_CUBE_OUT_HEIGHT_r,
  l2h_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_CUBE_OUT_CHANNEL_r,
  l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_POOLING_METHOD_r,
  l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_FLYING_MODE_r,
  l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_SPLIT_NUM_r,
  l2h_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_NAN_TO_ZERO_r,
  l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_FIRST_r,
  l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_LAST_r,
  l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_MID_r,
  l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_FIRST_r,
  l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_LAST_r,
  l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_MID_r,
  l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_WIDTH_r,
  l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_HEIGHT_r,
  l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_WIDTH_r,
  l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_HEIGHT_r,
  l2h_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_RECIP_KERNEL_WIDTH_r,
  l2h_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_RECIP_KERNEL_HEIGHT_r,
  l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_LEFT_r,
  l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_TOP_r,
  l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_RIGHT_r,
  l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_BOTTOM_r,
  l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_PAD_VALUE_1X_r,
  l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_PAD_VALUE_2X_r,
  l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_PAD_VALUE_3X_r,
  l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_PAD_VALUE_4X_r,
  l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_PAD_VALUE_5X_r,
  l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_PAD_VALUE_6X_r,
  l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_PAD_VALUE_7X_r,
  l2h_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_SRC_BASE_ADDR_LOW_r,
  l2h_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_SRC_BASE_ADDR_HIGH_r,
  l2h_NVDLA_PDP_D_SRC_LINE_STRIDE_SRC_LINE_STRIDE_r,
  l2h_NVDLA_PDP_D_SRC_SURFACE_STRIDE_SRC_SURFACE_STRIDE_r,
  l2h_NVDLA_PDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_r,
  l2h_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_r,
  l2h_NVDLA_PDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_r,
  l2h_NVDLA_PDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_r,
  l2h_NVDLA_PDP_D_DST_RAM_CFG_DST_RAM_TYPE_r,
  l2h_NVDLA_PDP_D_DATA_FORMAT_INPUT_DATA_r,
  l2h_NVDLA_PDP_D_PERF_ENABLE_DMA_EN_r,
  l2h_NVDLA_PDP_D_CYA_CYA_r );

  //------- inputs
  input    clk;
  input    reset;
  input     [31:0] d2l_NVDLA_PDP_S_STATUS_w;
  input    d2l_NVDLA_PDP_S_STATUS_we;
  input    d2l_NVDLA_PDP_S_STATUS_re;
  input     [31:0] d2l_NVDLA_PDP_S_POINTER_w;
  input    d2l_NVDLA_PDP_S_POINTER_we;
  input    d2l_NVDLA_PDP_S_POINTER_re;
  input     [31:0] d2l_NVDLA_PDP_D_OP_ENABLE_w;
  input    d2l_NVDLA_PDP_D_OP_ENABLE_we;
  input    d2l_NVDLA_PDP_D_OP_ENABLE_re;
  input     [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_w;
  input    d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_we;
  input    d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_re;
  input     [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_w;
  input    d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_we;
  input    d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_re;
  input     [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_w;
  input    d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_we;
  input    d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_re;
  input     [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_w;
  input    d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_we;
  input    d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_re;
  input     [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_w;
  input    d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_we;
  input    d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_re;
  input     [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_w;
  input    d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_we;
  input    d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_re;
  input     [31:0] d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_w;
  input    d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_we;
  input    d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_re;
  input     [31:0] d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_w;
  input    d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_we;
  input    d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_re;
  input     [31:0] d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_w;
  input    d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_we;
  input    d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_re;
  input     [31:0] d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_w;
  input    d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_we;
  input    d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_re;
  input     [31:0] d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_w;
  input    d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_we;
  input    d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_re;
  input     [31:0] d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_w;
  input    d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_we;
  input    d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_re;
  input     [31:0] d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_w;
  input    d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_we;
  input    d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_re;
  input     [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_w;
  input    d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_we;
  input    d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_re;
  input     [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_w;
  input    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_we;
  input    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_re;
  input     [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_w;
  input    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_we;
  input    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_re;
  input     [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_w;
  input    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_we;
  input    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_re;
  input     [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_w;
  input    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_we;
  input    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_re;
  input     [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_w;
  input    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_we;
  input    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_re;
  input     [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_w;
  input    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_we;
  input    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_re;
  input     [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_w;
  input    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_we;
  input    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_re;
  input     [31:0] d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_w;
  input    d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_we;
  input    d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_re;
  input     [31:0] d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_w;
  input    d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_we;
  input    d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_re;
  input     [31:0] d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_w;
  input    d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_we;
  input    d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_re;
  input     [31:0] d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_w;
  input    d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_we;
  input    d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_re;
  input     [31:0] d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_w;
  input    d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_we;
  input    d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_re;
  input     [31:0] d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_w;
  input    d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_we;
  input    d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_re;
  input     [31:0] d2l_NVDLA_PDP_D_DST_LINE_STRIDE_w;
  input    d2l_NVDLA_PDP_D_DST_LINE_STRIDE_we;
  input    d2l_NVDLA_PDP_D_DST_LINE_STRIDE_re;
  input     [31:0] d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_w;
  input    d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_we;
  input    d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_re;
  input     [31:0] d2l_NVDLA_PDP_D_DST_RAM_CFG_w;
  input    d2l_NVDLA_PDP_D_DST_RAM_CFG_we;
  input    d2l_NVDLA_PDP_D_DST_RAM_CFG_re;
  input     [31:0] d2l_NVDLA_PDP_D_DATA_FORMAT_w;
  input    d2l_NVDLA_PDP_D_DATA_FORMAT_we;
  input    d2l_NVDLA_PDP_D_DATA_FORMAT_re;
  input     [31:0] d2l_NVDLA_PDP_D_INF_INPUT_NUM_w;
  input    d2l_NVDLA_PDP_D_INF_INPUT_NUM_we;
  input    d2l_NVDLA_PDP_D_INF_INPUT_NUM_re;
  input     [31:0] d2l_NVDLA_PDP_D_NAN_INPUT_NUM_w;
  input    d2l_NVDLA_PDP_D_NAN_INPUT_NUM_we;
  input    d2l_NVDLA_PDP_D_NAN_INPUT_NUM_re;
  input     [31:0] d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_w;
  input    d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_we;
  input    d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_re;
  input     [31:0] d2l_NVDLA_PDP_D_PERF_ENABLE_w;
  input    d2l_NVDLA_PDP_D_PERF_ENABLE_we;
  input    d2l_NVDLA_PDP_D_PERF_ENABLE_re;
  input     [31:0] d2l_NVDLA_PDP_D_PERF_WRITE_STALL_w;
  input    d2l_NVDLA_PDP_D_PERF_WRITE_STALL_we;
  input    d2l_NVDLA_PDP_D_PERF_WRITE_STALL_re;
  input     [31:0] d2l_NVDLA_PDP_D_CYA_w;
  input    d2l_NVDLA_PDP_D_CYA_we;
  input    d2l_NVDLA_PDP_D_CYA_re;
  input     [1:0] h2l_NVDLA_PDP_S_STATUS_STATUS_0_w;
  input     [1:0] h2l_NVDLA_PDP_S_STATUS_STATUS_1_w;
  input    h2l_NVDLA_PDP_S_POINTER_CONSUMER_w;
  input     [31:0] h2l_NVDLA_PDP_D_INF_INPUT_NUM_INF_INPUT_NUM_w;
  input     [31:0] h2l_NVDLA_PDP_D_NAN_INPUT_NUM_NAN_INPUT_NUM_w;
  input     [31:0] h2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_NAN_OUTPUT_NUM_w;
  input     [31:0] h2l_NVDLA_PDP_D_PERF_WRITE_STALL_PERF_WRITE_STALL_w;

  //------- outputs
  output     [31:0] l2d_NVDLA_PDP_S_STATUS_r;
  output     [31:0] l2d_NVDLA_PDP_S_POINTER_r;
  output     [31:0] l2d_NVDLA_PDP_D_OP_ENABLE_r;
  output     [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_r;
  output     [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_r;
  output     [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_r;
  output     [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_r;
  output     [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_r;
  output     [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_r;
  output     [31:0] l2d_NVDLA_PDP_D_OPERATION_MODE_CFG_r;
  output     [31:0] l2d_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_r;
  output     [31:0] l2d_NVDLA_PDP_D_PARTIAL_WIDTH_IN_r;
  output     [31:0] l2d_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_r;
  output     [31:0] l2d_NVDLA_PDP_D_POOLING_KERNEL_CFG_r;
  output     [31:0] l2d_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_r;
  output     [31:0] l2d_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_r;
  output     [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_CFG_r;
  output     [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_r;
  output     [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_r;
  output     [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_r;
  output     [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_r;
  output     [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_r;
  output     [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_r;
  output     [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_r;
  output     [31:0] l2d_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_r;
  output     [31:0] l2d_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_r;
  output     [31:0] l2d_NVDLA_PDP_D_SRC_LINE_STRIDE_r;
  output     [31:0] l2d_NVDLA_PDP_D_SRC_SURFACE_STRIDE_r;
  output     [31:0] l2d_NVDLA_PDP_D_DST_BASE_ADDR_LOW_r;
  output     [31:0] l2d_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_r;
  output     [31:0] l2d_NVDLA_PDP_D_DST_LINE_STRIDE_r;
  output     [31:0] l2d_NVDLA_PDP_D_DST_SURFACE_STRIDE_r;
  output     [31:0] l2d_NVDLA_PDP_D_DST_RAM_CFG_r;
  output     [31:0] l2d_NVDLA_PDP_D_DATA_FORMAT_r;
  output     [31:0] l2d_NVDLA_PDP_D_INF_INPUT_NUM_r;
  output     [31:0] l2d_NVDLA_PDP_D_NAN_INPUT_NUM_r;
  output     [31:0] l2d_NVDLA_PDP_D_NAN_OUTPUT_NUM_r;
  output     [31:0] l2d_NVDLA_PDP_D_PERF_ENABLE_r;
  output     [31:0] l2d_NVDLA_PDP_D_PERF_WRITE_STALL_r;
  output     [31:0] l2d_NVDLA_PDP_D_CYA_r;
  output    l2h_NVDLA_PDP_S_POINTER_PRODUCER_r;
  output    l2h_NVDLA_PDP_D_OP_ENABLE_OP_EN_r;
  output     [12:0] l2h_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_CUBE_IN_WIDTH_r;
  output     [12:0] l2h_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_CUBE_IN_HEIGHT_r;
  output     [12:0] l2h_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_CUBE_IN_CHANNEL_r;
  output     [12:0] l2h_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_CUBE_OUT_WIDTH_r;
  output     [12:0] l2h_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_CUBE_OUT_HEIGHT_r;
  output     [12:0] l2h_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_CUBE_OUT_CHANNEL_r;
  output     [1:0] l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_POOLING_METHOD_r;
  output    l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_FLYING_MODE_r;
  output     [7:0] l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_SPLIT_NUM_r;
  output    l2h_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_NAN_TO_ZERO_r;
  output     [9:0] l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_FIRST_r;
  output     [9:0] l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_LAST_r;
  output     [9:0] l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_MID_r;
  output     [9:0] l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_FIRST_r;
  output     [9:0] l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_LAST_r;
  output     [9:0] l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_MID_r;
  output     [3:0] l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_WIDTH_r;
  output     [3:0] l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_HEIGHT_r;
  output     [3:0] l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_WIDTH_r;
  output     [3:0] l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_HEIGHT_r;
  output     [16:0] l2h_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_RECIP_KERNEL_WIDTH_r;
  output     [16:0] l2h_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_RECIP_KERNEL_HEIGHT_r;
  output     [2:0] l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_LEFT_r;
  output     [2:0] l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_TOP_r;
  output     [2:0] l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_RIGHT_r;
  output     [2:0] l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_BOTTOM_r;
  output     [18:0] l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_PAD_VALUE_1X_r;
  output     [18:0] l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_PAD_VALUE_2X_r;
  output     [18:0] l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_PAD_VALUE_3X_r;
  output     [18:0] l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_PAD_VALUE_4X_r;
  output     [18:0] l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_PAD_VALUE_5X_r;
  output     [18:0] l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_PAD_VALUE_6X_r;
  output     [18:0] l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_PAD_VALUE_7X_r;
  output     [31:0] l2h_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_SRC_BASE_ADDR_LOW_r;
  output     [31:0] l2h_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_SRC_BASE_ADDR_HIGH_r;
  output     [31:0] l2h_NVDLA_PDP_D_SRC_LINE_STRIDE_SRC_LINE_STRIDE_r;
  output     [31:0] l2h_NVDLA_PDP_D_SRC_SURFACE_STRIDE_SRC_SURFACE_STRIDE_r;
  output     [31:0] l2h_NVDLA_PDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_r;
  output     [31:0] l2h_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_r;
  output     [31:0] l2h_NVDLA_PDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_r;
  output     [31:0] l2h_NVDLA_PDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_r;
  output    l2h_NVDLA_PDP_D_DST_RAM_CFG_DST_RAM_TYPE_r;
  output     [1:0] l2h_NVDLA_PDP_D_DATA_FORMAT_INPUT_DATA_r;
  output    l2h_NVDLA_PDP_D_PERF_ENABLE_DMA_EN_r;
  output     [31:0] l2h_NVDLA_PDP_D_CYA_CYA_r;


  //------- reg defines
  reg   [1:0] rg_NVDLA_PDP_S_STATUS_STATUS_0;
  reg   [1:0] rg_NVDLA_PDP_S_STATUS_STATUS_1;
  reg   [31:0] l2d_NVDLA_PDP_S_STATUS_r;
  reg  rg_NVDLA_PDP_S_POINTER_PRODUCER;
  reg  reg_NVDLA_PDP_S_POINTER_PRODUCER_next;
  reg  l2h_NVDLA_PDP_S_POINTER_PRODUCER_r;
  reg  rg_NVDLA_PDP_S_POINTER_CONSUMER;
  reg   [31:0] l2d_NVDLA_PDP_S_POINTER_r;
  reg  rg_NVDLA_PDP_D_OP_ENABLE_OP_EN;
  reg  reg_NVDLA_PDP_D_OP_ENABLE_OP_EN_next;
  reg  l2h_NVDLA_PDP_D_OP_ENABLE_OP_EN_r;
  reg   [31:0] l2d_NVDLA_PDP_D_OP_ENABLE_r;
  reg   [12:0] rg_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_CUBE_IN_WIDTH;
  reg   [12:0] reg_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_CUBE_IN_WIDTH_next;
  reg   [12:0] l2h_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_CUBE_IN_WIDTH_r;
  reg   [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_r;
  reg   [12:0] rg_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_CUBE_IN_HEIGHT;
  reg   [12:0] reg_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_CUBE_IN_HEIGHT_next;
  reg   [12:0] l2h_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_CUBE_IN_HEIGHT_r;
  reg   [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_r;
  reg   [12:0] rg_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_CUBE_IN_CHANNEL;
  reg   [12:0] reg_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_CUBE_IN_CHANNEL_next;
  reg   [12:0] l2h_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_CUBE_IN_CHANNEL_r;
  reg   [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_r;
  reg   [12:0] rg_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_CUBE_OUT_WIDTH;
  reg   [12:0] reg_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_CUBE_OUT_WIDTH_next;
  reg   [12:0] l2h_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_CUBE_OUT_WIDTH_r;
  reg   [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_r;
  reg   [12:0] rg_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_CUBE_OUT_HEIGHT;
  reg   [12:0] reg_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_CUBE_OUT_HEIGHT_next;
  reg   [12:0] l2h_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_CUBE_OUT_HEIGHT_r;
  reg   [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_r;
  reg   [12:0] rg_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_CUBE_OUT_CHANNEL;
  reg   [12:0] reg_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_CUBE_OUT_CHANNEL_next;
  reg   [12:0] l2h_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_CUBE_OUT_CHANNEL_r;
  reg   [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_r;
  reg   [1:0] rg_NVDLA_PDP_D_OPERATION_MODE_CFG_POOLING_METHOD;
  reg   [1:0] reg_NVDLA_PDP_D_OPERATION_MODE_CFG_POOLING_METHOD_next;
  reg   [1:0] l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_POOLING_METHOD_r;
  reg  rg_NVDLA_PDP_D_OPERATION_MODE_CFG_FLYING_MODE;
  reg  reg_NVDLA_PDP_D_OPERATION_MODE_CFG_FLYING_MODE_next;
  reg  l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_FLYING_MODE_r;
  reg   [7:0] rg_NVDLA_PDP_D_OPERATION_MODE_CFG_SPLIT_NUM;
  reg   [7:0] reg_NVDLA_PDP_D_OPERATION_MODE_CFG_SPLIT_NUM_next;
  reg   [7:0] l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_SPLIT_NUM_r;
  reg   [31:0] l2d_NVDLA_PDP_D_OPERATION_MODE_CFG_r;
  reg  rg_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_NAN_TO_ZERO;
  reg  reg_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_NAN_TO_ZERO_next;
  reg  l2h_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_NAN_TO_ZERO_r;
  reg   [31:0] l2d_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_r;
  reg   [9:0] rg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_FIRST;
  reg   [9:0] reg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_FIRST_next;
  reg   [9:0] l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_FIRST_r;
  reg   [9:0] rg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_LAST;
  reg   [9:0] reg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_LAST_next;
  reg   [9:0] l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_LAST_r;
  reg   [9:0] rg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_MID;
  reg   [9:0] reg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_MID_next;
  reg   [9:0] l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_MID_r;
  reg   [31:0] l2d_NVDLA_PDP_D_PARTIAL_WIDTH_IN_r;
  reg   [9:0] rg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_FIRST;
  reg   [9:0] reg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_FIRST_next;
  reg   [9:0] l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_FIRST_r;
  reg   [9:0] rg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_LAST;
  reg   [9:0] reg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_LAST_next;
  reg   [9:0] l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_LAST_r;
  reg   [9:0] rg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_MID;
  reg   [9:0] reg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_MID_next;
  reg   [9:0] l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_MID_r;
  reg   [31:0] l2d_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_r;
  reg   [3:0] rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_WIDTH;
  reg   [3:0] reg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_WIDTH_next;
  reg   [3:0] l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_WIDTH_r;
  reg   [3:0] rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_HEIGHT;
  reg   [3:0] reg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_HEIGHT_next;
  reg   [3:0] l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_HEIGHT_r;
  reg   [3:0] rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_WIDTH;
  reg   [3:0] reg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_WIDTH_next;
  reg   [3:0] l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_WIDTH_r;
  reg   [3:0] rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_HEIGHT;
  reg   [3:0] reg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_HEIGHT_next;
  reg   [3:0] l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_HEIGHT_r;
  reg   [31:0] l2d_NVDLA_PDP_D_POOLING_KERNEL_CFG_r;
  reg   [16:0] rg_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_RECIP_KERNEL_WIDTH;
  reg   [16:0] reg_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_RECIP_KERNEL_WIDTH_next;
  reg   [16:0] l2h_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_RECIP_KERNEL_WIDTH_r;
  reg   [31:0] l2d_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_r;
  reg   [16:0] rg_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_RECIP_KERNEL_HEIGHT;
  reg   [16:0] reg_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_RECIP_KERNEL_HEIGHT_next;
  reg   [16:0] l2h_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_RECIP_KERNEL_HEIGHT_r;
  reg   [31:0] l2d_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_r;
  reg   [2:0] rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_LEFT;
  reg   [2:0] reg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_LEFT_next;
  reg   [2:0] l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_LEFT_r;
  reg   [2:0] rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_TOP;
  reg   [2:0] reg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_TOP_next;
  reg   [2:0] l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_TOP_r;
  reg   [2:0] rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_RIGHT;
  reg   [2:0] reg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_RIGHT_next;
  reg   [2:0] l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_RIGHT_r;
  reg   [2:0] rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_BOTTOM;
  reg   [2:0] reg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_BOTTOM_next;
  reg   [2:0] l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_BOTTOM_r;
  reg   [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_CFG_r;
  reg   [18:0] rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_PAD_VALUE_1X;
  reg   [18:0] reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_PAD_VALUE_1X_next;
  reg   [18:0] l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_PAD_VALUE_1X_r;
  reg   [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_r;
  reg   [18:0] rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_PAD_VALUE_2X;
  reg   [18:0] reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_PAD_VALUE_2X_next;
  reg   [18:0] l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_PAD_VALUE_2X_r;
  reg   [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_r;
  reg   [18:0] rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_PAD_VALUE_3X;
  reg   [18:0] reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_PAD_VALUE_3X_next;
  reg   [18:0] l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_PAD_VALUE_3X_r;
  reg   [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_r;
  reg   [18:0] rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_PAD_VALUE_4X;
  reg   [18:0] reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_PAD_VALUE_4X_next;
  reg   [18:0] l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_PAD_VALUE_4X_r;
  reg   [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_r;
  reg   [18:0] rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_PAD_VALUE_5X;
  reg   [18:0] reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_PAD_VALUE_5X_next;
  reg   [18:0] l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_PAD_VALUE_5X_r;
  reg   [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_r;
  reg   [18:0] rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_PAD_VALUE_6X;
  reg   [18:0] reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_PAD_VALUE_6X_next;
  reg   [18:0] l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_PAD_VALUE_6X_r;
  reg   [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_r;
  reg   [18:0] rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_PAD_VALUE_7X;
  reg   [18:0] reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_PAD_VALUE_7X_next;
  reg   [18:0] l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_PAD_VALUE_7X_r;
  reg   [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_r;
  reg   [31:0] rg_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_SRC_BASE_ADDR_LOW;
  reg   [31:0] reg_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_SRC_BASE_ADDR_LOW_next;
  reg   [31:0] l2h_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_SRC_BASE_ADDR_LOW_r;
  reg   [31:0] l2d_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_r;
  reg   [31:0] rg_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_SRC_BASE_ADDR_HIGH;
  reg   [31:0] reg_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_SRC_BASE_ADDR_HIGH_next;
  reg   [31:0] l2h_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_SRC_BASE_ADDR_HIGH_r;
  reg   [31:0] l2d_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_r;
  reg   [31:0] rg_NVDLA_PDP_D_SRC_LINE_STRIDE_SRC_LINE_STRIDE;
  reg   [31:0] reg_NVDLA_PDP_D_SRC_LINE_STRIDE_SRC_LINE_STRIDE_next;
  reg   [31:0] l2h_NVDLA_PDP_D_SRC_LINE_STRIDE_SRC_LINE_STRIDE_r;
  reg   [31:0] l2d_NVDLA_PDP_D_SRC_LINE_STRIDE_r;
  reg   [31:0] rg_NVDLA_PDP_D_SRC_SURFACE_STRIDE_SRC_SURFACE_STRIDE;
  reg   [31:0] reg_NVDLA_PDP_D_SRC_SURFACE_STRIDE_SRC_SURFACE_STRIDE_next;
  reg   [31:0] l2h_NVDLA_PDP_D_SRC_SURFACE_STRIDE_SRC_SURFACE_STRIDE_r;
  reg   [31:0] l2d_NVDLA_PDP_D_SRC_SURFACE_STRIDE_r;
  reg   [31:0] rg_NVDLA_PDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW;
  reg   [31:0] reg_NVDLA_PDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_next;
  reg   [31:0] l2h_NVDLA_PDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_r;
  reg   [31:0] l2d_NVDLA_PDP_D_DST_BASE_ADDR_LOW_r;
  reg   [31:0] rg_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH;
  reg   [31:0] reg_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_next;
  reg   [31:0] l2h_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_r;
  reg   [31:0] l2d_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_r;
  reg   [31:0] rg_NVDLA_PDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE;
  reg   [31:0] reg_NVDLA_PDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_next;
  reg   [31:0] l2h_NVDLA_PDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_r;
  reg   [31:0] l2d_NVDLA_PDP_D_DST_LINE_STRIDE_r;
  reg   [31:0] rg_NVDLA_PDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE;
  reg   [31:0] reg_NVDLA_PDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_next;
  reg   [31:0] l2h_NVDLA_PDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_r;
  reg   [31:0] l2d_NVDLA_PDP_D_DST_SURFACE_STRIDE_r;
  reg  rg_NVDLA_PDP_D_DST_RAM_CFG_DST_RAM_TYPE;
  reg  reg_NVDLA_PDP_D_DST_RAM_CFG_DST_RAM_TYPE_next;
  reg  l2h_NVDLA_PDP_D_DST_RAM_CFG_DST_RAM_TYPE_r;
  reg   [31:0] l2d_NVDLA_PDP_D_DST_RAM_CFG_r;
  reg   [1:0] rg_NVDLA_PDP_D_DATA_FORMAT_INPUT_DATA;
  reg   [1:0] reg_NVDLA_PDP_D_DATA_FORMAT_INPUT_DATA_next;
  reg   [1:0] l2h_NVDLA_PDP_D_DATA_FORMAT_INPUT_DATA_r;
  reg   [31:0] l2d_NVDLA_PDP_D_DATA_FORMAT_r;
  reg   [31:0] rg_NVDLA_PDP_D_INF_INPUT_NUM_INF_INPUT_NUM;
  reg   [31:0] l2d_NVDLA_PDP_D_INF_INPUT_NUM_r;
  reg   [31:0] rg_NVDLA_PDP_D_NAN_INPUT_NUM_NAN_INPUT_NUM;
  reg   [31:0] l2d_NVDLA_PDP_D_NAN_INPUT_NUM_r;
  reg   [31:0] rg_NVDLA_PDP_D_NAN_OUTPUT_NUM_NAN_OUTPUT_NUM;
  reg   [31:0] l2d_NVDLA_PDP_D_NAN_OUTPUT_NUM_r;
  reg  rg_NVDLA_PDP_D_PERF_ENABLE_DMA_EN;
  reg  reg_NVDLA_PDP_D_PERF_ENABLE_DMA_EN_next;
  reg  l2h_NVDLA_PDP_D_PERF_ENABLE_DMA_EN_r;
  reg   [31:0] l2d_NVDLA_PDP_D_PERF_ENABLE_r;
  reg   [31:0] rg_NVDLA_PDP_D_PERF_WRITE_STALL_PERF_WRITE_STALL;
  reg   [31:0] l2d_NVDLA_PDP_D_PERF_WRITE_STALL_r;
  reg   [31:0] rg_NVDLA_PDP_D_CYA_CYA;
  reg   [31:0] reg_NVDLA_PDP_D_CYA_CYA_next;
  reg   [31:0] l2h_NVDLA_PDP_D_CYA_CYA_r;
  reg   [31:0] l2d_NVDLA_PDP_D_CYA_r;
  
  
  //------- combinatorial assigns for NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG
  always @ (*) begin
    reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_PAD_VALUE_3X_next = rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_PAD_VALUE_3X;
    l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_PAD_VALUE_3X_r = rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_PAD_VALUE_3X;
    if (d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_we) reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_PAD_VALUE_3X_next = d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_w [18:0] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_PAD_VALUE_3X <= #1 19'h0;
    end
    else begin
      rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_PAD_VALUE_3X <= #1  reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_PAD_VALUE_3X_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_r = 32'b0;
    l2d_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_r [12:0]  = rg_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_CUBE_OUT_WIDTH;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DST_LINE_STRIDE
  always @ (*) begin
    reg_NVDLA_PDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_next = rg_NVDLA_PDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE;
    l2h_NVDLA_PDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_r = rg_NVDLA_PDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE;
    if (d2l_NVDLA_PDP_D_DST_LINE_STRIDE_we) reg_NVDLA_PDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_next = d2l_NVDLA_PDP_D_DST_LINE_STRIDE_w;
  end
  
  //------- reg assigns for NVDLA_PDP_D_DST_LINE_STRIDE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE <= #1 32'h0;
    end
    else begin
      rg_NVDLA_PDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE <= #1  reg_NVDLA_PDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_POOLING_KERNEL_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_POOLING_KERNEL_CFG_r = 32'b0;
    l2d_NVDLA_PDP_D_POOLING_KERNEL_CFG_r [3:0]  = rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_WIDTH;
    l2d_NVDLA_PDP_D_POOLING_KERNEL_CFG_r [11:8]  = rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_HEIGHT;
    l2d_NVDLA_PDP_D_POOLING_KERNEL_CFG_r [19:16]  = rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_WIDTH;
    l2d_NVDLA_PDP_D_POOLING_KERNEL_CFG_r [23:20]  = rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_HEIGHT;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_INF_INPUT_NUM (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_INF_INPUT_NUM_r = rg_NVDLA_PDP_D_INF_INPUT_NUM_INF_INPUT_NUM;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_SRC_SURFACE_STRIDE (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_SRC_SURFACE_STRIDE_r = rg_NVDLA_PDP_D_SRC_SURFACE_STRIDE_SRC_SURFACE_STRIDE;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_NAN_OUTPUT_NUM
  always @ (*) begin
    rg_NVDLA_PDP_D_NAN_OUTPUT_NUM_NAN_OUTPUT_NUM =  h2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_NAN_OUTPUT_NUM_w;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_POOLING_PADDING_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_POOLING_PADDING_CFG_r = 32'b0;
    l2d_NVDLA_PDP_D_POOLING_PADDING_CFG_r [2:0]  = rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_LEFT;
    l2d_NVDLA_PDP_D_POOLING_PADDING_CFG_r [6:4]  = rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_TOP;
    l2d_NVDLA_PDP_D_POOLING_PADDING_CFG_r [10:8]  = rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_RIGHT;
    l2d_NVDLA_PDP_D_POOLING_PADDING_CFG_r [14:12]  = rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_BOTTOM;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_OP_ENABLE
  always @ (*) begin
    reg_NVDLA_PDP_D_OP_ENABLE_OP_EN_next = rg_NVDLA_PDP_D_OP_ENABLE_OP_EN;
    l2h_NVDLA_PDP_D_OP_ENABLE_OP_EN_r = rg_NVDLA_PDP_D_OP_ENABLE_OP_EN;
    if (d2l_NVDLA_PDP_D_OP_ENABLE_we) reg_NVDLA_PDP_D_OP_ENABLE_OP_EN_next = d2l_NVDLA_PDP_D_OP_ENABLE_w [0] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_OP_ENABLE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_OP_ENABLE_OP_EN <= #1 1'h0;
    end
    else begin
      rg_NVDLA_PDP_D_OP_ENABLE_OP_EN <= #1  reg_NVDLA_PDP_D_OP_ENABLE_OP_EN_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_r = 32'b0;
    l2d_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_r [12:0]  = rg_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_CUBE_OUT_HEIGHT;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DST_BASE_ADDR_LOW (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_DST_BASE_ADDR_LOW_r = rg_NVDLA_PDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_NAN_INPUT_NUM
  always @ (*) begin
    rg_NVDLA_PDP_D_NAN_INPUT_NUM_NAN_INPUT_NUM =  h2l_NVDLA_PDP_D_NAN_INPUT_NUM_NAN_INPUT_NUM_w;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_NAN_FLUSH_TO_ZERO (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_r = 32'b0;
    l2d_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_r [0]  = rg_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_NAN_TO_ZERO;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG
  always @ (*) begin
    reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_PAD_VALUE_2X_next = rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_PAD_VALUE_2X;
    l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_PAD_VALUE_2X_r = rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_PAD_VALUE_2X;
    if (d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_we) reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_PAD_VALUE_2X_next = d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_w [18:0] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_PAD_VALUE_2X <= #1 19'h0;
    end
    else begin
      rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_PAD_VALUE_2X <= #1  reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_PAD_VALUE_2X_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_r = 32'b0;
    l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_r [18:0]  = rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_PAD_VALUE_2X;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DST_LINE_STRIDE (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_DST_LINE_STRIDE_r = rg_NVDLA_PDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_S_STATUS (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_S_STATUS_r = 32'b0;
    l2d_NVDLA_PDP_S_STATUS_r [1:0]  = rg_NVDLA_PDP_S_STATUS_STATUS_0;
    l2d_NVDLA_PDP_S_STATUS_r [17:16]  = rg_NVDLA_PDP_S_STATUS_STATUS_1;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_SRC_LINE_STRIDE (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_SRC_LINE_STRIDE_r = rg_NVDLA_PDP_D_SRC_LINE_STRIDE_SRC_LINE_STRIDE;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_INF_INPUT_NUM
  always @ (*) begin
    rg_NVDLA_PDP_D_INF_INPUT_NUM_INF_INPUT_NUM =  h2l_NVDLA_PDP_D_INF_INPUT_NUM_INF_INPUT_NUM_w;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_PARTIAL_WIDTH_IN (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_PARTIAL_WIDTH_IN_r = 32'b0;
    l2d_NVDLA_PDP_D_PARTIAL_WIDTH_IN_r [9:0]  = rg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_FIRST;
    l2d_NVDLA_PDP_D_PARTIAL_WIDTH_IN_r [19:10]  = rg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_LAST;
    l2d_NVDLA_PDP_D_PARTIAL_WIDTH_IN_r [29:20]  = rg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_MID;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT
  always @ (*) begin
    reg_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_CUBE_IN_HEIGHT_next = rg_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_CUBE_IN_HEIGHT;
    l2h_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_CUBE_IN_HEIGHT_r = rg_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_CUBE_IN_HEIGHT;
    if (d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_we) reg_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_CUBE_IN_HEIGHT_next = d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_w [12:0] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_CUBE_IN_HEIGHT <= #1 13'h0;
    end
    else begin
      rg_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_CUBE_IN_HEIGHT <= #1  reg_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_CUBE_IN_HEIGHT_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_PERF_ENABLE (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_PERF_ENABLE_r = 32'b0;
    l2d_NVDLA_PDP_D_PERF_ENABLE_r [0]  = rg_NVDLA_PDP_D_PERF_ENABLE_DMA_EN;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_S_POINTER
  always @ (*) begin
    reg_NVDLA_PDP_S_POINTER_PRODUCER_next = rg_NVDLA_PDP_S_POINTER_PRODUCER;
    l2h_NVDLA_PDP_S_POINTER_PRODUCER_r = rg_NVDLA_PDP_S_POINTER_PRODUCER;
    rg_NVDLA_PDP_S_POINTER_CONSUMER =  h2l_NVDLA_PDP_S_POINTER_CONSUMER_w;
    if (d2l_NVDLA_PDP_S_POINTER_we) reg_NVDLA_PDP_S_POINTER_PRODUCER_next = d2l_NVDLA_PDP_S_POINTER_w [0] ;
  end
  
  //------- reg assigns for NVDLA_PDP_S_POINTER
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_S_POINTER_PRODUCER <= #1 1'h0;
    end
    else begin
      rg_NVDLA_PDP_S_POINTER_PRODUCER <= #1  reg_NVDLA_PDP_S_POINTER_PRODUCER_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_OP_ENABLE (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_OP_ENABLE_r = 32'b0;
    l2d_NVDLA_PDP_D_OP_ENABLE_r [0]  = rg_NVDLA_PDP_D_OP_ENABLE_OP_EN;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DST_RAM_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_DST_RAM_CFG_r = 32'b0;
    l2d_NVDLA_PDP_D_DST_RAM_CFG_r [0]  = rg_NVDLA_PDP_D_DST_RAM_CFG_DST_RAM_TYPE;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_r = 32'b0;
    l2d_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_r [12:0]  = rg_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_CUBE_IN_HEIGHT;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_PARTIAL_WIDTH_OUT (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_r = 32'b0;
    l2d_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_r [9:0]  = rg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_FIRST;
    l2d_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_r [19:10]  = rg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_LAST;
    l2d_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_r [29:20]  = rg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_MID;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_S_STATUS
  always @ (*) begin
    rg_NVDLA_PDP_S_STATUS_STATUS_0 =  h2l_NVDLA_PDP_S_STATUS_STATUS_0_w;
    rg_NVDLA_PDP_S_STATUS_STATUS_1 =  h2l_NVDLA_PDP_S_STATUS_STATUS_1_w;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_r = 32'b0;
    l2d_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_r [12:0]  = rg_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_CUBE_OUT_CHANNEL;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG
  always @ (*) begin
    reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_PAD_VALUE_1X_next = rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_PAD_VALUE_1X;
    l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_PAD_VALUE_1X_r = rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_PAD_VALUE_1X;
    if (d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_we) reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_PAD_VALUE_1X_next = d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_w [18:0] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_PAD_VALUE_1X <= #1 19'h0;
    end
    else begin
      rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_PAD_VALUE_1X <= #1  reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_PAD_VALUE_1X_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_RECIP_KERNEL_HEIGHT (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_r = 32'b0;
    l2d_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_r [16:0]  = rg_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_RECIP_KERNEL_HEIGHT;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_r = 32'b0;
    l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_r [18:0]  = rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_PAD_VALUE_1X;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DST_SURFACE_STRIDE
  always @ (*) begin
    reg_NVDLA_PDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_next = rg_NVDLA_PDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE;
    l2h_NVDLA_PDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_r = rg_NVDLA_PDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE;
    if (d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_we) reg_NVDLA_PDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_next = d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_w;
  end
  
  //------- reg assigns for NVDLA_PDP_D_DST_SURFACE_STRIDE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE <= #1 32'h0;
    end
    else begin
      rg_NVDLA_PDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE <= #1  reg_NVDLA_PDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL
  always @ (*) begin
    reg_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_CUBE_OUT_CHANNEL_next = rg_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_CUBE_OUT_CHANNEL;
    l2h_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_CUBE_OUT_CHANNEL_r = rg_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_CUBE_OUT_CHANNEL;
    if (d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_we) reg_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_CUBE_OUT_CHANNEL_next = d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_w [12:0] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_CUBE_OUT_CHANNEL <= #1 13'h0;
    end
    else begin
      rg_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_CUBE_OUT_CHANNEL <= #1  reg_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_CUBE_OUT_CHANNEL_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DATA_FORMAT
  always @ (*) begin
    reg_NVDLA_PDP_D_DATA_FORMAT_INPUT_DATA_next = rg_NVDLA_PDP_D_DATA_FORMAT_INPUT_DATA;
    l2h_NVDLA_PDP_D_DATA_FORMAT_INPUT_DATA_r = rg_NVDLA_PDP_D_DATA_FORMAT_INPUT_DATA;
    if (d2l_NVDLA_PDP_D_DATA_FORMAT_we) reg_NVDLA_PDP_D_DATA_FORMAT_INPUT_DATA_next = d2l_NVDLA_PDP_D_DATA_FORMAT_w [1:0] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_DATA_FORMAT
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_DATA_FORMAT_INPUT_DATA <= #1 2'h0;
    end
    else begin
      rg_NVDLA_PDP_D_DATA_FORMAT_INPUT_DATA <= #1  reg_NVDLA_PDP_D_DATA_FORMAT_INPUT_DATA_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_OPERATION_MODE_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_OPERATION_MODE_CFG_r = 32'b0;
    l2d_NVDLA_PDP_D_OPERATION_MODE_CFG_r [1:0]  = rg_NVDLA_PDP_D_OPERATION_MODE_CFG_POOLING_METHOD;
    l2d_NVDLA_PDP_D_OPERATION_MODE_CFG_r [4]  = rg_NVDLA_PDP_D_OPERATION_MODE_CFG_FLYING_MODE;
    l2d_NVDLA_PDP_D_OPERATION_MODE_CFG_r [15:8]  = rg_NVDLA_PDP_D_OPERATION_MODE_CFG_SPLIT_NUM;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_SRC_BASE_ADDR_HIGH (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_r = rg_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_SRC_BASE_ADDR_HIGH;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_r = 32'b0;
    l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_r [18:0]  = rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_PAD_VALUE_5X;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_POOLING_KERNEL_CFG
  always @ (*) begin
    reg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_WIDTH_next = rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_WIDTH;
    l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_WIDTH_r = rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_WIDTH;
    reg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_HEIGHT_next = rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_HEIGHT;
    l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_HEIGHT_r = rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_HEIGHT;
    reg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_WIDTH_next = rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_WIDTH;
    l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_WIDTH_r = rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_WIDTH;
    reg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_HEIGHT_next = rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_HEIGHT;
    l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_HEIGHT_r = rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_HEIGHT;
    if (d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_we) reg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_WIDTH_next = d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_w [3:0] ;
    if (d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_we) reg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_HEIGHT_next = d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_w [11:8] ;
    if (d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_we) reg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_WIDTH_next = d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_w [19:16] ;
    if (d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_we) reg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_HEIGHT_next = d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_w [23:20] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_POOLING_KERNEL_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_WIDTH <= #1 4'h0;
      rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_HEIGHT <= #1 4'h0;
      rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_WIDTH <= #1 4'h0;
      rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_HEIGHT <= #1 4'h0;
    end
    else begin
      rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_WIDTH <= #1  reg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_WIDTH_next;
      rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_HEIGHT <= #1  reg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_HEIGHT_next;
      rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_WIDTH <= #1  reg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_WIDTH_next;
      rg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_HEIGHT <= #1  reg_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_HEIGHT_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_RECIP_KERNEL_WIDTH (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_r = 32'b0;
    l2d_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_r [16:0]  = rg_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_RECIP_KERNEL_WIDTH;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DST_BASE_ADDR_LOW
  always @ (*) begin
    reg_NVDLA_PDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_next = rg_NVDLA_PDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW;
    l2h_NVDLA_PDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_r = rg_NVDLA_PDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW;
    if (d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_we) reg_NVDLA_PDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_next = d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_w;
  end
  
  //------- reg assigns for NVDLA_PDP_D_DST_BASE_ADDR_LOW
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW <= #1 32'h0;
    end
    else begin
      rg_NVDLA_PDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW <= #1  reg_NVDLA_PDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_SRC_SURFACE_STRIDE
  always @ (*) begin
    reg_NVDLA_PDP_D_SRC_SURFACE_STRIDE_SRC_SURFACE_STRIDE_next = rg_NVDLA_PDP_D_SRC_SURFACE_STRIDE_SRC_SURFACE_STRIDE;
    l2h_NVDLA_PDP_D_SRC_SURFACE_STRIDE_SRC_SURFACE_STRIDE_r = rg_NVDLA_PDP_D_SRC_SURFACE_STRIDE_SRC_SURFACE_STRIDE;
    if (d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_we) reg_NVDLA_PDP_D_SRC_SURFACE_STRIDE_SRC_SURFACE_STRIDE_next = d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_w;
  end
  
  //------- reg assigns for NVDLA_PDP_D_SRC_SURFACE_STRIDE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_SRC_SURFACE_STRIDE_SRC_SURFACE_STRIDE <= #1 32'h0;
    end
    else begin
      rg_NVDLA_PDP_D_SRC_SURFACE_STRIDE_SRC_SURFACE_STRIDE <= #1  reg_NVDLA_PDP_D_SRC_SURFACE_STRIDE_SRC_SURFACE_STRIDE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_r = 32'b0;
    l2d_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_r [12:0]  = rg_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_CUBE_IN_CHANNEL;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DST_BASE_ADDR_HIGH
  always @ (*) begin
    reg_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_next = rg_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH;
    l2h_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_r = rg_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH;
    if (d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_we) reg_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_next = d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_w;
  end
  
  //------- reg assigns for NVDLA_PDP_D_DST_BASE_ADDR_HIGH
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH <= #1 32'h0;
    end
    else begin
      rg_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH <= #1  reg_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DATA_CUBE_IN_WIDTH
  always @ (*) begin
    reg_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_CUBE_IN_WIDTH_next = rg_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_CUBE_IN_WIDTH;
    l2h_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_CUBE_IN_WIDTH_r = rg_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_CUBE_IN_WIDTH;
    if (d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_we) reg_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_CUBE_IN_WIDTH_next = d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_w [12:0] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_DATA_CUBE_IN_WIDTH
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_CUBE_IN_WIDTH <= #1 13'h0;
    end
    else begin
      rg_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_CUBE_IN_WIDTH <= #1  reg_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_CUBE_IN_WIDTH_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_PERF_WRITE_STALL (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_PERF_WRITE_STALL_r = rg_NVDLA_PDP_D_PERF_WRITE_STALL_PERF_WRITE_STALL;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_PERF_WRITE_STALL
  always @ (*) begin
    rg_NVDLA_PDP_D_PERF_WRITE_STALL_PERF_WRITE_STALL =  h2l_NVDLA_PDP_D_PERF_WRITE_STALL_PERF_WRITE_STALL_w;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_PERF_ENABLE
  always @ (*) begin
    reg_NVDLA_PDP_D_PERF_ENABLE_DMA_EN_next = rg_NVDLA_PDP_D_PERF_ENABLE_DMA_EN;
    l2h_NVDLA_PDP_D_PERF_ENABLE_DMA_EN_r = rg_NVDLA_PDP_D_PERF_ENABLE_DMA_EN;
    if (d2l_NVDLA_PDP_D_PERF_ENABLE_we) reg_NVDLA_PDP_D_PERF_ENABLE_DMA_EN_next = d2l_NVDLA_PDP_D_PERF_ENABLE_w [0] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_PERF_ENABLE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_PERF_ENABLE_DMA_EN <= #1 1'h0;
    end
    else begin
      rg_NVDLA_PDP_D_PERF_ENABLE_DMA_EN <= #1  reg_NVDLA_PDP_D_PERF_ENABLE_DMA_EN_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL
  always @ (*) begin
    reg_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_CUBE_IN_CHANNEL_next = rg_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_CUBE_IN_CHANNEL;
    l2h_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_CUBE_IN_CHANNEL_r = rg_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_CUBE_IN_CHANNEL;
    if (d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_we) reg_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_CUBE_IN_CHANNEL_next = d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_w [12:0] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_CUBE_IN_CHANNEL <= #1 13'h0;
    end
    else begin
      rg_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_CUBE_IN_CHANNEL <= #1  reg_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_CUBE_IN_CHANNEL_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_OPERATION_MODE_CFG
  always @ (*) begin
    reg_NVDLA_PDP_D_OPERATION_MODE_CFG_POOLING_METHOD_next = rg_NVDLA_PDP_D_OPERATION_MODE_CFG_POOLING_METHOD;
    l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_POOLING_METHOD_r = rg_NVDLA_PDP_D_OPERATION_MODE_CFG_POOLING_METHOD;
    reg_NVDLA_PDP_D_OPERATION_MODE_CFG_FLYING_MODE_next = rg_NVDLA_PDP_D_OPERATION_MODE_CFG_FLYING_MODE;
    l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_FLYING_MODE_r = rg_NVDLA_PDP_D_OPERATION_MODE_CFG_FLYING_MODE;
    reg_NVDLA_PDP_D_OPERATION_MODE_CFG_SPLIT_NUM_next = rg_NVDLA_PDP_D_OPERATION_MODE_CFG_SPLIT_NUM;
    l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_SPLIT_NUM_r = rg_NVDLA_PDP_D_OPERATION_MODE_CFG_SPLIT_NUM;
    if (d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_we) reg_NVDLA_PDP_D_OPERATION_MODE_CFG_POOLING_METHOD_next = d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_w [1:0] ;
    if (d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_we) reg_NVDLA_PDP_D_OPERATION_MODE_CFG_FLYING_MODE_next = d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_w [4] ;
    if (d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_we) reg_NVDLA_PDP_D_OPERATION_MODE_CFG_SPLIT_NUM_next = d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_w [15:8] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_OPERATION_MODE_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_OPERATION_MODE_CFG_POOLING_METHOD <= #1 2'h0;
      rg_NVDLA_PDP_D_OPERATION_MODE_CFG_FLYING_MODE <= #1 1'h0;
      rg_NVDLA_PDP_D_OPERATION_MODE_CFG_SPLIT_NUM <= #1 8'h0;
    end
    else begin
      rg_NVDLA_PDP_D_OPERATION_MODE_CFG_POOLING_METHOD <= #1  reg_NVDLA_PDP_D_OPERATION_MODE_CFG_POOLING_METHOD_next;
      rg_NVDLA_PDP_D_OPERATION_MODE_CFG_FLYING_MODE <= #1  reg_NVDLA_PDP_D_OPERATION_MODE_CFG_FLYING_MODE_next;
      rg_NVDLA_PDP_D_OPERATION_MODE_CFG_SPLIT_NUM <= #1  reg_NVDLA_PDP_D_OPERATION_MODE_CFG_SPLIT_NUM_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_r = 32'b0;
    l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_r [18:0]  = rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_PAD_VALUE_6X;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DST_RAM_CFG
  always @ (*) begin
    reg_NVDLA_PDP_D_DST_RAM_CFG_DST_RAM_TYPE_next = rg_NVDLA_PDP_D_DST_RAM_CFG_DST_RAM_TYPE;
    l2h_NVDLA_PDP_D_DST_RAM_CFG_DST_RAM_TYPE_r = rg_NVDLA_PDP_D_DST_RAM_CFG_DST_RAM_TYPE;
    if (d2l_NVDLA_PDP_D_DST_RAM_CFG_we) reg_NVDLA_PDP_D_DST_RAM_CFG_DST_RAM_TYPE_next = d2l_NVDLA_PDP_D_DST_RAM_CFG_w [0] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_DST_RAM_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_DST_RAM_CFG_DST_RAM_TYPE <= #1 1'h0;
    end
    else begin
      rg_NVDLA_PDP_D_DST_RAM_CFG_DST_RAM_TYPE <= #1  reg_NVDLA_PDP_D_DST_RAM_CFG_DST_RAM_TYPE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_RECIP_KERNEL_HEIGHT
  always @ (*) begin
    reg_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_RECIP_KERNEL_HEIGHT_next = rg_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_RECIP_KERNEL_HEIGHT;
    l2h_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_RECIP_KERNEL_HEIGHT_r = rg_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_RECIP_KERNEL_HEIGHT;
    if (d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_we) reg_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_RECIP_KERNEL_HEIGHT_next = d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_w [16:0] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_RECIP_KERNEL_HEIGHT
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_RECIP_KERNEL_HEIGHT <= #1 17'h0;
    end
    else begin
      rg_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_RECIP_KERNEL_HEIGHT <= #1  reg_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_RECIP_KERNEL_HEIGHT_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_PARTIAL_WIDTH_OUT
  always @ (*) begin
    reg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_FIRST_next = rg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_FIRST;
    l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_FIRST_r = rg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_FIRST;
    reg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_LAST_next = rg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_LAST;
    l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_LAST_r = rg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_LAST;
    reg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_MID_next = rg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_MID;
    l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_MID_r = rg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_MID;
    if (d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_we) reg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_FIRST_next = d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_w [9:0] ;
    if (d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_we) reg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_LAST_next = d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_w [19:10] ;
    if (d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_we) reg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_MID_next = d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_w [29:20] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_PARTIAL_WIDTH_OUT
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_FIRST <= #1 10'h0;
      rg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_LAST <= #1 10'h0;
      rg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_MID <= #1 10'h0;
    end
    else begin
      rg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_FIRST <= #1  reg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_FIRST_next;
      rg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_LAST <= #1  reg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_LAST_next;
      rg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_MID <= #1  reg_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_MID_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG
  always @ (*) begin
    reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_PAD_VALUE_7X_next = rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_PAD_VALUE_7X;
    l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_PAD_VALUE_7X_r = rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_PAD_VALUE_7X;
    if (d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_we) reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_PAD_VALUE_7X_next = d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_w [18:0] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_PAD_VALUE_7X <= #1 19'h0;
    end
    else begin
      rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_PAD_VALUE_7X <= #1  reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_PAD_VALUE_7X_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DST_SURFACE_STRIDE (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_DST_SURFACE_STRIDE_r = rg_NVDLA_PDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DST_BASE_ADDR_HIGH (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_r = rg_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_RECIP_KERNEL_WIDTH
  always @ (*) begin
    reg_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_RECIP_KERNEL_WIDTH_next = rg_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_RECIP_KERNEL_WIDTH;
    l2h_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_RECIP_KERNEL_WIDTH_r = rg_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_RECIP_KERNEL_WIDTH;
    if (d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_we) reg_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_RECIP_KERNEL_WIDTH_next = d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_w [16:0] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_RECIP_KERNEL_WIDTH
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_RECIP_KERNEL_WIDTH <= #1 17'h0;
    end
    else begin
      rg_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_RECIP_KERNEL_WIDTH <= #1  reg_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_RECIP_KERNEL_WIDTH_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_SRC_LINE_STRIDE
  always @ (*) begin
    reg_NVDLA_PDP_D_SRC_LINE_STRIDE_SRC_LINE_STRIDE_next = rg_NVDLA_PDP_D_SRC_LINE_STRIDE_SRC_LINE_STRIDE;
    l2h_NVDLA_PDP_D_SRC_LINE_STRIDE_SRC_LINE_STRIDE_r = rg_NVDLA_PDP_D_SRC_LINE_STRIDE_SRC_LINE_STRIDE;
    if (d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_we) reg_NVDLA_PDP_D_SRC_LINE_STRIDE_SRC_LINE_STRIDE_next = d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_w;
  end
  
  //------- reg assigns for NVDLA_PDP_D_SRC_LINE_STRIDE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_SRC_LINE_STRIDE_SRC_LINE_STRIDE <= #1 32'h0;
    end
    else begin
      rg_NVDLA_PDP_D_SRC_LINE_STRIDE_SRC_LINE_STRIDE <= #1  reg_NVDLA_PDP_D_SRC_LINE_STRIDE_SRC_LINE_STRIDE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_r = 32'b0;
    l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_r [18:0]  = rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_PAD_VALUE_4X;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH
  always @ (*) begin
    reg_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_CUBE_OUT_WIDTH_next = rg_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_CUBE_OUT_WIDTH;
    l2h_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_CUBE_OUT_WIDTH_r = rg_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_CUBE_OUT_WIDTH;
    if (d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_we) reg_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_CUBE_OUT_WIDTH_next = d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_w [12:0] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_CUBE_OUT_WIDTH <= #1 13'h0;
    end
    else begin
      rg_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_CUBE_OUT_WIDTH <= #1  reg_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_CUBE_OUT_WIDTH_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG
  always @ (*) begin
    reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_PAD_VALUE_6X_next = rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_PAD_VALUE_6X;
    l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_PAD_VALUE_6X_r = rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_PAD_VALUE_6X;
    if (d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_we) reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_PAD_VALUE_6X_next = d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_w [18:0] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_PAD_VALUE_6X <= #1 19'h0;
    end
    else begin
      rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_PAD_VALUE_6X <= #1  reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_PAD_VALUE_6X_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_POOLING_PADDING_CFG
  always @ (*) begin
    reg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_LEFT_next = rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_LEFT;
    l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_LEFT_r = rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_LEFT;
    reg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_TOP_next = rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_TOP;
    l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_TOP_r = rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_TOP;
    reg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_RIGHT_next = rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_RIGHT;
    l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_RIGHT_r = rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_RIGHT;
    reg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_BOTTOM_next = rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_BOTTOM;
    l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_BOTTOM_r = rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_BOTTOM;
    if (d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_we) reg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_LEFT_next = d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_w [2:0] ;
    if (d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_we) reg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_TOP_next = d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_w [6:4] ;
    if (d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_we) reg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_RIGHT_next = d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_w [10:8] ;
    if (d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_we) reg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_BOTTOM_next = d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_w [14:12] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_POOLING_PADDING_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_LEFT <= #1 3'h0;
      rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_TOP <= #1 3'h0;
      rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_RIGHT <= #1 3'h0;
      rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_BOTTOM <= #1 3'h0;
    end
    else begin
      rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_LEFT <= #1  reg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_LEFT_next;
      rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_TOP <= #1  reg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_TOP_next;
      rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_RIGHT <= #1  reg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_RIGHT_next;
      rg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_BOTTOM <= #1  reg_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_BOTTOM_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG
  always @ (*) begin
    reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_PAD_VALUE_5X_next = rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_PAD_VALUE_5X;
    l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_PAD_VALUE_5X_r = rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_PAD_VALUE_5X;
    if (d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_we) reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_PAD_VALUE_5X_next = d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_w [18:0] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_PAD_VALUE_5X <= #1 19'h0;
    end
    else begin
      rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_PAD_VALUE_5X <= #1  reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_PAD_VALUE_5X_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_NAN_FLUSH_TO_ZERO
  always @ (*) begin
    reg_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_NAN_TO_ZERO_next = rg_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_NAN_TO_ZERO;
    l2h_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_NAN_TO_ZERO_r = rg_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_NAN_TO_ZERO;
    if (d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_we) reg_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_NAN_TO_ZERO_next = d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_w [0] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_NAN_FLUSH_TO_ZERO
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_NAN_TO_ZERO <= #1 1'h0;
    end
    else begin
      rg_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_NAN_TO_ZERO <= #1  reg_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_NAN_TO_ZERO_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_SRC_BASE_ADDR_LOW
  always @ (*) begin
    reg_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_SRC_BASE_ADDR_LOW_next = rg_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_SRC_BASE_ADDR_LOW;
    l2h_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_SRC_BASE_ADDR_LOW_r = rg_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_SRC_BASE_ADDR_LOW;
    if (d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_we) reg_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_SRC_BASE_ADDR_LOW_next = d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_w;
  end
  
  //------- reg assigns for NVDLA_PDP_D_SRC_BASE_ADDR_LOW
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_SRC_BASE_ADDR_LOW <= #1 32'h0;
    end
    else begin
      rg_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_SRC_BASE_ADDR_LOW <= #1  reg_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_SRC_BASE_ADDR_LOW_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_r = 32'b0;
    l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_r [18:0]  = rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_PAD_VALUE_7X;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_PARTIAL_WIDTH_IN
  always @ (*) begin
    reg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_FIRST_next = rg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_FIRST;
    l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_FIRST_r = rg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_FIRST;
    reg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_LAST_next = rg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_LAST;
    l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_LAST_r = rg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_LAST;
    reg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_MID_next = rg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_MID;
    l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_MID_r = rg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_MID;
    if (d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_we) reg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_FIRST_next = d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_w [9:0] ;
    if (d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_we) reg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_LAST_next = d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_w [19:10] ;
    if (d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_we) reg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_MID_next = d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_w [29:20] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_PARTIAL_WIDTH_IN
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_FIRST <= #1 10'h0;
      rg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_LAST <= #1 10'h0;
      rg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_MID <= #1 10'h0;
    end
    else begin
      rg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_FIRST <= #1  reg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_FIRST_next;
      rg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_LAST <= #1  reg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_LAST_next;
      rg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_MID <= #1  reg_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_MID_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_SRC_BASE_ADDR_LOW (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_r = rg_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_SRC_BASE_ADDR_LOW;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT
  always @ (*) begin
    reg_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_CUBE_OUT_HEIGHT_next = rg_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_CUBE_OUT_HEIGHT;
    l2h_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_CUBE_OUT_HEIGHT_r = rg_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_CUBE_OUT_HEIGHT;
    if (d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_we) reg_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_CUBE_OUT_HEIGHT_next = d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_w [12:0] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_CUBE_OUT_HEIGHT <= #1 13'h0;
    end
    else begin
      rg_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_CUBE_OUT_HEIGHT <= #1  reg_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_CUBE_OUT_HEIGHT_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_S_POINTER (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_S_POINTER_r = 32'b0;
    l2d_NVDLA_PDP_S_POINTER_r [0]  = rg_NVDLA_PDP_S_POINTER_PRODUCER;
    l2d_NVDLA_PDP_S_POINTER_r [16]  = rg_NVDLA_PDP_S_POINTER_CONSUMER;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DATA_FORMAT (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_DATA_FORMAT_r = 32'b0;
    l2d_NVDLA_PDP_D_DATA_FORMAT_r [1:0]  = rg_NVDLA_PDP_D_DATA_FORMAT_INPUT_DATA;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_NAN_OUTPUT_NUM (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_NAN_OUTPUT_NUM_r = rg_NVDLA_PDP_D_NAN_OUTPUT_NUM_NAN_OUTPUT_NUM;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_DATA_CUBE_IN_WIDTH (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_r = 32'b0;
    l2d_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_r [12:0]  = rg_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_CUBE_IN_WIDTH;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_NAN_INPUT_NUM (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_NAN_INPUT_NUM_r = rg_NVDLA_PDP_D_NAN_INPUT_NUM_NAN_INPUT_NUM;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG
  always @ (*) begin
    reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_PAD_VALUE_4X_next = rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_PAD_VALUE_4X;
    l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_PAD_VALUE_4X_r = rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_PAD_VALUE_4X;
    if (d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_we) reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_PAD_VALUE_4X_next = d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_w [18:0] ;
  end
  
  //------- reg assigns for NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_PAD_VALUE_4X <= #1 19'h0;
    end
    else begin
      rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_PAD_VALUE_4X <= #1  reg_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_PAD_VALUE_4X_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_SRC_BASE_ADDR_HIGH
  always @ (*) begin
    reg_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_SRC_BASE_ADDR_HIGH_next = rg_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_SRC_BASE_ADDR_HIGH;
    l2h_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_SRC_BASE_ADDR_HIGH_r = rg_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_SRC_BASE_ADDR_HIGH;
    if (d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_we) reg_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_SRC_BASE_ADDR_HIGH_next = d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_w;
  end
  
  //------- reg assigns for NVDLA_PDP_D_SRC_BASE_ADDR_HIGH
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_SRC_BASE_ADDR_HIGH <= #1 32'h0;
    end
    else begin
      rg_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_SRC_BASE_ADDR_HIGH <= #1  reg_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_SRC_BASE_ADDR_HIGH_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_CYA
  always @ (*) begin
    reg_NVDLA_PDP_D_CYA_CYA_next = rg_NVDLA_PDP_D_CYA_CYA;
    l2h_NVDLA_PDP_D_CYA_CYA_r = rg_NVDLA_PDP_D_CYA_CYA;
    if (d2l_NVDLA_PDP_D_CYA_we) reg_NVDLA_PDP_D_CYA_CYA_next = d2l_NVDLA_PDP_D_CYA_w;
  end
  
  //------- reg assigns for NVDLA_PDP_D_CYA
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_PDP_D_CYA_CYA <= #1 32'h0;
    end
    else begin
      rg_NVDLA_PDP_D_CYA_CYA <= #1  reg_NVDLA_PDP_D_CYA_CYA_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_r = 32'b0;
    l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_r [18:0]  = rg_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_PAD_VALUE_3X;
  end
  
  //------- combinatorial assigns for NVDLA_PDP_D_CYA (pio read data)
  always @ (*) begin
    l2d_NVDLA_PDP_D_CYA_r = rg_NVDLA_PDP_D_CYA_CYA;
  end
  
endmodule

//
//---------- module addrmap_NVDLA_jrdl_decode
//
module addrmap_NVDLA_jrdl_decode
(
  clk,
  reset,
  leaf_dec_wr_data,
  leaf_dec_addr,
  leaf_dec_block_sel,
  leaf_dec_valid,
  leaf_dec_wr_dvld,
  leaf_dec_cycle,
  leaf_dec_wr_width,
  l2d_NVDLA_PDP_S_STATUS_r,
  l2d_NVDLA_PDP_S_POINTER_r,
  l2d_NVDLA_PDP_D_OP_ENABLE_r,
  l2d_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_r,
  l2d_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_r,
  l2d_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_r,
  l2d_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_r,
  l2d_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_r,
  l2d_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_r,
  l2d_NVDLA_PDP_D_OPERATION_MODE_CFG_r,
  l2d_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_r,
  l2d_NVDLA_PDP_D_PARTIAL_WIDTH_IN_r,
  l2d_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_r,
  l2d_NVDLA_PDP_D_POOLING_KERNEL_CFG_r,
  l2d_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_r,
  l2d_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_r,
  l2d_NVDLA_PDP_D_POOLING_PADDING_CFG_r,
  l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_r,
  l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_r,
  l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_r,
  l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_r,
  l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_r,
  l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_r,
  l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_r,
  l2d_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_r,
  l2d_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_r,
  l2d_NVDLA_PDP_D_SRC_LINE_STRIDE_r,
  l2d_NVDLA_PDP_D_SRC_SURFACE_STRIDE_r,
  l2d_NVDLA_PDP_D_DST_BASE_ADDR_LOW_r,
  l2d_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_r,
  l2d_NVDLA_PDP_D_DST_LINE_STRIDE_r,
  l2d_NVDLA_PDP_D_DST_SURFACE_STRIDE_r,
  l2d_NVDLA_PDP_D_DST_RAM_CFG_r,
  l2d_NVDLA_PDP_D_DATA_FORMAT_r,
  l2d_NVDLA_PDP_D_INF_INPUT_NUM_r,
  l2d_NVDLA_PDP_D_NAN_INPUT_NUM_r,
  l2d_NVDLA_PDP_D_NAN_OUTPUT_NUM_r,
  l2d_NVDLA_PDP_D_PERF_ENABLE_r,
  l2d_NVDLA_PDP_D_PERF_WRITE_STALL_r,
  l2d_NVDLA_PDP_D_CYA_r,

  dec_leaf_rd_data,
  dec_leaf_ack,
  dec_leaf_nack,
  dec_leaf_accept,
  dec_leaf_reject,
  dec_leaf_retry_atomic,
  dec_leaf_data_width,
  d2l_NVDLA_PDP_S_STATUS_w,
  d2l_NVDLA_PDP_S_STATUS_we,
  d2l_NVDLA_PDP_S_STATUS_re,
  d2l_NVDLA_PDP_S_POINTER_w,
  d2l_NVDLA_PDP_S_POINTER_we,
  d2l_NVDLA_PDP_S_POINTER_re,
  d2l_NVDLA_PDP_D_OP_ENABLE_w,
  d2l_NVDLA_PDP_D_OP_ENABLE_we,
  d2l_NVDLA_PDP_D_OP_ENABLE_re,
  d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_w,
  d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_we,
  d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_re,
  d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_w,
  d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_we,
  d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_re,
  d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_w,
  d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_we,
  d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_re,
  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_w,
  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_we,
  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_re,
  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_w,
  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_we,
  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_re,
  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_w,
  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_we,
  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_re,
  d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_w,
  d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_we,
  d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_re,
  d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_w,
  d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_we,
  d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_re,
  d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_w,
  d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_we,
  d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_re,
  d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_w,
  d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_we,
  d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_re,
  d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_w,
  d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_we,
  d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_re,
  d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_w,
  d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_we,
  d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_re,
  d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_w,
  d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_we,
  d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_re,
  d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_w,
  d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_we,
  d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_re,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_w,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_we,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_re,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_w,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_we,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_re,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_w,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_we,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_re,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_w,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_we,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_re,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_w,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_we,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_re,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_w,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_we,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_re,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_w,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_we,
  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_re,
  d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_w,
  d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_we,
  d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_re,
  d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_w,
  d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_we,
  d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_re,
  d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_w,
  d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_we,
  d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_re,
  d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_w,
  d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_we,
  d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_re,
  d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_w,
  d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_we,
  d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_re,
  d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_w,
  d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_we,
  d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_re,
  d2l_NVDLA_PDP_D_DST_LINE_STRIDE_w,
  d2l_NVDLA_PDP_D_DST_LINE_STRIDE_we,
  d2l_NVDLA_PDP_D_DST_LINE_STRIDE_re,
  d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_w,
  d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_we,
  d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_re,
  d2l_NVDLA_PDP_D_DST_RAM_CFG_w,
  d2l_NVDLA_PDP_D_DST_RAM_CFG_we,
  d2l_NVDLA_PDP_D_DST_RAM_CFG_re,
  d2l_NVDLA_PDP_D_DATA_FORMAT_w,
  d2l_NVDLA_PDP_D_DATA_FORMAT_we,
  d2l_NVDLA_PDP_D_DATA_FORMAT_re,
  d2l_NVDLA_PDP_D_INF_INPUT_NUM_w,
  d2l_NVDLA_PDP_D_INF_INPUT_NUM_we,
  d2l_NVDLA_PDP_D_INF_INPUT_NUM_re,
  d2l_NVDLA_PDP_D_NAN_INPUT_NUM_w,
  d2l_NVDLA_PDP_D_NAN_INPUT_NUM_we,
  d2l_NVDLA_PDP_D_NAN_INPUT_NUM_re,
  d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_w,
  d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_we,
  d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_re,
  d2l_NVDLA_PDP_D_PERF_ENABLE_w,
  d2l_NVDLA_PDP_D_PERF_ENABLE_we,
  d2l_NVDLA_PDP_D_PERF_ENABLE_re,
  d2l_NVDLA_PDP_D_PERF_WRITE_STALL_w,
  d2l_NVDLA_PDP_D_PERF_WRITE_STALL_we,
  d2l_NVDLA_PDP_D_PERF_WRITE_STALL_re,
  d2l_NVDLA_PDP_D_CYA_w,
  d2l_NVDLA_PDP_D_CYA_we,
  d2l_NVDLA_PDP_D_CYA_re );

  //------- inputs
  input    clk;
  input    reset;
  input     [31:0] leaf_dec_wr_data;
  input     [39:0] leaf_dec_addr;
  input    leaf_dec_block_sel;
  input    leaf_dec_valid;
  input    leaf_dec_wr_dvld;
  input     [1:0] leaf_dec_cycle;
  input     [2:0] leaf_dec_wr_width;
  input     [31:0] l2d_NVDLA_PDP_S_STATUS_r;
  input     [31:0] l2d_NVDLA_PDP_S_POINTER_r;
  input     [31:0] l2d_NVDLA_PDP_D_OP_ENABLE_r;
  input     [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_r;
  input     [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_r;
  input     [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_r;
  input     [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_r;
  input     [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_r;
  input     [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_r;
  input     [31:0] l2d_NVDLA_PDP_D_OPERATION_MODE_CFG_r;
  input     [31:0] l2d_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_r;
  input     [31:0] l2d_NVDLA_PDP_D_PARTIAL_WIDTH_IN_r;
  input     [31:0] l2d_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_r;
  input     [31:0] l2d_NVDLA_PDP_D_POOLING_KERNEL_CFG_r;
  input     [31:0] l2d_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_r;
  input     [31:0] l2d_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_r;
  input     [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_CFG_r;
  input     [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_r;
  input     [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_r;
  input     [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_r;
  input     [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_r;
  input     [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_r;
  input     [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_r;
  input     [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_r;
  input     [31:0] l2d_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_r;
  input     [31:0] l2d_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_r;
  input     [31:0] l2d_NVDLA_PDP_D_SRC_LINE_STRIDE_r;
  input     [31:0] l2d_NVDLA_PDP_D_SRC_SURFACE_STRIDE_r;
  input     [31:0] l2d_NVDLA_PDP_D_DST_BASE_ADDR_LOW_r;
  input     [31:0] l2d_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_r;
  input     [31:0] l2d_NVDLA_PDP_D_DST_LINE_STRIDE_r;
  input     [31:0] l2d_NVDLA_PDP_D_DST_SURFACE_STRIDE_r;
  input     [31:0] l2d_NVDLA_PDP_D_DST_RAM_CFG_r;
  input     [31:0] l2d_NVDLA_PDP_D_DATA_FORMAT_r;
  input     [31:0] l2d_NVDLA_PDP_D_INF_INPUT_NUM_r;
  input     [31:0] l2d_NVDLA_PDP_D_NAN_INPUT_NUM_r;
  input     [31:0] l2d_NVDLA_PDP_D_NAN_OUTPUT_NUM_r;
  input     [31:0] l2d_NVDLA_PDP_D_PERF_ENABLE_r;
  input     [31:0] l2d_NVDLA_PDP_D_PERF_WRITE_STALL_r;
  input     [31:0] l2d_NVDLA_PDP_D_CYA_r;

  //------- outputs
  output     [31:0] dec_leaf_rd_data;
  output    dec_leaf_ack;
  output    dec_leaf_nack;
  output    dec_leaf_accept;
  output    dec_leaf_reject;
  output    dec_leaf_retry_atomic;
  output     [2:0] dec_leaf_data_width;
  output     [31:0] d2l_NVDLA_PDP_S_STATUS_w;
  output    d2l_NVDLA_PDP_S_STATUS_we;
  output    d2l_NVDLA_PDP_S_STATUS_re;
  output     [31:0] d2l_NVDLA_PDP_S_POINTER_w;
  output    d2l_NVDLA_PDP_S_POINTER_we;
  output    d2l_NVDLA_PDP_S_POINTER_re;
  output     [31:0] d2l_NVDLA_PDP_D_OP_ENABLE_w;
  output    d2l_NVDLA_PDP_D_OP_ENABLE_we;
  output    d2l_NVDLA_PDP_D_OP_ENABLE_re;
  output     [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_w;
  output    d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_we;
  output    d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_re;
  output     [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_w;
  output    d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_we;
  output    d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_re;
  output     [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_w;
  output    d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_we;
  output    d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_re;
  output     [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_w;
  output    d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_we;
  output    d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_re;
  output     [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_w;
  output    d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_we;
  output    d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_re;
  output     [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_w;
  output    d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_we;
  output    d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_re;
  output     [31:0] d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_w;
  output    d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_we;
  output    d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_re;
  output     [31:0] d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_w;
  output    d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_we;
  output    d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_re;
  output     [31:0] d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_w;
  output    d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_we;
  output    d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_re;
  output     [31:0] d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_w;
  output    d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_we;
  output    d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_re;
  output     [31:0] d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_w;
  output    d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_we;
  output    d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_re;
  output     [31:0] d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_w;
  output    d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_we;
  output    d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_re;
  output     [31:0] d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_w;
  output    d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_we;
  output    d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_re;
  output     [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_w;
  output    d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_we;
  output    d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_re;
  output     [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_w;
  output    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_we;
  output    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_re;
  output     [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_w;
  output    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_we;
  output    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_re;
  output     [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_w;
  output    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_we;
  output    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_re;
  output     [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_w;
  output    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_we;
  output    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_re;
  output     [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_w;
  output    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_we;
  output    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_re;
  output     [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_w;
  output    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_we;
  output    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_re;
  output     [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_w;
  output    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_we;
  output    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_re;
  output     [31:0] d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_w;
  output    d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_we;
  output    d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_re;
  output     [31:0] d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_w;
  output    d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_we;
  output    d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_re;
  output     [31:0] d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_w;
  output    d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_we;
  output    d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_re;
  output     [31:0] d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_w;
  output    d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_we;
  output    d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_re;
  output     [31:0] d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_w;
  output    d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_we;
  output    d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_re;
  output     [31:0] d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_w;
  output    d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_we;
  output    d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_re;
  output     [31:0] d2l_NVDLA_PDP_D_DST_LINE_STRIDE_w;
  output    d2l_NVDLA_PDP_D_DST_LINE_STRIDE_we;
  output    d2l_NVDLA_PDP_D_DST_LINE_STRIDE_re;
  output     [31:0] d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_w;
  output    d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_we;
  output    d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_re;
  output     [31:0] d2l_NVDLA_PDP_D_DST_RAM_CFG_w;
  output    d2l_NVDLA_PDP_D_DST_RAM_CFG_we;
  output    d2l_NVDLA_PDP_D_DST_RAM_CFG_re;
  output     [31:0] d2l_NVDLA_PDP_D_DATA_FORMAT_w;
  output    d2l_NVDLA_PDP_D_DATA_FORMAT_we;
  output    d2l_NVDLA_PDP_D_DATA_FORMAT_re;
  output     [31:0] d2l_NVDLA_PDP_D_INF_INPUT_NUM_w;
  output    d2l_NVDLA_PDP_D_INF_INPUT_NUM_we;
  output    d2l_NVDLA_PDP_D_INF_INPUT_NUM_re;
  output     [31:0] d2l_NVDLA_PDP_D_NAN_INPUT_NUM_w;
  output    d2l_NVDLA_PDP_D_NAN_INPUT_NUM_we;
  output    d2l_NVDLA_PDP_D_NAN_INPUT_NUM_re;
  output     [31:0] d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_w;
  output    d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_we;
  output    d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_re;
  output     [31:0] d2l_NVDLA_PDP_D_PERF_ENABLE_w;
  output    d2l_NVDLA_PDP_D_PERF_ENABLE_we;
  output    d2l_NVDLA_PDP_D_PERF_ENABLE_re;
  output     [31:0] d2l_NVDLA_PDP_D_PERF_WRITE_STALL_w;
  output    d2l_NVDLA_PDP_D_PERF_WRITE_STALL_we;
  output    d2l_NVDLA_PDP_D_PERF_WRITE_STALL_re;
  output     [31:0] d2l_NVDLA_PDP_D_CYA_w;
  output    d2l_NVDLA_PDP_D_CYA_we;
  output    d2l_NVDLA_PDP_D_CYA_re;


  //------- wire defines
  wire   [31:0] pio_dec_write_data;
  wire   [15:2] pio_dec_address;
  wire  pio_dec_read;
  wire  pio_dec_write;
  wire   [39:0] block_sel_addr;
  wire  block_sel;
  wire  leaf_dec_valid_active;
  wire  leaf_dec_wr_dvld_active;
  
  //------- reg defines
  reg   [31:0] d2l_NVDLA_PDP_S_STATUS_w;
  reg  d2l_NVDLA_PDP_S_STATUS_we;
  reg  d2l_NVDLA_PDP_S_STATUS_re;
  reg   [31:0] d2l_NVDLA_PDP_S_POINTER_w;
  reg  d2l_NVDLA_PDP_S_POINTER_we;
  reg  d2l_NVDLA_PDP_S_POINTER_re;
  reg   [31:0] d2l_NVDLA_PDP_D_OP_ENABLE_w;
  reg  d2l_NVDLA_PDP_D_OP_ENABLE_we;
  reg  d2l_NVDLA_PDP_D_OP_ENABLE_re;
  reg   [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_w;
  reg  d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_we;
  reg  d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_re;
  reg   [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_w;
  reg  d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_we;
  reg  d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_re;
  reg   [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_w;
  reg  d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_we;
  reg  d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_re;
  reg   [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_w;
  reg  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_we;
  reg  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_re;
  reg   [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_w;
  reg  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_we;
  reg  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_re;
  reg   [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_w;
  reg  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_we;
  reg  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_re;
  reg   [31:0] d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_w;
  reg  d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_we;
  reg  d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_re;
  reg   [31:0] d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_w;
  reg  d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_we;
  reg  d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_re;
  reg   [31:0] d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_w;
  reg  d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_we;
  reg  d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_re;
  reg   [31:0] d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_w;
  reg  d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_we;
  reg  d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_re;
  reg   [31:0] d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_w;
  reg  d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_we;
  reg  d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_re;
  reg   [31:0] d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_w;
  reg  d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_we;
  reg  d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_re;
  reg   [31:0] d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_w;
  reg  d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_we;
  reg  d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_re;
  reg   [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_w;
  reg  d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_we;
  reg  d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_re;
  reg   [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_w;
  reg  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_we;
  reg  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_re;
  reg   [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_w;
  reg  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_we;
  reg  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_re;
  reg   [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_w;
  reg  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_we;
  reg  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_re;
  reg   [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_w;
  reg  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_we;
  reg  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_re;
  reg   [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_w;
  reg  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_we;
  reg  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_re;
  reg   [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_w;
  reg  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_we;
  reg  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_re;
  reg   [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_w;
  reg  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_we;
  reg  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_re;
  reg   [31:0] d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_w;
  reg  d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_we;
  reg  d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_re;
  reg   [31:0] d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_w;
  reg  d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_we;
  reg  d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_re;
  reg   [31:0] d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_w;
  reg  d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_we;
  reg  d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_re;
  reg   [31:0] d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_w;
  reg  d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_we;
  reg  d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_re;
  reg   [31:0] d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_w;
  reg  d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_we;
  reg  d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_re;
  reg   [31:0] d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_w;
  reg  d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_we;
  reg  d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_re;
  reg   [31:0] d2l_NVDLA_PDP_D_DST_LINE_STRIDE_w;
  reg  d2l_NVDLA_PDP_D_DST_LINE_STRIDE_we;
  reg  d2l_NVDLA_PDP_D_DST_LINE_STRIDE_re;
  reg   [31:0] d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_w;
  reg  d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_we;
  reg  d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_re;
  reg   [31:0] d2l_NVDLA_PDP_D_DST_RAM_CFG_w;
  reg  d2l_NVDLA_PDP_D_DST_RAM_CFG_we;
  reg  d2l_NVDLA_PDP_D_DST_RAM_CFG_re;
  reg   [31:0] d2l_NVDLA_PDP_D_DATA_FORMAT_w;
  reg  d2l_NVDLA_PDP_D_DATA_FORMAT_we;
  reg  d2l_NVDLA_PDP_D_DATA_FORMAT_re;
  reg   [31:0] d2l_NVDLA_PDP_D_INF_INPUT_NUM_w;
  reg  d2l_NVDLA_PDP_D_INF_INPUT_NUM_we;
  reg  d2l_NVDLA_PDP_D_INF_INPUT_NUM_re;
  reg   [31:0] d2l_NVDLA_PDP_D_NAN_INPUT_NUM_w;
  reg  d2l_NVDLA_PDP_D_NAN_INPUT_NUM_we;
  reg  d2l_NVDLA_PDP_D_NAN_INPUT_NUM_re;
  reg   [31:0] d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_w;
  reg  d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_we;
  reg  d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_re;
  reg   [31:0] d2l_NVDLA_PDP_D_PERF_ENABLE_w;
  reg  d2l_NVDLA_PDP_D_PERF_ENABLE_we;
  reg  d2l_NVDLA_PDP_D_PERF_ENABLE_re;
  reg   [31:0] d2l_NVDLA_PDP_D_PERF_WRITE_STALL_w;
  reg  d2l_NVDLA_PDP_D_PERF_WRITE_STALL_we;
  reg  d2l_NVDLA_PDP_D_PERF_WRITE_STALL_re;
  reg   [31:0] d2l_NVDLA_PDP_D_CYA_w;
  reg  d2l_NVDLA_PDP_D_CYA_we;
  reg  d2l_NVDLA_PDP_D_CYA_re;
  reg  leaf_dec_valid_hld1;
  reg  leaf_dec_valid_hld1_next;
  reg  leaf_dec_wr_dvld_hld1;
  reg  leaf_dec_wr_dvld_hld1_next;
  reg  pio_write_active;
  reg  pio_read_active;
  reg   [15:2] pio_dec_address_d1;
  reg   [31:0] pio_dec_write_data_d1;
  reg   [31:0] dec_pio_read_data;
  reg   [31:0] dec_pio_read_data_d1;
  reg  dec_pio_ack;
  reg  dec_pio_nack;
  reg  dec_pio_ack_next;
  reg  dec_pio_nack_next;
  reg  pio_internal_ack;
  reg  pio_internal_nack;
  reg  pio_external_ack;
  reg  pio_external_nack;
  reg  pio_external_ack_next;
  reg  pio_external_nack_next;
  reg  pio_no_acks;
  reg  pio_activate_write;
  reg  pio_activate_read;
  reg   [31:0] dec_pio_read_data_next;
  reg  external_transaction_active;
  
  
  //------- assigns
  assign  pio_dec_write_data = leaf_dec_wr_data;
  assign  dec_leaf_rd_data = dec_pio_read_data;
  assign  dec_leaf_ack = dec_pio_ack;
  assign  dec_leaf_nack = dec_pio_nack;
  assign  pio_dec_address = leaf_dec_addr [15:2] ;
  assign  block_sel_addr = 40'h0;
  assign  block_sel = leaf_dec_block_sel;
  assign  leaf_dec_wr_dvld_active = leaf_dec_wr_dvld | leaf_dec_wr_dvld_hld1;
  assign  leaf_dec_valid_active = leaf_dec_valid | leaf_dec_valid_hld1;
  assign  dec_leaf_accept = leaf_dec_valid & block_sel;
  assign  dec_leaf_reject = leaf_dec_valid & ~block_sel;
  assign  pio_dec_read = block_sel & leaf_dec_valid_active & (leaf_dec_cycle == 2'b10);
  assign  pio_dec_write = block_sel & leaf_dec_wr_dvld_active & (leaf_dec_cycle[1] == 1'b0);
  assign  dec_leaf_retry_atomic = 1'b0;
  assign  dec_leaf_data_width = 3'b0;
  
  //------- combinatorial assigns for pio read data
  always @ (*) begin
    dec_pio_read_data = dec_pio_read_data_d1;
  end
  
  //------- reg assigns for pio read data
  always @ (posedge clk) begin
    if (reset) begin
      dec_pio_read_data_d1 <= #1  32'b0;
    end
    else begin
      dec_pio_read_data_d1 <= #1 dec_pio_read_data_next;
    end
  end
  
  //------- reg assigns for pio i/f
  always @ (posedge clk) begin
    if (reset) begin
      pio_write_active <= #1  1'b0;
      pio_read_active <= #1  1'b0;
    end
    else begin
      pio_write_active <= #1  pio_write_active ? pio_no_acks : pio_activate_write;
      pio_read_active <= #1  pio_read_active ? pio_no_acks : pio_activate_read;
      pio_dec_address_d1 <= #1   pio_dec_address;
      pio_dec_write_data_d1 <= #1  pio_dec_write_data;
    end
  end
  
  //------- combinatorial assigns for leaf i/f
  always @ (*) begin
    leaf_dec_valid_hld1_next = leaf_dec_valid | leaf_dec_valid_hld1;
    if (dec_pio_ack_next | dec_pio_nack_next) leaf_dec_valid_hld1_next = 1'b0;
    leaf_dec_wr_dvld_hld1_next = leaf_dec_wr_dvld | leaf_dec_wr_dvld_hld1;
    if (dec_pio_ack_next | dec_pio_nack_next | leaf_dec_valid) leaf_dec_wr_dvld_hld1_next = 1'b0;
  end
  
  //------- reg assigns for leaf i/f
  always @ (posedge clk) begin
    if (reset) begin
      leaf_dec_valid_hld1 <= #1  1'b0;
      leaf_dec_wr_dvld_hld1 <= #1  1'b0;
    end
    else begin
      leaf_dec_valid_hld1 <= #1 leaf_dec_valid_hld1_next;
      leaf_dec_wr_dvld_hld1 <= #1 leaf_dec_wr_dvld_hld1_next;
    end
  end
  
  //------- combinatorial assigns for pio ack/nack
  always @ (*) begin
    pio_internal_nack = (pio_read_active | pio_write_active) & ~pio_internal_ack & ~external_transaction_active;
    dec_pio_ack_next = (pio_internal_ack | (pio_external_ack_next & external_transaction_active));
    dec_pio_nack_next = (pio_internal_nack | (pio_external_nack_next & external_transaction_active));
    pio_no_acks = ~(dec_pio_ack | dec_pio_nack | pio_external_ack | pio_external_nack);
    pio_activate_write = (pio_dec_write & ~(dec_pio_ack | dec_pio_nack));
    pio_activate_read = (pio_dec_read & ~(dec_pio_ack | dec_pio_nack));
  end
  
  //------- reg assigns for pio ack/nack
  always @ (posedge clk) begin
    if (reset) begin
      dec_pio_ack <= #1 1'b0;
      dec_pio_nack <= #1 1'b0;
      pio_external_ack <= #1  1'b0;
      pio_external_nack <= #1  1'b0;
    end
    else begin
      dec_pio_ack <= #1 dec_pio_ack ? 1'b0 : dec_pio_ack_next;
      dec_pio_nack <= #1 dec_pio_nack ? 1'b0 : dec_pio_nack_next;
      pio_external_ack <= #1 pio_external_ack_next;
      pio_external_nack <= #1 pio_external_nack_next;
    end
  end
  
  
  //------- address decode
  always @ (*) begin
    pio_internal_ack = 1'b0;
    external_transaction_active = 1'b0;
    pio_external_ack_next = 1'b0;
    pio_external_nack_next = 1'b0;
    dec_pio_read_data_next = 32'b0;
    
    d2l_NVDLA_PDP_S_STATUS_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_S_STATUS_we = 1'b0;
    d2l_NVDLA_PDP_S_STATUS_re = 1'b0;
    d2l_NVDLA_PDP_S_POINTER_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_S_POINTER_we = 1'b0;
    d2l_NVDLA_PDP_S_POINTER_re = 1'b0;
    d2l_NVDLA_PDP_D_OP_ENABLE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_OP_ENABLE_we = 1'b0;
    d2l_NVDLA_PDP_D_OP_ENABLE_re = 1'b0;
    d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_we = 1'b0;
    d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_re = 1'b0;
    d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_we = 1'b0;
    d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_re = 1'b0;
    d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_we = 1'b0;
    d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_re = 1'b0;
    d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_we = 1'b0;
    d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_re = 1'b0;
    d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_we = 1'b0;
    d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_re = 1'b0;
    d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_we = 1'b0;
    d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_re = 1'b0;
    d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_we = 1'b0;
    d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_re = 1'b0;
    d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_we = 1'b0;
    d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_re = 1'b0;
    d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_we = 1'b0;
    d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_re = 1'b0;
    d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_we = 1'b0;
    d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_re = 1'b0;
    d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_we = 1'b0;
    d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_re = 1'b0;
    d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_we = 1'b0;
    d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_re = 1'b0;
    d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_we = 1'b0;
    d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_re = 1'b0;
    d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_we = 1'b0;
    d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_re = 1'b0;
    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_we = 1'b0;
    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_re = 1'b0;
    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_we = 1'b0;
    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_re = 1'b0;
    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_we = 1'b0;
    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_re = 1'b0;
    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_we = 1'b0;
    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_re = 1'b0;
    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_we = 1'b0;
    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_re = 1'b0;
    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_we = 1'b0;
    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_re = 1'b0;
    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_we = 1'b0;
    d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_re = 1'b0;
    d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_we = 1'b0;
    d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_re = 1'b0;
    d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_we = 1'b0;
    d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_re = 1'b0;
    d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_we = 1'b0;
    d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_re = 1'b0;
    d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_we = 1'b0;
    d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_re = 1'b0;
    d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_we = 1'b0;
    d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_re = 1'b0;
    d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_we = 1'b0;
    d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_re = 1'b0;
    d2l_NVDLA_PDP_D_DST_LINE_STRIDE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_DST_LINE_STRIDE_we = 1'b0;
    d2l_NVDLA_PDP_D_DST_LINE_STRIDE_re = 1'b0;
    d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_we = 1'b0;
    d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_re = 1'b0;
    d2l_NVDLA_PDP_D_DST_RAM_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_DST_RAM_CFG_we = 1'b0;
    d2l_NVDLA_PDP_D_DST_RAM_CFG_re = 1'b0;
    d2l_NVDLA_PDP_D_DATA_FORMAT_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_DATA_FORMAT_we = 1'b0;
    d2l_NVDLA_PDP_D_DATA_FORMAT_re = 1'b0;
    d2l_NVDLA_PDP_D_INF_INPUT_NUM_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_INF_INPUT_NUM_we = 1'b0;
    d2l_NVDLA_PDP_D_INF_INPUT_NUM_re = 1'b0;
    d2l_NVDLA_PDP_D_NAN_INPUT_NUM_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_NAN_INPUT_NUM_we = 1'b0;
    d2l_NVDLA_PDP_D_NAN_INPUT_NUM_re = 1'b0;
    d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_we = 1'b0;
    d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_re = 1'b0;
    d2l_NVDLA_PDP_D_PERF_ENABLE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_PERF_ENABLE_we = 1'b0;
    d2l_NVDLA_PDP_D_PERF_ENABLE_re = 1'b0;
    d2l_NVDLA_PDP_D_PERF_WRITE_STALL_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_PERF_WRITE_STALL_we = 1'b0;
    d2l_NVDLA_PDP_D_PERF_WRITE_STALL_re = 1'b0;
    d2l_NVDLA_PDP_D_CYA_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_PDP_D_CYA_we = 1'b0;
    d2l_NVDLA_PDP_D_CYA_re = 1'b0;
    
    casez(pio_dec_address_d1)
    //  Register: NVDLA_PDP.S_STATUS     Address: 0xb000     External: false
    14'b10110000000000:
      begin
        d2l_NVDLA_PDP_S_STATUS_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_S_STATUS_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_S_STATUS_r;
      end
    //  Register: NVDLA_PDP.S_POINTER     Address: 0xb004     External: false
    14'b10110000000001:
      begin
        d2l_NVDLA_PDP_S_POINTER_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_S_POINTER_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_S_POINTER_r;
      end
    //  Register: NVDLA_PDP.D_OP_ENABLE     Address: 0xb008     External: false
    14'b10110000000010:
      begin
        d2l_NVDLA_PDP_D_OP_ENABLE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_OP_ENABLE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_OP_ENABLE_r;
      end
    //  Register: NVDLA_PDP.D_DATA_CUBE_IN_WIDTH     Address: 0xb00c     External: false
    14'b10110000000011:
      begin
        d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_r;
      end
    //  Register: NVDLA_PDP.D_DATA_CUBE_IN_HEIGHT     Address: 0xb010     External: false
    14'b10110000000100:
      begin
        d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_r;
      end
    //  Register: NVDLA_PDP.D_DATA_CUBE_IN_CHANNEL     Address: 0xb014     External: false
    14'b10110000000101:
      begin
        d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_r;
      end
    //  Register: NVDLA_PDP.D_DATA_CUBE_OUT_WIDTH     Address: 0xb018     External: false
    14'b10110000000110:
      begin
        d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_r;
      end
    //  Register: NVDLA_PDP.D_DATA_CUBE_OUT_HEIGHT     Address: 0xb01c     External: false
    14'b10110000000111:
      begin
        d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_r;
      end
    //  Register: NVDLA_PDP.D_DATA_CUBE_OUT_CHANNEL     Address: 0xb020     External: false
    14'b10110000001000:
      begin
        d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_r;
      end
    //  Register: NVDLA_PDP.D_OPERATION_MODE_CFG     Address: 0xb024     External: false
    14'b10110000001001:
      begin
        d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_OPERATION_MODE_CFG_r;
      end
    //  Register: NVDLA_PDP.D_NAN_FLUSH_TO_ZERO     Address: 0xb028     External: false
    14'b10110000001010:
      begin
        d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_r;
      end
    //  Register: NVDLA_PDP.D_PARTIAL_WIDTH_IN     Address: 0xb02c     External: false
    14'b10110000001011:
      begin
        d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_PARTIAL_WIDTH_IN_r;
      end
    //  Register: NVDLA_PDP.D_PARTIAL_WIDTH_OUT     Address: 0xb030     External: false
    14'b10110000001100:
      begin
        d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_r;
      end
    //  Register: NVDLA_PDP.D_POOLING_KERNEL_CFG     Address: 0xb034     External: false
    14'b10110000001101:
      begin
        d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_POOLING_KERNEL_CFG_r;
      end
    //  Register: NVDLA_PDP.D_RECIP_KERNEL_WIDTH     Address: 0xb038     External: false
    14'b10110000001110:
      begin
        d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_r;
      end
    //  Register: NVDLA_PDP.D_RECIP_KERNEL_HEIGHT     Address: 0xb03c     External: false
    14'b10110000001111:
      begin
        d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_r;
      end
    //  Register: NVDLA_PDP.D_POOLING_PADDING_CFG     Address: 0xb040     External: false
    14'b10110000010000:
      begin
        d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_POOLING_PADDING_CFG_r;
      end
    //  Register: NVDLA_PDP.D_POOLING_PADDING_VALUE_1_CFG     Address: 0xb044     External: false
    14'b10110000010001:
      begin
        d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_r;
      end
    //  Register: NVDLA_PDP.D_POOLING_PADDING_VALUE_2_CFG     Address: 0xb048     External: false
    14'b10110000010010:
      begin
        d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_r;
      end
    //  Register: NVDLA_PDP.D_POOLING_PADDING_VALUE_3_CFG     Address: 0xb04c     External: false
    14'b10110000010011:
      begin
        d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_r;
      end
    //  Register: NVDLA_PDP.D_POOLING_PADDING_VALUE_4_CFG     Address: 0xb050     External: false
    14'b10110000010100:
      begin
        d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_r;
      end
    //  Register: NVDLA_PDP.D_POOLING_PADDING_VALUE_5_CFG     Address: 0xb054     External: false
    14'b10110000010101:
      begin
        d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_r;
      end
    //  Register: NVDLA_PDP.D_POOLING_PADDING_VALUE_6_CFG     Address: 0xb058     External: false
    14'b10110000010110:
      begin
        d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_r;
      end
    //  Register: NVDLA_PDP.D_POOLING_PADDING_VALUE_7_CFG     Address: 0xb05c     External: false
    14'b10110000010111:
      begin
        d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_r;
      end
    //  Register: NVDLA_PDP.D_SRC_BASE_ADDR_LOW     Address: 0xb060     External: false
    14'b10110000011000:
      begin
        d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_r;
      end
    //  Register: NVDLA_PDP.D_SRC_BASE_ADDR_HIGH     Address: 0xb064     External: false
    14'b10110000011001:
      begin
        d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_r;
      end
    //  Register: NVDLA_PDP.D_SRC_LINE_STRIDE     Address: 0xb068     External: false
    14'b10110000011010:
      begin
        d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_SRC_LINE_STRIDE_r;
      end
    //  Register: NVDLA_PDP.D_SRC_SURFACE_STRIDE     Address: 0xb06c     External: false
    14'b10110000011011:
      begin
        d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_SRC_SURFACE_STRIDE_r;
      end
    //  Register: NVDLA_PDP.D_DST_BASE_ADDR_LOW     Address: 0xb070     External: false
    14'b10110000011100:
      begin
        d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_DST_BASE_ADDR_LOW_r;
      end
    //  Register: NVDLA_PDP.D_DST_BASE_ADDR_HIGH     Address: 0xb074     External: false
    14'b10110000011101:
      begin
        d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_r;
      end
    //  Register: NVDLA_PDP.D_DST_LINE_STRIDE     Address: 0xb078     External: false
    14'b10110000011110:
      begin
        d2l_NVDLA_PDP_D_DST_LINE_STRIDE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_DST_LINE_STRIDE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_DST_LINE_STRIDE_r;
      end
    //  Register: NVDLA_PDP.D_DST_SURFACE_STRIDE     Address: 0xb07c     External: false
    14'b10110000011111:
      begin
        d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_DST_SURFACE_STRIDE_r;
      end
    //  Register: NVDLA_PDP.D_DST_RAM_CFG     Address: 0xb080     External: false
    14'b10110000100000:
      begin
        d2l_NVDLA_PDP_D_DST_RAM_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_DST_RAM_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_DST_RAM_CFG_r;
      end
    //  Register: NVDLA_PDP.D_DATA_FORMAT     Address: 0xb084     External: false
    14'b10110000100001:
      begin
        d2l_NVDLA_PDP_D_DATA_FORMAT_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_DATA_FORMAT_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_DATA_FORMAT_r;
      end
    //  Register: NVDLA_PDP.D_INF_INPUT_NUM     Address: 0xb088     External: false
    14'b10110000100010:
      begin
        d2l_NVDLA_PDP_D_INF_INPUT_NUM_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_INF_INPUT_NUM_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_INF_INPUT_NUM_r;
      end
    //  Register: NVDLA_PDP.D_NAN_INPUT_NUM     Address: 0xb08c     External: false
    14'b10110000100011:
      begin
        d2l_NVDLA_PDP_D_NAN_INPUT_NUM_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_NAN_INPUT_NUM_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_NAN_INPUT_NUM_r;
      end
    //  Register: NVDLA_PDP.D_NAN_OUTPUT_NUM     Address: 0xb090     External: false
    14'b10110000100100:
      begin
        d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_NAN_OUTPUT_NUM_r;
      end
    //  Register: NVDLA_PDP.D_PERF_ENABLE     Address: 0xb094     External: false
    14'b10110000100101:
      begin
        d2l_NVDLA_PDP_D_PERF_ENABLE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_PERF_ENABLE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_PERF_ENABLE_r;
      end
    //  Register: NVDLA_PDP.D_PERF_WRITE_STALL     Address: 0xb098     External: false
    14'b10110000100110:
      begin
        d2l_NVDLA_PDP_D_PERF_WRITE_STALL_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_PERF_WRITE_STALL_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_PERF_WRITE_STALL_r;
      end
    //  Register: NVDLA_PDP.D_CYA     Address: 0xb09c     External: false
    14'b10110000100111:
      begin
        d2l_NVDLA_PDP_D_CYA_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_PDP_D_CYA_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_PDP_D_CYA_r;
      end
    endcase
  end
  
endmodule

//
//---------- module addrmap_NVDLA_pio
//
module addrmap_NVDLA_pio
(
  clk,
  reset,
  h2l_NVDLA_PDP_S_STATUS_STATUS_0_w,
  h2l_NVDLA_PDP_S_STATUS_STATUS_1_w,
  h2l_NVDLA_PDP_S_POINTER_CONSUMER_w,
  h2l_NVDLA_PDP_D_INF_INPUT_NUM_INF_INPUT_NUM_w,
  h2l_NVDLA_PDP_D_NAN_INPUT_NUM_NAN_INPUT_NUM_w,
  h2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_NAN_OUTPUT_NUM_w,
  h2l_NVDLA_PDP_D_PERF_WRITE_STALL_PERF_WRITE_STALL_w,
  leaf_dec_wr_data,
  leaf_dec_addr,
  leaf_dec_block_sel,
  leaf_dec_valid,
  leaf_dec_wr_dvld,
  leaf_dec_cycle,
  leaf_dec_wr_width,

  l2h_NVDLA_PDP_S_POINTER_PRODUCER_r,
  l2h_NVDLA_PDP_D_OP_ENABLE_OP_EN_r,
  l2h_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_CUBE_IN_WIDTH_r,
  l2h_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_CUBE_IN_HEIGHT_r,
  l2h_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_CUBE_IN_CHANNEL_r,
  l2h_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_CUBE_OUT_WIDTH_r,
  l2h_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_CUBE_OUT_HEIGHT_r,
  l2h_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_CUBE_OUT_CHANNEL_r,
  l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_POOLING_METHOD_r,
  l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_FLYING_MODE_r,
  l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_SPLIT_NUM_r,
  l2h_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_NAN_TO_ZERO_r,
  l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_FIRST_r,
  l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_LAST_r,
  l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_MID_r,
  l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_FIRST_r,
  l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_LAST_r,
  l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_MID_r,
  l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_WIDTH_r,
  l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_HEIGHT_r,
  l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_WIDTH_r,
  l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_HEIGHT_r,
  l2h_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_RECIP_KERNEL_WIDTH_r,
  l2h_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_RECIP_KERNEL_HEIGHT_r,
  l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_LEFT_r,
  l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_TOP_r,
  l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_RIGHT_r,
  l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_BOTTOM_r,
  l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_PAD_VALUE_1X_r,
  l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_PAD_VALUE_2X_r,
  l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_PAD_VALUE_3X_r,
  l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_PAD_VALUE_4X_r,
  l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_PAD_VALUE_5X_r,
  l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_PAD_VALUE_6X_r,
  l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_PAD_VALUE_7X_r,
  l2h_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_SRC_BASE_ADDR_LOW_r,
  l2h_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_SRC_BASE_ADDR_HIGH_r,
  l2h_NVDLA_PDP_D_SRC_LINE_STRIDE_SRC_LINE_STRIDE_r,
  l2h_NVDLA_PDP_D_SRC_SURFACE_STRIDE_SRC_SURFACE_STRIDE_r,
  l2h_NVDLA_PDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_r,
  l2h_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_r,
  l2h_NVDLA_PDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_r,
  l2h_NVDLA_PDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_r,
  l2h_NVDLA_PDP_D_DST_RAM_CFG_DST_RAM_TYPE_r,
  l2h_NVDLA_PDP_D_DATA_FORMAT_INPUT_DATA_r,
  l2h_NVDLA_PDP_D_PERF_ENABLE_DMA_EN_r,
  l2h_NVDLA_PDP_D_CYA_CYA_r,
  dec_leaf_rd_data,
  dec_leaf_ack,
  dec_leaf_nack,
  dec_leaf_accept,
  dec_leaf_reject,
  dec_leaf_retry_atomic,
  dec_leaf_data_width );

  //------- inputs
  input    clk;
  input    reset;
  input     [1:0] h2l_NVDLA_PDP_S_STATUS_STATUS_0_w;
  input     [1:0] h2l_NVDLA_PDP_S_STATUS_STATUS_1_w;
  input    h2l_NVDLA_PDP_S_POINTER_CONSUMER_w;
  input     [31:0] h2l_NVDLA_PDP_D_INF_INPUT_NUM_INF_INPUT_NUM_w;
  input     [31:0] h2l_NVDLA_PDP_D_NAN_INPUT_NUM_NAN_INPUT_NUM_w;
  input     [31:0] h2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_NAN_OUTPUT_NUM_w;
  input     [31:0] h2l_NVDLA_PDP_D_PERF_WRITE_STALL_PERF_WRITE_STALL_w;
  input     [31:0] leaf_dec_wr_data;
  input     [39:0] leaf_dec_addr;
  input    leaf_dec_block_sel;
  input    leaf_dec_valid;
  input    leaf_dec_wr_dvld;
  input     [1:0] leaf_dec_cycle;
  input     [2:0] leaf_dec_wr_width;

  //------- outputs
  output    l2h_NVDLA_PDP_S_POINTER_PRODUCER_r;
  output    l2h_NVDLA_PDP_D_OP_ENABLE_OP_EN_r;
  output     [12:0] l2h_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_CUBE_IN_WIDTH_r;
  output     [12:0] l2h_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_CUBE_IN_HEIGHT_r;
  output     [12:0] l2h_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_CUBE_IN_CHANNEL_r;
  output     [12:0] l2h_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_CUBE_OUT_WIDTH_r;
  output     [12:0] l2h_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_CUBE_OUT_HEIGHT_r;
  output     [12:0] l2h_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_CUBE_OUT_CHANNEL_r;
  output     [1:0] l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_POOLING_METHOD_r;
  output    l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_FLYING_MODE_r;
  output     [7:0] l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_SPLIT_NUM_r;
  output    l2h_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_NAN_TO_ZERO_r;
  output     [9:0] l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_FIRST_r;
  output     [9:0] l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_LAST_r;
  output     [9:0] l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_MID_r;
  output     [9:0] l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_FIRST_r;
  output     [9:0] l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_LAST_r;
  output     [9:0] l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_MID_r;
  output     [3:0] l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_WIDTH_r;
  output     [3:0] l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_HEIGHT_r;
  output     [3:0] l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_WIDTH_r;
  output     [3:0] l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_HEIGHT_r;
  output     [16:0] l2h_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_RECIP_KERNEL_WIDTH_r;
  output     [16:0] l2h_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_RECIP_KERNEL_HEIGHT_r;
  output     [2:0] l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_LEFT_r;
  output     [2:0] l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_TOP_r;
  output     [2:0] l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_RIGHT_r;
  output     [2:0] l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_BOTTOM_r;
  output     [18:0] l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_PAD_VALUE_1X_r;
  output     [18:0] l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_PAD_VALUE_2X_r;
  output     [18:0] l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_PAD_VALUE_3X_r;
  output     [18:0] l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_PAD_VALUE_4X_r;
  output     [18:0] l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_PAD_VALUE_5X_r;
  output     [18:0] l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_PAD_VALUE_6X_r;
  output     [18:0] l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_PAD_VALUE_7X_r;
  output     [31:0] l2h_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_SRC_BASE_ADDR_LOW_r;
  output     [31:0] l2h_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_SRC_BASE_ADDR_HIGH_r;
  output     [31:0] l2h_NVDLA_PDP_D_SRC_LINE_STRIDE_SRC_LINE_STRIDE_r;
  output     [31:0] l2h_NVDLA_PDP_D_SRC_SURFACE_STRIDE_SRC_SURFACE_STRIDE_r;
  output     [31:0] l2h_NVDLA_PDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_r;
  output     [31:0] l2h_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_r;
  output     [31:0] l2h_NVDLA_PDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_r;
  output     [31:0] l2h_NVDLA_PDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_r;
  output    l2h_NVDLA_PDP_D_DST_RAM_CFG_DST_RAM_TYPE_r;
  output     [1:0] l2h_NVDLA_PDP_D_DATA_FORMAT_INPUT_DATA_r;
  output    l2h_NVDLA_PDP_D_PERF_ENABLE_DMA_EN_r;
  output     [31:0] l2h_NVDLA_PDP_D_CYA_CYA_r;
  output     [31:0] dec_leaf_rd_data;
  output    dec_leaf_ack;
  output    dec_leaf_nack;
  output    dec_leaf_accept;
  output    dec_leaf_reject;
  output    dec_leaf_retry_atomic;
  output     [2:0] dec_leaf_data_width;


  //------- wire defines
  wire   [31:0] d2l_NVDLA_PDP_S_STATUS_w;
  wire  d2l_NVDLA_PDP_S_STATUS_we;
  wire  d2l_NVDLA_PDP_S_STATUS_re;
  wire   [31:0] d2l_NVDLA_PDP_S_POINTER_w;
  wire  d2l_NVDLA_PDP_S_POINTER_we;
  wire  d2l_NVDLA_PDP_S_POINTER_re;
  wire   [31:0] d2l_NVDLA_PDP_D_OP_ENABLE_w;
  wire  d2l_NVDLA_PDP_D_OP_ENABLE_we;
  wire  d2l_NVDLA_PDP_D_OP_ENABLE_re;
  wire   [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_w;
  wire  d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_we;
  wire  d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_re;
  wire   [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_w;
  wire  d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_we;
  wire  d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_re;
  wire   [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_w;
  wire  d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_we;
  wire  d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_re;
  wire   [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_w;
  wire  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_we;
  wire  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_re;
  wire   [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_w;
  wire  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_we;
  wire  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_re;
  wire   [31:0] d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_w;
  wire  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_we;
  wire  d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_re;
  wire   [31:0] d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_w;
  wire  d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_we;
  wire  d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_re;
  wire   [31:0] d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_w;
  wire  d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_we;
  wire  d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_re;
  wire   [31:0] d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_w;
  wire  d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_we;
  wire  d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_re;
  wire   [31:0] d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_w;
  wire  d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_we;
  wire  d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_re;
  wire   [31:0] d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_w;
  wire  d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_we;
  wire  d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_re;
  wire   [31:0] d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_w;
  wire  d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_we;
  wire  d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_re;
  wire   [31:0] d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_w;
  wire  d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_we;
  wire  d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_re;
  wire   [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_w;
  wire  d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_we;
  wire  d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_re;
  wire   [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_w;
  wire  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_we;
  wire  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_re;
  wire   [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_w;
  wire  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_we;
  wire  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_re;
  wire   [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_w;
  wire  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_we;
  wire  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_re;
  wire   [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_w;
  wire  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_we;
  wire  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_re;
  wire   [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_w;
  wire  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_we;
  wire  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_re;
  wire   [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_w;
  wire  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_we;
  wire  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_re;
  wire   [31:0] d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_w;
  wire  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_we;
  wire  d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_re;
  wire   [31:0] d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_w;
  wire  d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_we;
  wire  d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_re;
  wire   [31:0] d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_w;
  wire  d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_we;
  wire  d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_re;
  wire   [31:0] d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_w;
  wire  d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_we;
  wire  d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_re;
  wire   [31:0] d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_w;
  wire  d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_we;
  wire  d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_re;
  wire   [31:0] d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_w;
  wire  d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_we;
  wire  d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_re;
  wire   [31:0] d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_w;
  wire  d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_we;
  wire  d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_re;
  wire   [31:0] d2l_NVDLA_PDP_D_DST_LINE_STRIDE_w;
  wire  d2l_NVDLA_PDP_D_DST_LINE_STRIDE_we;
  wire  d2l_NVDLA_PDP_D_DST_LINE_STRIDE_re;
  wire   [31:0] d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_w;
  wire  d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_we;
  wire  d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_re;
  wire   [31:0] d2l_NVDLA_PDP_D_DST_RAM_CFG_w;
  wire  d2l_NVDLA_PDP_D_DST_RAM_CFG_we;
  wire  d2l_NVDLA_PDP_D_DST_RAM_CFG_re;
  wire   [31:0] d2l_NVDLA_PDP_D_DATA_FORMAT_w;
  wire  d2l_NVDLA_PDP_D_DATA_FORMAT_we;
  wire  d2l_NVDLA_PDP_D_DATA_FORMAT_re;
  wire   [31:0] d2l_NVDLA_PDP_D_INF_INPUT_NUM_w;
  wire  d2l_NVDLA_PDP_D_INF_INPUT_NUM_we;
  wire  d2l_NVDLA_PDP_D_INF_INPUT_NUM_re;
  wire   [31:0] d2l_NVDLA_PDP_D_NAN_INPUT_NUM_w;
  wire  d2l_NVDLA_PDP_D_NAN_INPUT_NUM_we;
  wire  d2l_NVDLA_PDP_D_NAN_INPUT_NUM_re;
  wire   [31:0] d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_w;
  wire  d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_we;
  wire  d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_re;
  wire   [31:0] d2l_NVDLA_PDP_D_PERF_ENABLE_w;
  wire  d2l_NVDLA_PDP_D_PERF_ENABLE_we;
  wire  d2l_NVDLA_PDP_D_PERF_ENABLE_re;
  wire   [31:0] d2l_NVDLA_PDP_D_PERF_WRITE_STALL_w;
  wire  d2l_NVDLA_PDP_D_PERF_WRITE_STALL_we;
  wire  d2l_NVDLA_PDP_D_PERF_WRITE_STALL_re;
  wire   [31:0] d2l_NVDLA_PDP_D_CYA_w;
  wire  d2l_NVDLA_PDP_D_CYA_we;
  wire  d2l_NVDLA_PDP_D_CYA_re;
  wire   [31:0] l2d_NVDLA_PDP_S_STATUS_r;
  wire   [31:0] l2d_NVDLA_PDP_S_POINTER_r;
  wire   [31:0] l2d_NVDLA_PDP_D_OP_ENABLE_r;
  wire   [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_r;
  wire   [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_r;
  wire   [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_r;
  wire   [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_r;
  wire   [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_r;
  wire   [31:0] l2d_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_r;
  wire   [31:0] l2d_NVDLA_PDP_D_OPERATION_MODE_CFG_r;
  wire   [31:0] l2d_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_r;
  wire   [31:0] l2d_NVDLA_PDP_D_PARTIAL_WIDTH_IN_r;
  wire   [31:0] l2d_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_r;
  wire   [31:0] l2d_NVDLA_PDP_D_POOLING_KERNEL_CFG_r;
  wire   [31:0] l2d_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_r;
  wire   [31:0] l2d_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_r;
  wire   [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_CFG_r;
  wire   [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_r;
  wire   [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_r;
  wire   [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_r;
  wire   [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_r;
  wire   [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_r;
  wire   [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_r;
  wire   [31:0] l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_r;
  wire   [31:0] l2d_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_r;
  wire   [31:0] l2d_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_r;
  wire   [31:0] l2d_NVDLA_PDP_D_SRC_LINE_STRIDE_r;
  wire   [31:0] l2d_NVDLA_PDP_D_SRC_SURFACE_STRIDE_r;
  wire   [31:0] l2d_NVDLA_PDP_D_DST_BASE_ADDR_LOW_r;
  wire   [31:0] l2d_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_r;
  wire   [31:0] l2d_NVDLA_PDP_D_DST_LINE_STRIDE_r;
  wire   [31:0] l2d_NVDLA_PDP_D_DST_SURFACE_STRIDE_r;
  wire   [31:0] l2d_NVDLA_PDP_D_DST_RAM_CFG_r;
  wire   [31:0] l2d_NVDLA_PDP_D_DATA_FORMAT_r;
  wire   [31:0] l2d_NVDLA_PDP_D_INF_INPUT_NUM_r;
  wire   [31:0] l2d_NVDLA_PDP_D_NAN_INPUT_NUM_r;
  wire   [31:0] l2d_NVDLA_PDP_D_NAN_OUTPUT_NUM_r;
  wire   [31:0] l2d_NVDLA_PDP_D_PERF_ENABLE_r;
  wire   [31:0] l2d_NVDLA_PDP_D_PERF_WRITE_STALL_r;
  wire   [31:0] l2d_NVDLA_PDP_D_CYA_r;
  
  
  addrmap_NVDLA_jrdl_decode pio_decode (
    .clk(clk),
    .reset(reset),
    .leaf_dec_wr_data(leaf_dec_wr_data),
    .leaf_dec_addr(leaf_dec_addr),
    .leaf_dec_block_sel(leaf_dec_block_sel),
    .leaf_dec_valid(leaf_dec_valid),
    .leaf_dec_wr_dvld(leaf_dec_wr_dvld),
    .leaf_dec_cycle(leaf_dec_cycle),
    .leaf_dec_wr_width(leaf_dec_wr_width),
    .l2d_NVDLA_PDP_S_STATUS_r(l2d_NVDLA_PDP_S_STATUS_r),
    .l2d_NVDLA_PDP_S_POINTER_r(l2d_NVDLA_PDP_S_POINTER_r),
    .l2d_NVDLA_PDP_D_OP_ENABLE_r(l2d_NVDLA_PDP_D_OP_ENABLE_r),
    .l2d_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_r(l2d_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_r),
    .l2d_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_r(l2d_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_r),
    .l2d_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_r(l2d_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_r),
    .l2d_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_r(l2d_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_r),
    .l2d_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_r(l2d_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_r),
    .l2d_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_r(l2d_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_r),
    .l2d_NVDLA_PDP_D_OPERATION_MODE_CFG_r(l2d_NVDLA_PDP_D_OPERATION_MODE_CFG_r),
    .l2d_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_r(l2d_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_r),
    .l2d_NVDLA_PDP_D_PARTIAL_WIDTH_IN_r(l2d_NVDLA_PDP_D_PARTIAL_WIDTH_IN_r),
    .l2d_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_r(l2d_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_r),
    .l2d_NVDLA_PDP_D_POOLING_KERNEL_CFG_r(l2d_NVDLA_PDP_D_POOLING_KERNEL_CFG_r),
    .l2d_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_r(l2d_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_r),
    .l2d_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_r(l2d_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_r),
    .l2d_NVDLA_PDP_D_POOLING_PADDING_CFG_r(l2d_NVDLA_PDP_D_POOLING_PADDING_CFG_r),
    .l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_r(l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_r),
    .l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_r(l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_r),
    .l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_r(l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_r),
    .l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_r(l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_r),
    .l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_r(l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_r),
    .l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_r(l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_r),
    .l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_r(l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_r),
    .l2d_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_r(l2d_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_r),
    .l2d_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_r(l2d_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_r),
    .l2d_NVDLA_PDP_D_SRC_LINE_STRIDE_r(l2d_NVDLA_PDP_D_SRC_LINE_STRIDE_r),
    .l2d_NVDLA_PDP_D_SRC_SURFACE_STRIDE_r(l2d_NVDLA_PDP_D_SRC_SURFACE_STRIDE_r),
    .l2d_NVDLA_PDP_D_DST_BASE_ADDR_LOW_r(l2d_NVDLA_PDP_D_DST_BASE_ADDR_LOW_r),
    .l2d_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_r(l2d_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_r),
    .l2d_NVDLA_PDP_D_DST_LINE_STRIDE_r(l2d_NVDLA_PDP_D_DST_LINE_STRIDE_r),
    .l2d_NVDLA_PDP_D_DST_SURFACE_STRIDE_r(l2d_NVDLA_PDP_D_DST_SURFACE_STRIDE_r),
    .l2d_NVDLA_PDP_D_DST_RAM_CFG_r(l2d_NVDLA_PDP_D_DST_RAM_CFG_r),
    .l2d_NVDLA_PDP_D_DATA_FORMAT_r(l2d_NVDLA_PDP_D_DATA_FORMAT_r),
    .l2d_NVDLA_PDP_D_INF_INPUT_NUM_r(l2d_NVDLA_PDP_D_INF_INPUT_NUM_r),
    .l2d_NVDLA_PDP_D_NAN_INPUT_NUM_r(l2d_NVDLA_PDP_D_NAN_INPUT_NUM_r),
    .l2d_NVDLA_PDP_D_NAN_OUTPUT_NUM_r(l2d_NVDLA_PDP_D_NAN_OUTPUT_NUM_r),
    .l2d_NVDLA_PDP_D_PERF_ENABLE_r(l2d_NVDLA_PDP_D_PERF_ENABLE_r),
    .l2d_NVDLA_PDP_D_PERF_WRITE_STALL_r(l2d_NVDLA_PDP_D_PERF_WRITE_STALL_r),
    .l2d_NVDLA_PDP_D_CYA_r(l2d_NVDLA_PDP_D_CYA_r),
    .dec_leaf_rd_data(dec_leaf_rd_data),
    .dec_leaf_ack(dec_leaf_ack),
    .dec_leaf_nack(dec_leaf_nack),
    .dec_leaf_accept(dec_leaf_accept),
    .dec_leaf_reject(dec_leaf_reject),
    .dec_leaf_retry_atomic(dec_leaf_retry_atomic),
    .dec_leaf_data_width(dec_leaf_data_width),
    .d2l_NVDLA_PDP_S_STATUS_w(d2l_NVDLA_PDP_S_STATUS_w),
    .d2l_NVDLA_PDP_S_STATUS_we(d2l_NVDLA_PDP_S_STATUS_we),
    .d2l_NVDLA_PDP_S_STATUS_re(d2l_NVDLA_PDP_S_STATUS_re),
    .d2l_NVDLA_PDP_S_POINTER_w(d2l_NVDLA_PDP_S_POINTER_w),
    .d2l_NVDLA_PDP_S_POINTER_we(d2l_NVDLA_PDP_S_POINTER_we),
    .d2l_NVDLA_PDP_S_POINTER_re(d2l_NVDLA_PDP_S_POINTER_re),
    .d2l_NVDLA_PDP_D_OP_ENABLE_w(d2l_NVDLA_PDP_D_OP_ENABLE_w),
    .d2l_NVDLA_PDP_D_OP_ENABLE_we(d2l_NVDLA_PDP_D_OP_ENABLE_we),
    .d2l_NVDLA_PDP_D_OP_ENABLE_re(d2l_NVDLA_PDP_D_OP_ENABLE_re),
    .d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_w(d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_w),
    .d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_we(d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_we),
    .d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_re(d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_re),
    .d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_w(d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_w),
    .d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_we(d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_we),
    .d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_re(d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_re),
    .d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_w(d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_w),
    .d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_we(d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_we),
    .d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_re(d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_re),
    .d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_w(d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_w),
    .d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_we(d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_we),
    .d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_re(d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_re),
    .d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_w(d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_w),
    .d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_we(d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_we),
    .d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_re(d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_re),
    .d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_w(d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_w),
    .d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_we(d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_we),
    .d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_re(d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_re),
    .d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_w(d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_w),
    .d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_we(d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_we),
    .d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_re(d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_re),
    .d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_w(d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_w),
    .d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_we(d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_we),
    .d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_re(d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_re),
    .d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_w(d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_w),
    .d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_we(d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_we),
    .d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_re(d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_re),
    .d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_w(d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_w),
    .d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_we(d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_we),
    .d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_re(d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_re),
    .d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_w(d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_w),
    .d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_we(d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_we),
    .d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_re(d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_re),
    .d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_w(d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_w),
    .d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_we(d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_we),
    .d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_re(d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_re),
    .d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_w(d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_w),
    .d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_we(d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_we),
    .d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_re(d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_re),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_w(d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_w),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_we(d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_we),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_re(d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_re),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_w(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_w),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_we(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_we),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_re(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_re),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_w(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_w),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_we(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_we),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_re(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_re),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_w(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_w),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_we(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_we),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_re(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_re),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_w(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_w),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_we(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_we),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_re(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_re),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_w(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_w),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_we(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_we),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_re(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_re),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_w(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_w),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_we(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_we),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_re(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_re),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_w(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_w),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_we(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_we),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_re(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_re),
    .d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_w(d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_w),
    .d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_we(d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_we),
    .d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_re(d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_re),
    .d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_w(d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_w),
    .d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_we(d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_we),
    .d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_re(d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_re),
    .d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_w(d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_w),
    .d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_we(d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_we),
    .d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_re(d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_re),
    .d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_w(d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_w),
    .d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_we(d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_we),
    .d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_re(d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_re),
    .d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_w(d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_w),
    .d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_we(d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_we),
    .d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_re(d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_re),
    .d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_w(d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_w),
    .d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_we(d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_we),
    .d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_re(d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_re),
    .d2l_NVDLA_PDP_D_DST_LINE_STRIDE_w(d2l_NVDLA_PDP_D_DST_LINE_STRIDE_w),
    .d2l_NVDLA_PDP_D_DST_LINE_STRIDE_we(d2l_NVDLA_PDP_D_DST_LINE_STRIDE_we),
    .d2l_NVDLA_PDP_D_DST_LINE_STRIDE_re(d2l_NVDLA_PDP_D_DST_LINE_STRIDE_re),
    .d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_w(d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_w),
    .d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_we(d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_we),
    .d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_re(d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_re),
    .d2l_NVDLA_PDP_D_DST_RAM_CFG_w(d2l_NVDLA_PDP_D_DST_RAM_CFG_w),
    .d2l_NVDLA_PDP_D_DST_RAM_CFG_we(d2l_NVDLA_PDP_D_DST_RAM_CFG_we),
    .d2l_NVDLA_PDP_D_DST_RAM_CFG_re(d2l_NVDLA_PDP_D_DST_RAM_CFG_re),
    .d2l_NVDLA_PDP_D_DATA_FORMAT_w(d2l_NVDLA_PDP_D_DATA_FORMAT_w),
    .d2l_NVDLA_PDP_D_DATA_FORMAT_we(d2l_NVDLA_PDP_D_DATA_FORMAT_we),
    .d2l_NVDLA_PDP_D_DATA_FORMAT_re(d2l_NVDLA_PDP_D_DATA_FORMAT_re),
    .d2l_NVDLA_PDP_D_INF_INPUT_NUM_w(d2l_NVDLA_PDP_D_INF_INPUT_NUM_w),
    .d2l_NVDLA_PDP_D_INF_INPUT_NUM_we(d2l_NVDLA_PDP_D_INF_INPUT_NUM_we),
    .d2l_NVDLA_PDP_D_INF_INPUT_NUM_re(d2l_NVDLA_PDP_D_INF_INPUT_NUM_re),
    .d2l_NVDLA_PDP_D_NAN_INPUT_NUM_w(d2l_NVDLA_PDP_D_NAN_INPUT_NUM_w),
    .d2l_NVDLA_PDP_D_NAN_INPUT_NUM_we(d2l_NVDLA_PDP_D_NAN_INPUT_NUM_we),
    .d2l_NVDLA_PDP_D_NAN_INPUT_NUM_re(d2l_NVDLA_PDP_D_NAN_INPUT_NUM_re),
    .d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_w(d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_w),
    .d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_we(d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_we),
    .d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_re(d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_re),
    .d2l_NVDLA_PDP_D_PERF_ENABLE_w(d2l_NVDLA_PDP_D_PERF_ENABLE_w),
    .d2l_NVDLA_PDP_D_PERF_ENABLE_we(d2l_NVDLA_PDP_D_PERF_ENABLE_we),
    .d2l_NVDLA_PDP_D_PERF_ENABLE_re(d2l_NVDLA_PDP_D_PERF_ENABLE_re),
    .d2l_NVDLA_PDP_D_PERF_WRITE_STALL_w(d2l_NVDLA_PDP_D_PERF_WRITE_STALL_w),
    .d2l_NVDLA_PDP_D_PERF_WRITE_STALL_we(d2l_NVDLA_PDP_D_PERF_WRITE_STALL_we),
    .d2l_NVDLA_PDP_D_PERF_WRITE_STALL_re(d2l_NVDLA_PDP_D_PERF_WRITE_STALL_re),
    .d2l_NVDLA_PDP_D_CYA_w(d2l_NVDLA_PDP_D_CYA_w),
    .d2l_NVDLA_PDP_D_CYA_we(d2l_NVDLA_PDP_D_CYA_we),
    .d2l_NVDLA_PDP_D_CYA_re(d2l_NVDLA_PDP_D_CYA_re) );
    
  addrmap_NVDLA_jrdl_logic pio_logic (
    .clk(clk),
    .reset(reset),
    .d2l_NVDLA_PDP_S_STATUS_w(d2l_NVDLA_PDP_S_STATUS_w),
    .d2l_NVDLA_PDP_S_STATUS_we(d2l_NVDLA_PDP_S_STATUS_we),
    .d2l_NVDLA_PDP_S_STATUS_re(d2l_NVDLA_PDP_S_STATUS_re),
    .d2l_NVDLA_PDP_S_POINTER_w(d2l_NVDLA_PDP_S_POINTER_w),
    .d2l_NVDLA_PDP_S_POINTER_we(d2l_NVDLA_PDP_S_POINTER_we),
    .d2l_NVDLA_PDP_S_POINTER_re(d2l_NVDLA_PDP_S_POINTER_re),
    .d2l_NVDLA_PDP_D_OP_ENABLE_w(d2l_NVDLA_PDP_D_OP_ENABLE_w),
    .d2l_NVDLA_PDP_D_OP_ENABLE_we(d2l_NVDLA_PDP_D_OP_ENABLE_we),
    .d2l_NVDLA_PDP_D_OP_ENABLE_re(d2l_NVDLA_PDP_D_OP_ENABLE_re),
    .d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_w(d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_w),
    .d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_we(d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_we),
    .d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_re(d2l_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_re),
    .d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_w(d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_w),
    .d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_we(d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_we),
    .d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_re(d2l_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_re),
    .d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_w(d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_w),
    .d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_we(d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_we),
    .d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_re(d2l_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_re),
    .d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_w(d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_w),
    .d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_we(d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_we),
    .d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_re(d2l_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_re),
    .d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_w(d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_w),
    .d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_we(d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_we),
    .d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_re(d2l_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_re),
    .d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_w(d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_w),
    .d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_we(d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_we),
    .d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_re(d2l_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_re),
    .d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_w(d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_w),
    .d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_we(d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_we),
    .d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_re(d2l_NVDLA_PDP_D_OPERATION_MODE_CFG_re),
    .d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_w(d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_w),
    .d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_we(d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_we),
    .d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_re(d2l_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_re),
    .d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_w(d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_w),
    .d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_we(d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_we),
    .d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_re(d2l_NVDLA_PDP_D_PARTIAL_WIDTH_IN_re),
    .d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_w(d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_w),
    .d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_we(d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_we),
    .d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_re(d2l_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_re),
    .d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_w(d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_w),
    .d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_we(d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_we),
    .d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_re(d2l_NVDLA_PDP_D_POOLING_KERNEL_CFG_re),
    .d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_w(d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_w),
    .d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_we(d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_we),
    .d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_re(d2l_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_re),
    .d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_w(d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_w),
    .d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_we(d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_we),
    .d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_re(d2l_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_re),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_w(d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_w),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_we(d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_we),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_re(d2l_NVDLA_PDP_D_POOLING_PADDING_CFG_re),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_w(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_w),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_we(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_we),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_re(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_re),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_w(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_w),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_we(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_we),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_re(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_re),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_w(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_w),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_we(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_we),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_re(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_re),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_w(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_w),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_we(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_we),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_re(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_re),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_w(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_w),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_we(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_we),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_re(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_re),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_w(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_w),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_we(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_we),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_re(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_re),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_w(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_w),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_we(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_we),
    .d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_re(d2l_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_re),
    .d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_w(d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_w),
    .d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_we(d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_we),
    .d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_re(d2l_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_re),
    .d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_w(d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_w),
    .d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_we(d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_we),
    .d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_re(d2l_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_re),
    .d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_w(d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_w),
    .d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_we(d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_we),
    .d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_re(d2l_NVDLA_PDP_D_SRC_LINE_STRIDE_re),
    .d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_w(d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_w),
    .d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_we(d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_we),
    .d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_re(d2l_NVDLA_PDP_D_SRC_SURFACE_STRIDE_re),
    .d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_w(d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_w),
    .d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_we(d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_we),
    .d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_re(d2l_NVDLA_PDP_D_DST_BASE_ADDR_LOW_re),
    .d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_w(d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_w),
    .d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_we(d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_we),
    .d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_re(d2l_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_re),
    .d2l_NVDLA_PDP_D_DST_LINE_STRIDE_w(d2l_NVDLA_PDP_D_DST_LINE_STRIDE_w),
    .d2l_NVDLA_PDP_D_DST_LINE_STRIDE_we(d2l_NVDLA_PDP_D_DST_LINE_STRIDE_we),
    .d2l_NVDLA_PDP_D_DST_LINE_STRIDE_re(d2l_NVDLA_PDP_D_DST_LINE_STRIDE_re),
    .d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_w(d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_w),
    .d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_we(d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_we),
    .d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_re(d2l_NVDLA_PDP_D_DST_SURFACE_STRIDE_re),
    .d2l_NVDLA_PDP_D_DST_RAM_CFG_w(d2l_NVDLA_PDP_D_DST_RAM_CFG_w),
    .d2l_NVDLA_PDP_D_DST_RAM_CFG_we(d2l_NVDLA_PDP_D_DST_RAM_CFG_we),
    .d2l_NVDLA_PDP_D_DST_RAM_CFG_re(d2l_NVDLA_PDP_D_DST_RAM_CFG_re),
    .d2l_NVDLA_PDP_D_DATA_FORMAT_w(d2l_NVDLA_PDP_D_DATA_FORMAT_w),
    .d2l_NVDLA_PDP_D_DATA_FORMAT_we(d2l_NVDLA_PDP_D_DATA_FORMAT_we),
    .d2l_NVDLA_PDP_D_DATA_FORMAT_re(d2l_NVDLA_PDP_D_DATA_FORMAT_re),
    .d2l_NVDLA_PDP_D_INF_INPUT_NUM_w(d2l_NVDLA_PDP_D_INF_INPUT_NUM_w),
    .d2l_NVDLA_PDP_D_INF_INPUT_NUM_we(d2l_NVDLA_PDP_D_INF_INPUT_NUM_we),
    .d2l_NVDLA_PDP_D_INF_INPUT_NUM_re(d2l_NVDLA_PDP_D_INF_INPUT_NUM_re),
    .d2l_NVDLA_PDP_D_NAN_INPUT_NUM_w(d2l_NVDLA_PDP_D_NAN_INPUT_NUM_w),
    .d2l_NVDLA_PDP_D_NAN_INPUT_NUM_we(d2l_NVDLA_PDP_D_NAN_INPUT_NUM_we),
    .d2l_NVDLA_PDP_D_NAN_INPUT_NUM_re(d2l_NVDLA_PDP_D_NAN_INPUT_NUM_re),
    .d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_w(d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_w),
    .d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_we(d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_we),
    .d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_re(d2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_re),
    .d2l_NVDLA_PDP_D_PERF_ENABLE_w(d2l_NVDLA_PDP_D_PERF_ENABLE_w),
    .d2l_NVDLA_PDP_D_PERF_ENABLE_we(d2l_NVDLA_PDP_D_PERF_ENABLE_we),
    .d2l_NVDLA_PDP_D_PERF_ENABLE_re(d2l_NVDLA_PDP_D_PERF_ENABLE_re),
    .d2l_NVDLA_PDP_D_PERF_WRITE_STALL_w(d2l_NVDLA_PDP_D_PERF_WRITE_STALL_w),
    .d2l_NVDLA_PDP_D_PERF_WRITE_STALL_we(d2l_NVDLA_PDP_D_PERF_WRITE_STALL_we),
    .d2l_NVDLA_PDP_D_PERF_WRITE_STALL_re(d2l_NVDLA_PDP_D_PERF_WRITE_STALL_re),
    .d2l_NVDLA_PDP_D_CYA_w(d2l_NVDLA_PDP_D_CYA_w),
    .d2l_NVDLA_PDP_D_CYA_we(d2l_NVDLA_PDP_D_CYA_we),
    .d2l_NVDLA_PDP_D_CYA_re(d2l_NVDLA_PDP_D_CYA_re),
    .h2l_NVDLA_PDP_S_STATUS_STATUS_0_w(h2l_NVDLA_PDP_S_STATUS_STATUS_0_w),
    .h2l_NVDLA_PDP_S_STATUS_STATUS_1_w(h2l_NVDLA_PDP_S_STATUS_STATUS_1_w),
    .h2l_NVDLA_PDP_S_POINTER_CONSUMER_w(h2l_NVDLA_PDP_S_POINTER_CONSUMER_w),
    .h2l_NVDLA_PDP_D_INF_INPUT_NUM_INF_INPUT_NUM_w(h2l_NVDLA_PDP_D_INF_INPUT_NUM_INF_INPUT_NUM_w),
    .h2l_NVDLA_PDP_D_NAN_INPUT_NUM_NAN_INPUT_NUM_w(h2l_NVDLA_PDP_D_NAN_INPUT_NUM_NAN_INPUT_NUM_w),
    .h2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_NAN_OUTPUT_NUM_w(h2l_NVDLA_PDP_D_NAN_OUTPUT_NUM_NAN_OUTPUT_NUM_w),
    .h2l_NVDLA_PDP_D_PERF_WRITE_STALL_PERF_WRITE_STALL_w(h2l_NVDLA_PDP_D_PERF_WRITE_STALL_PERF_WRITE_STALL_w),
    .l2d_NVDLA_PDP_S_STATUS_r(l2d_NVDLA_PDP_S_STATUS_r),
    .l2d_NVDLA_PDP_S_POINTER_r(l2d_NVDLA_PDP_S_POINTER_r),
    .l2d_NVDLA_PDP_D_OP_ENABLE_r(l2d_NVDLA_PDP_D_OP_ENABLE_r),
    .l2d_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_r(l2d_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_r),
    .l2d_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_r(l2d_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_r),
    .l2d_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_r(l2d_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_r),
    .l2d_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_r(l2d_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_r),
    .l2d_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_r(l2d_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_r),
    .l2d_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_r(l2d_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_r),
    .l2d_NVDLA_PDP_D_OPERATION_MODE_CFG_r(l2d_NVDLA_PDP_D_OPERATION_MODE_CFG_r),
    .l2d_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_r(l2d_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_r),
    .l2d_NVDLA_PDP_D_PARTIAL_WIDTH_IN_r(l2d_NVDLA_PDP_D_PARTIAL_WIDTH_IN_r),
    .l2d_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_r(l2d_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_r),
    .l2d_NVDLA_PDP_D_POOLING_KERNEL_CFG_r(l2d_NVDLA_PDP_D_POOLING_KERNEL_CFG_r),
    .l2d_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_r(l2d_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_r),
    .l2d_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_r(l2d_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_r),
    .l2d_NVDLA_PDP_D_POOLING_PADDING_CFG_r(l2d_NVDLA_PDP_D_POOLING_PADDING_CFG_r),
    .l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_r(l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_r),
    .l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_r(l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_r),
    .l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_r(l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_r),
    .l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_r(l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_r),
    .l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_r(l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_r),
    .l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_r(l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_r),
    .l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_r(l2d_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_r),
    .l2d_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_r(l2d_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_r),
    .l2d_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_r(l2d_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_r),
    .l2d_NVDLA_PDP_D_SRC_LINE_STRIDE_r(l2d_NVDLA_PDP_D_SRC_LINE_STRIDE_r),
    .l2d_NVDLA_PDP_D_SRC_SURFACE_STRIDE_r(l2d_NVDLA_PDP_D_SRC_SURFACE_STRIDE_r),
    .l2d_NVDLA_PDP_D_DST_BASE_ADDR_LOW_r(l2d_NVDLA_PDP_D_DST_BASE_ADDR_LOW_r),
    .l2d_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_r(l2d_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_r),
    .l2d_NVDLA_PDP_D_DST_LINE_STRIDE_r(l2d_NVDLA_PDP_D_DST_LINE_STRIDE_r),
    .l2d_NVDLA_PDP_D_DST_SURFACE_STRIDE_r(l2d_NVDLA_PDP_D_DST_SURFACE_STRIDE_r),
    .l2d_NVDLA_PDP_D_DST_RAM_CFG_r(l2d_NVDLA_PDP_D_DST_RAM_CFG_r),
    .l2d_NVDLA_PDP_D_DATA_FORMAT_r(l2d_NVDLA_PDP_D_DATA_FORMAT_r),
    .l2d_NVDLA_PDP_D_INF_INPUT_NUM_r(l2d_NVDLA_PDP_D_INF_INPUT_NUM_r),
    .l2d_NVDLA_PDP_D_NAN_INPUT_NUM_r(l2d_NVDLA_PDP_D_NAN_INPUT_NUM_r),
    .l2d_NVDLA_PDP_D_NAN_OUTPUT_NUM_r(l2d_NVDLA_PDP_D_NAN_OUTPUT_NUM_r),
    .l2d_NVDLA_PDP_D_PERF_ENABLE_r(l2d_NVDLA_PDP_D_PERF_ENABLE_r),
    .l2d_NVDLA_PDP_D_PERF_WRITE_STALL_r(l2d_NVDLA_PDP_D_PERF_WRITE_STALL_r),
    .l2d_NVDLA_PDP_D_CYA_r(l2d_NVDLA_PDP_D_CYA_r),
    .l2h_NVDLA_PDP_S_POINTER_PRODUCER_r(l2h_NVDLA_PDP_S_POINTER_PRODUCER_r),
    .l2h_NVDLA_PDP_D_OP_ENABLE_OP_EN_r(l2h_NVDLA_PDP_D_OP_ENABLE_OP_EN_r),
    .l2h_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_CUBE_IN_WIDTH_r(l2h_NVDLA_PDP_D_DATA_CUBE_IN_WIDTH_CUBE_IN_WIDTH_r),
    .l2h_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_CUBE_IN_HEIGHT_r(l2h_NVDLA_PDP_D_DATA_CUBE_IN_HEIGHT_CUBE_IN_HEIGHT_r),
    .l2h_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_CUBE_IN_CHANNEL_r(l2h_NVDLA_PDP_D_DATA_CUBE_IN_CHANNEL_CUBE_IN_CHANNEL_r),
    .l2h_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_CUBE_OUT_WIDTH_r(l2h_NVDLA_PDP_D_DATA_CUBE_OUT_WIDTH_CUBE_OUT_WIDTH_r),
    .l2h_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_CUBE_OUT_HEIGHT_r(l2h_NVDLA_PDP_D_DATA_CUBE_OUT_HEIGHT_CUBE_OUT_HEIGHT_r),
    .l2h_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_CUBE_OUT_CHANNEL_r(l2h_NVDLA_PDP_D_DATA_CUBE_OUT_CHANNEL_CUBE_OUT_CHANNEL_r),
    .l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_POOLING_METHOD_r(l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_POOLING_METHOD_r),
    .l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_FLYING_MODE_r(l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_FLYING_MODE_r),
    .l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_SPLIT_NUM_r(l2h_NVDLA_PDP_D_OPERATION_MODE_CFG_SPLIT_NUM_r),
    .l2h_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_NAN_TO_ZERO_r(l2h_NVDLA_PDP_D_NAN_FLUSH_TO_ZERO_NAN_TO_ZERO_r),
    .l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_FIRST_r(l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_FIRST_r),
    .l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_LAST_r(l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_LAST_r),
    .l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_MID_r(l2h_NVDLA_PDP_D_PARTIAL_WIDTH_IN_PARTIAL_WIDTH_IN_MID_r),
    .l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_FIRST_r(l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_FIRST_r),
    .l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_LAST_r(l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_LAST_r),
    .l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_MID_r(l2h_NVDLA_PDP_D_PARTIAL_WIDTH_OUT_PARTIAL_WIDTH_OUT_MID_r),
    .l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_WIDTH_r(l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_WIDTH_r),
    .l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_HEIGHT_r(l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_HEIGHT_r),
    .l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_WIDTH_r(l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_WIDTH_r),
    .l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_HEIGHT_r(l2h_NVDLA_PDP_D_POOLING_KERNEL_CFG_KERNEL_STRIDE_HEIGHT_r),
    .l2h_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_RECIP_KERNEL_WIDTH_r(l2h_NVDLA_PDP_D_RECIP_KERNEL_WIDTH_RECIP_KERNEL_WIDTH_r),
    .l2h_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_RECIP_KERNEL_HEIGHT_r(l2h_NVDLA_PDP_D_RECIP_KERNEL_HEIGHT_RECIP_KERNEL_HEIGHT_r),
    .l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_LEFT_r(l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_LEFT_r),
    .l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_TOP_r(l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_TOP_r),
    .l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_RIGHT_r(l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_RIGHT_r),
    .l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_BOTTOM_r(l2h_NVDLA_PDP_D_POOLING_PADDING_CFG_PAD_BOTTOM_r),
    .l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_PAD_VALUE_1X_r(l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_1_CFG_PAD_VALUE_1X_r),
    .l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_PAD_VALUE_2X_r(l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_2_CFG_PAD_VALUE_2X_r),
    .l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_PAD_VALUE_3X_r(l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_3_CFG_PAD_VALUE_3X_r),
    .l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_PAD_VALUE_4X_r(l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_4_CFG_PAD_VALUE_4X_r),
    .l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_PAD_VALUE_5X_r(l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_5_CFG_PAD_VALUE_5X_r),
    .l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_PAD_VALUE_6X_r(l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_6_CFG_PAD_VALUE_6X_r),
    .l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_PAD_VALUE_7X_r(l2h_NVDLA_PDP_D_POOLING_PADDING_VALUE_7_CFG_PAD_VALUE_7X_r),
    .l2h_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_SRC_BASE_ADDR_LOW_r(l2h_NVDLA_PDP_D_SRC_BASE_ADDR_LOW_SRC_BASE_ADDR_LOW_r),
    .l2h_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_SRC_BASE_ADDR_HIGH_r(l2h_NVDLA_PDP_D_SRC_BASE_ADDR_HIGH_SRC_BASE_ADDR_HIGH_r),
    .l2h_NVDLA_PDP_D_SRC_LINE_STRIDE_SRC_LINE_STRIDE_r(l2h_NVDLA_PDP_D_SRC_LINE_STRIDE_SRC_LINE_STRIDE_r),
    .l2h_NVDLA_PDP_D_SRC_SURFACE_STRIDE_SRC_SURFACE_STRIDE_r(l2h_NVDLA_PDP_D_SRC_SURFACE_STRIDE_SRC_SURFACE_STRIDE_r),
    .l2h_NVDLA_PDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_r(l2h_NVDLA_PDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_r),
    .l2h_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_r(l2h_NVDLA_PDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_r),
    .l2h_NVDLA_PDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_r(l2h_NVDLA_PDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_r),
    .l2h_NVDLA_PDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_r(l2h_NVDLA_PDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_r),
    .l2h_NVDLA_PDP_D_DST_RAM_CFG_DST_RAM_TYPE_r(l2h_NVDLA_PDP_D_DST_RAM_CFG_DST_RAM_TYPE_r),
    .l2h_NVDLA_PDP_D_DATA_FORMAT_INPUT_DATA_r(l2h_NVDLA_PDP_D_DATA_FORMAT_INPUT_DATA_r),
    .l2h_NVDLA_PDP_D_PERF_ENABLE_DMA_EN_r(l2h_NVDLA_PDP_D_PERF_ENABLE_DMA_EN_r),
    .l2h_NVDLA_PDP_D_CYA_CYA_r(l2h_NVDLA_PDP_D_CYA_CYA_r) );
    
endmodule

