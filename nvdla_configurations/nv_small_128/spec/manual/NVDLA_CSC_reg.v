//   Ordt 171103.01 autogenerated file 
//   Input: NVDLA_CSC.rdl
//   Parms: opendla.parms
//   Date: Tue Feb 04 11:11:19 CET 2020
//

//
//---------- module addrmap_NVDLA_jrdl_logic
//
module addrmap_NVDLA_jrdl_logic
(
  clk,
  reset,
  d2l_NVDLA_CSC_S_STATUS_w,
  d2l_NVDLA_CSC_S_STATUS_we,
  d2l_NVDLA_CSC_S_STATUS_re,
  d2l_NVDLA_CSC_S_POINTER_w,
  d2l_NVDLA_CSC_S_POINTER_we,
  d2l_NVDLA_CSC_S_POINTER_re,
  d2l_NVDLA_CSC_D_OP_ENABLE_w,
  d2l_NVDLA_CSC_D_OP_ENABLE_we,
  d2l_NVDLA_CSC_D_OP_ENABLE_re,
  d2l_NVDLA_CSC_D_MISC_CFG_w,
  d2l_NVDLA_CSC_D_MISC_CFG_we,
  d2l_NVDLA_CSC_D_MISC_CFG_re,
  d2l_NVDLA_CSC_D_DATAIN_FORMAT_w,
  d2l_NVDLA_CSC_D_DATAIN_FORMAT_we,
  d2l_NVDLA_CSC_D_DATAIN_FORMAT_re,
  d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_w,
  d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_we,
  d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_re,
  d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_w,
  d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_we,
  d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_re,
  d2l_NVDLA_CSC_D_BATCH_NUMBER_w,
  d2l_NVDLA_CSC_D_BATCH_NUMBER_we,
  d2l_NVDLA_CSC_D_BATCH_NUMBER_re,
  d2l_NVDLA_CSC_D_POST_Y_EXTENSION_w,
  d2l_NVDLA_CSC_D_POST_Y_EXTENSION_we,
  d2l_NVDLA_CSC_D_POST_Y_EXTENSION_re,
  d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_w,
  d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_we,
  d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_re,
  d2l_NVDLA_CSC_D_WEIGHT_FORMAT_w,
  d2l_NVDLA_CSC_D_WEIGHT_FORMAT_we,
  d2l_NVDLA_CSC_D_WEIGHT_FORMAT_re,
  d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_w,
  d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_we,
  d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_re,
  d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_w,
  d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_we,
  d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_re,
  d2l_NVDLA_CSC_D_WEIGHT_BYTES_w,
  d2l_NVDLA_CSC_D_WEIGHT_BYTES_we,
  d2l_NVDLA_CSC_D_WEIGHT_BYTES_re,
  d2l_NVDLA_CSC_D_WMB_BYTES_w,
  d2l_NVDLA_CSC_D_WMB_BYTES_we,
  d2l_NVDLA_CSC_D_WMB_BYTES_re,
  d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_w,
  d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_we,
  d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_re,
  d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_w,
  d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_we,
  d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_re,
  d2l_NVDLA_CSC_D_ATOMICS_w,
  d2l_NVDLA_CSC_D_ATOMICS_we,
  d2l_NVDLA_CSC_D_ATOMICS_re,
  d2l_NVDLA_CSC_D_RELEASE_w,
  d2l_NVDLA_CSC_D_RELEASE_we,
  d2l_NVDLA_CSC_D_RELEASE_re,
  d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_w,
  d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_we,
  d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_re,
  d2l_NVDLA_CSC_D_DILATION_EXT_w,
  d2l_NVDLA_CSC_D_DILATION_EXT_we,
  d2l_NVDLA_CSC_D_DILATION_EXT_re,
  d2l_NVDLA_CSC_D_ZERO_PADDING_w,
  d2l_NVDLA_CSC_D_ZERO_PADDING_we,
  d2l_NVDLA_CSC_D_ZERO_PADDING_re,
  d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_w,
  d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_we,
  d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_re,
  d2l_NVDLA_CSC_D_BANK_w,
  d2l_NVDLA_CSC_D_BANK_we,
  d2l_NVDLA_CSC_D_BANK_re,
  d2l_NVDLA_CSC_D_PRA_CFG_w,
  d2l_NVDLA_CSC_D_PRA_CFG_we,
  d2l_NVDLA_CSC_D_PRA_CFG_re,
  d2l_NVDLA_CSC_D_CYA_w,
  d2l_NVDLA_CSC_D_CYA_we,
  d2l_NVDLA_CSC_D_CYA_re,
  h2l_NVDLA_CSC_S_STATUS_STATUS_0_w,
  h2l_NVDLA_CSC_S_STATUS_STATUS_1_w,
  h2l_NVDLA_CSC_S_POINTER_CONSUMER_w,

  l2d_NVDLA_CSC_S_STATUS_r,
  l2d_NVDLA_CSC_S_POINTER_r,
  l2d_NVDLA_CSC_D_OP_ENABLE_r,
  l2d_NVDLA_CSC_D_MISC_CFG_r,
  l2d_NVDLA_CSC_D_DATAIN_FORMAT_r,
  l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_r,
  l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_r,
  l2d_NVDLA_CSC_D_BATCH_NUMBER_r,
  l2d_NVDLA_CSC_D_POST_Y_EXTENSION_r,
  l2d_NVDLA_CSC_D_ENTRY_PER_SLICE_r,
  l2d_NVDLA_CSC_D_WEIGHT_FORMAT_r,
  l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_r,
  l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_r,
  l2d_NVDLA_CSC_D_WEIGHT_BYTES_r,
  l2d_NVDLA_CSC_D_WMB_BYTES_r,
  l2d_NVDLA_CSC_D_DATAOUT_SIZE_0_r,
  l2d_NVDLA_CSC_D_DATAOUT_SIZE_1_r,
  l2d_NVDLA_CSC_D_ATOMICS_r,
  l2d_NVDLA_CSC_D_RELEASE_r,
  l2d_NVDLA_CSC_D_CONV_STRIDE_EXT_r,
  l2d_NVDLA_CSC_D_DILATION_EXT_r,
  l2d_NVDLA_CSC_D_ZERO_PADDING_r,
  l2d_NVDLA_CSC_D_ZERO_PADDING_VALUE_r,
  l2d_NVDLA_CSC_D_BANK_r,
  l2d_NVDLA_CSC_D_PRA_CFG_r,
  l2d_NVDLA_CSC_D_CYA_r,
  l2h_NVDLA_CSC_S_POINTER_PRODUCER_r,
  l2h_NVDLA_CSC_D_OP_ENABLE_OP_EN_r,
  l2h_NVDLA_CSC_D_MISC_CFG_CONV_MODE_r,
  l2h_NVDLA_CSC_D_MISC_CFG_IN_PRECISION_r,
  l2h_NVDLA_CSC_D_MISC_CFG_PROC_PRECISION_r,
  l2h_NVDLA_CSC_D_MISC_CFG_DATA_REUSE_r,
  l2h_NVDLA_CSC_D_MISC_CFG_WEIGHT_REUSE_r,
  l2h_NVDLA_CSC_D_MISC_CFG_SKIP_DATA_RLS_r,
  l2h_NVDLA_CSC_D_MISC_CFG_SKIP_WEIGHT_RLS_r,
  l2h_NVDLA_CSC_D_DATAIN_FORMAT_DATAIN_FORMAT_r,
  l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_WIDTH_EXT_r,
  l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_HEIGHT_EXT_r,
  l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_DATAIN_CHANNEL_EXT_r,
  l2h_NVDLA_CSC_D_BATCH_NUMBER_BATCHES_r,
  l2h_NVDLA_CSC_D_POST_Y_EXTENSION_Y_EXTENSION_r,
  l2h_NVDLA_CSC_D_ENTRY_PER_SLICE_ENTRIES_r,
  l2h_NVDLA_CSC_D_WEIGHT_FORMAT_WEIGHT_FORMAT_r,
  l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_WIDTH_EXT_r,
  l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_HEIGHT_EXT_r,
  l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_CHANNEL_EXT_r,
  l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_KERNEL_r,
  l2h_NVDLA_CSC_D_WEIGHT_BYTES_WEIGHT_BYTES_r,
  l2h_NVDLA_CSC_D_WMB_BYTES_WMB_BYTES_r,
  l2h_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_WIDTH_r,
  l2h_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_HEIGHT_r,
  l2h_NVDLA_CSC_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_r,
  l2h_NVDLA_CSC_D_ATOMICS_ATOMICS_r,
  l2h_NVDLA_CSC_D_RELEASE_RLS_SLICES_r,
  l2h_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_X_STRIDE_EXT_r,
  l2h_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_Y_STRIDE_EXT_r,
  l2h_NVDLA_CSC_D_DILATION_EXT_X_DILATION_EXT_r,
  l2h_NVDLA_CSC_D_DILATION_EXT_Y_DILATION_EXT_r,
  l2h_NVDLA_CSC_D_ZERO_PADDING_PAD_LEFT_r,
  l2h_NVDLA_CSC_D_ZERO_PADDING_PAD_TOP_r,
  l2h_NVDLA_CSC_D_ZERO_PADDING_VALUE_PAD_VALUE_r,
  l2h_NVDLA_CSC_D_BANK_DATA_BANK_r,
  l2h_NVDLA_CSC_D_BANK_WEIGHT_BANK_r,
  l2h_NVDLA_CSC_D_PRA_CFG_PRA_TRUNCATE_r,
  l2h_NVDLA_CSC_D_CYA_CYA_r );

  //------- inputs
  input    clk;
  input    reset;
  input     [31:0] d2l_NVDLA_CSC_S_STATUS_w;
  input    d2l_NVDLA_CSC_S_STATUS_we;
  input    d2l_NVDLA_CSC_S_STATUS_re;
  input     [31:0] d2l_NVDLA_CSC_S_POINTER_w;
  input    d2l_NVDLA_CSC_S_POINTER_we;
  input    d2l_NVDLA_CSC_S_POINTER_re;
  input     [31:0] d2l_NVDLA_CSC_D_OP_ENABLE_w;
  input    d2l_NVDLA_CSC_D_OP_ENABLE_we;
  input    d2l_NVDLA_CSC_D_OP_ENABLE_re;
  input     [31:0] d2l_NVDLA_CSC_D_MISC_CFG_w;
  input    d2l_NVDLA_CSC_D_MISC_CFG_we;
  input    d2l_NVDLA_CSC_D_MISC_CFG_re;
  input     [31:0] d2l_NVDLA_CSC_D_DATAIN_FORMAT_w;
  input    d2l_NVDLA_CSC_D_DATAIN_FORMAT_we;
  input    d2l_NVDLA_CSC_D_DATAIN_FORMAT_re;
  input     [31:0] d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_w;
  input    d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_we;
  input    d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_re;
  input     [31:0] d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_w;
  input    d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_we;
  input    d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_re;
  input     [31:0] d2l_NVDLA_CSC_D_BATCH_NUMBER_w;
  input    d2l_NVDLA_CSC_D_BATCH_NUMBER_we;
  input    d2l_NVDLA_CSC_D_BATCH_NUMBER_re;
  input     [31:0] d2l_NVDLA_CSC_D_POST_Y_EXTENSION_w;
  input    d2l_NVDLA_CSC_D_POST_Y_EXTENSION_we;
  input    d2l_NVDLA_CSC_D_POST_Y_EXTENSION_re;
  input     [31:0] d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_w;
  input    d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_we;
  input    d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_re;
  input     [31:0] d2l_NVDLA_CSC_D_WEIGHT_FORMAT_w;
  input    d2l_NVDLA_CSC_D_WEIGHT_FORMAT_we;
  input    d2l_NVDLA_CSC_D_WEIGHT_FORMAT_re;
  input     [31:0] d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_w;
  input    d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_we;
  input    d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_re;
  input     [31:0] d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_w;
  input    d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_we;
  input    d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_re;
  input     [31:0] d2l_NVDLA_CSC_D_WEIGHT_BYTES_w;
  input    d2l_NVDLA_CSC_D_WEIGHT_BYTES_we;
  input    d2l_NVDLA_CSC_D_WEIGHT_BYTES_re;
  input     [31:0] d2l_NVDLA_CSC_D_WMB_BYTES_w;
  input    d2l_NVDLA_CSC_D_WMB_BYTES_we;
  input    d2l_NVDLA_CSC_D_WMB_BYTES_re;
  input     [31:0] d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_w;
  input    d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_we;
  input    d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_re;
  input     [31:0] d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_w;
  input    d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_we;
  input    d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_re;
  input     [31:0] d2l_NVDLA_CSC_D_ATOMICS_w;
  input    d2l_NVDLA_CSC_D_ATOMICS_we;
  input    d2l_NVDLA_CSC_D_ATOMICS_re;
  input     [31:0] d2l_NVDLA_CSC_D_RELEASE_w;
  input    d2l_NVDLA_CSC_D_RELEASE_we;
  input    d2l_NVDLA_CSC_D_RELEASE_re;
  input     [31:0] d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_w;
  input    d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_we;
  input    d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_re;
  input     [31:0] d2l_NVDLA_CSC_D_DILATION_EXT_w;
  input    d2l_NVDLA_CSC_D_DILATION_EXT_we;
  input    d2l_NVDLA_CSC_D_DILATION_EXT_re;
  input     [31:0] d2l_NVDLA_CSC_D_ZERO_PADDING_w;
  input    d2l_NVDLA_CSC_D_ZERO_PADDING_we;
  input    d2l_NVDLA_CSC_D_ZERO_PADDING_re;
  input     [31:0] d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_w;
  input    d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_we;
  input    d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_re;
  input     [31:0] d2l_NVDLA_CSC_D_BANK_w;
  input    d2l_NVDLA_CSC_D_BANK_we;
  input    d2l_NVDLA_CSC_D_BANK_re;
  input     [31:0] d2l_NVDLA_CSC_D_PRA_CFG_w;
  input    d2l_NVDLA_CSC_D_PRA_CFG_we;
  input    d2l_NVDLA_CSC_D_PRA_CFG_re;
  input     [31:0] d2l_NVDLA_CSC_D_CYA_w;
  input    d2l_NVDLA_CSC_D_CYA_we;
  input    d2l_NVDLA_CSC_D_CYA_re;
  input     [1:0] h2l_NVDLA_CSC_S_STATUS_STATUS_0_w;
  input     [1:0] h2l_NVDLA_CSC_S_STATUS_STATUS_1_w;
  input    h2l_NVDLA_CSC_S_POINTER_CONSUMER_w;

  //------- outputs
  output     [31:0] l2d_NVDLA_CSC_S_STATUS_r;
  output     [31:0] l2d_NVDLA_CSC_S_POINTER_r;
  output     [31:0] l2d_NVDLA_CSC_D_OP_ENABLE_r;
  output     [31:0] l2d_NVDLA_CSC_D_MISC_CFG_r;
  output     [31:0] l2d_NVDLA_CSC_D_DATAIN_FORMAT_r;
  output     [31:0] l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_r;
  output     [31:0] l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_r;
  output     [31:0] l2d_NVDLA_CSC_D_BATCH_NUMBER_r;
  output     [31:0] l2d_NVDLA_CSC_D_POST_Y_EXTENSION_r;
  output     [31:0] l2d_NVDLA_CSC_D_ENTRY_PER_SLICE_r;
  output     [31:0] l2d_NVDLA_CSC_D_WEIGHT_FORMAT_r;
  output     [31:0] l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_r;
  output     [31:0] l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_r;
  output     [31:0] l2d_NVDLA_CSC_D_WEIGHT_BYTES_r;
  output     [31:0] l2d_NVDLA_CSC_D_WMB_BYTES_r;
  output     [31:0] l2d_NVDLA_CSC_D_DATAOUT_SIZE_0_r;
  output     [31:0] l2d_NVDLA_CSC_D_DATAOUT_SIZE_1_r;
  output     [31:0] l2d_NVDLA_CSC_D_ATOMICS_r;
  output     [31:0] l2d_NVDLA_CSC_D_RELEASE_r;
  output     [31:0] l2d_NVDLA_CSC_D_CONV_STRIDE_EXT_r;
  output     [31:0] l2d_NVDLA_CSC_D_DILATION_EXT_r;
  output     [31:0] l2d_NVDLA_CSC_D_ZERO_PADDING_r;
  output     [31:0] l2d_NVDLA_CSC_D_ZERO_PADDING_VALUE_r;
  output     [31:0] l2d_NVDLA_CSC_D_BANK_r;
  output     [31:0] l2d_NVDLA_CSC_D_PRA_CFG_r;
  output     [31:0] l2d_NVDLA_CSC_D_CYA_r;
  output    l2h_NVDLA_CSC_S_POINTER_PRODUCER_r;
  output    l2h_NVDLA_CSC_D_OP_ENABLE_OP_EN_r;
  output    l2h_NVDLA_CSC_D_MISC_CFG_CONV_MODE_r;
  output     [1:0] l2h_NVDLA_CSC_D_MISC_CFG_IN_PRECISION_r;
  output     [1:0] l2h_NVDLA_CSC_D_MISC_CFG_PROC_PRECISION_r;
  output    l2h_NVDLA_CSC_D_MISC_CFG_DATA_REUSE_r;
  output    l2h_NVDLA_CSC_D_MISC_CFG_WEIGHT_REUSE_r;
  output    l2h_NVDLA_CSC_D_MISC_CFG_SKIP_DATA_RLS_r;
  output    l2h_NVDLA_CSC_D_MISC_CFG_SKIP_WEIGHT_RLS_r;
  output    l2h_NVDLA_CSC_D_DATAIN_FORMAT_DATAIN_FORMAT_r;
  output     [12:0] l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_WIDTH_EXT_r;
  output     [12:0] l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_HEIGHT_EXT_r;
  output     [12:0] l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_DATAIN_CHANNEL_EXT_r;
  output     [4:0] l2h_NVDLA_CSC_D_BATCH_NUMBER_BATCHES_r;
  output     [1:0] l2h_NVDLA_CSC_D_POST_Y_EXTENSION_Y_EXTENSION_r;
  output     [13:0] l2h_NVDLA_CSC_D_ENTRY_PER_SLICE_ENTRIES_r;
  output    l2h_NVDLA_CSC_D_WEIGHT_FORMAT_WEIGHT_FORMAT_r;
  output     [4:0] l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_WIDTH_EXT_r;
  output     [4:0] l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_HEIGHT_EXT_r;
  output     [12:0] l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_CHANNEL_EXT_r;
  output     [12:0] l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_KERNEL_r;
  output     [31:0] l2h_NVDLA_CSC_D_WEIGHT_BYTES_WEIGHT_BYTES_r;
  output     [27:0] l2h_NVDLA_CSC_D_WMB_BYTES_WMB_BYTES_r;
  output     [12:0] l2h_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_WIDTH_r;
  output     [12:0] l2h_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_HEIGHT_r;
  output     [12:0] l2h_NVDLA_CSC_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_r;
  output     [20:0] l2h_NVDLA_CSC_D_ATOMICS_ATOMICS_r;
  output     [11:0] l2h_NVDLA_CSC_D_RELEASE_RLS_SLICES_r;
  output     [2:0] l2h_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_X_STRIDE_EXT_r;
  output     [2:0] l2h_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_Y_STRIDE_EXT_r;
  output     [4:0] l2h_NVDLA_CSC_D_DILATION_EXT_X_DILATION_EXT_r;
  output     [4:0] l2h_NVDLA_CSC_D_DILATION_EXT_Y_DILATION_EXT_r;
  output     [4:0] l2h_NVDLA_CSC_D_ZERO_PADDING_PAD_LEFT_r;
  output     [4:0] l2h_NVDLA_CSC_D_ZERO_PADDING_PAD_TOP_r;
  output     [15:0] l2h_NVDLA_CSC_D_ZERO_PADDING_VALUE_PAD_VALUE_r;
  output     [4:0] l2h_NVDLA_CSC_D_BANK_DATA_BANK_r;
  output     [4:0] l2h_NVDLA_CSC_D_BANK_WEIGHT_BANK_r;
  output     [1:0] l2h_NVDLA_CSC_D_PRA_CFG_PRA_TRUNCATE_r;
  output     [31:0] l2h_NVDLA_CSC_D_CYA_CYA_r;


  //------- reg defines
  reg   [1:0] rg_NVDLA_CSC_S_STATUS_STATUS_0;
  reg   [1:0] rg_NVDLA_CSC_S_STATUS_STATUS_1;
  reg   [31:0] l2d_NVDLA_CSC_S_STATUS_r;
  reg  rg_NVDLA_CSC_S_POINTER_PRODUCER;
  reg  reg_NVDLA_CSC_S_POINTER_PRODUCER_next;
  reg  l2h_NVDLA_CSC_S_POINTER_PRODUCER_r;
  reg  rg_NVDLA_CSC_S_POINTER_CONSUMER;
  reg   [31:0] l2d_NVDLA_CSC_S_POINTER_r;
  reg  rg_NVDLA_CSC_D_OP_ENABLE_OP_EN;
  reg  reg_NVDLA_CSC_D_OP_ENABLE_OP_EN_next;
  reg  l2h_NVDLA_CSC_D_OP_ENABLE_OP_EN_r;
  reg   [31:0] l2d_NVDLA_CSC_D_OP_ENABLE_r;
  reg  rg_NVDLA_CSC_D_MISC_CFG_CONV_MODE;
  reg  reg_NVDLA_CSC_D_MISC_CFG_CONV_MODE_next;
  reg  l2h_NVDLA_CSC_D_MISC_CFG_CONV_MODE_r;
  reg   [1:0] rg_NVDLA_CSC_D_MISC_CFG_IN_PRECISION;
  reg   [1:0] reg_NVDLA_CSC_D_MISC_CFG_IN_PRECISION_next;
  reg   [1:0] l2h_NVDLA_CSC_D_MISC_CFG_IN_PRECISION_r;
  reg   [1:0] rg_NVDLA_CSC_D_MISC_CFG_PROC_PRECISION;
  reg   [1:0] reg_NVDLA_CSC_D_MISC_CFG_PROC_PRECISION_next;
  reg   [1:0] l2h_NVDLA_CSC_D_MISC_CFG_PROC_PRECISION_r;
  reg  rg_NVDLA_CSC_D_MISC_CFG_DATA_REUSE;
  reg  reg_NVDLA_CSC_D_MISC_CFG_DATA_REUSE_next;
  reg  l2h_NVDLA_CSC_D_MISC_CFG_DATA_REUSE_r;
  reg  rg_NVDLA_CSC_D_MISC_CFG_WEIGHT_REUSE;
  reg  reg_NVDLA_CSC_D_MISC_CFG_WEIGHT_REUSE_next;
  reg  l2h_NVDLA_CSC_D_MISC_CFG_WEIGHT_REUSE_r;
  reg  rg_NVDLA_CSC_D_MISC_CFG_SKIP_DATA_RLS;
  reg  reg_NVDLA_CSC_D_MISC_CFG_SKIP_DATA_RLS_next;
  reg  l2h_NVDLA_CSC_D_MISC_CFG_SKIP_DATA_RLS_r;
  reg  rg_NVDLA_CSC_D_MISC_CFG_SKIP_WEIGHT_RLS;
  reg  reg_NVDLA_CSC_D_MISC_CFG_SKIP_WEIGHT_RLS_next;
  reg  l2h_NVDLA_CSC_D_MISC_CFG_SKIP_WEIGHT_RLS_r;
  reg   [31:0] l2d_NVDLA_CSC_D_MISC_CFG_r;
  reg  rg_NVDLA_CSC_D_DATAIN_FORMAT_DATAIN_FORMAT;
  reg  reg_NVDLA_CSC_D_DATAIN_FORMAT_DATAIN_FORMAT_next;
  reg  l2h_NVDLA_CSC_D_DATAIN_FORMAT_DATAIN_FORMAT_r;
  reg   [31:0] l2d_NVDLA_CSC_D_DATAIN_FORMAT_r;
  reg   [12:0] rg_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_WIDTH_EXT;
  reg   [12:0] reg_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_WIDTH_EXT_next;
  reg   [12:0] l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_WIDTH_EXT_r;
  reg   [12:0] rg_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_HEIGHT_EXT;
  reg   [12:0] reg_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_HEIGHT_EXT_next;
  reg   [12:0] l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_HEIGHT_EXT_r;
  reg   [31:0] l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_r;
  reg   [12:0] rg_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_DATAIN_CHANNEL_EXT;
  reg   [12:0] reg_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_DATAIN_CHANNEL_EXT_next;
  reg   [12:0] l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_DATAIN_CHANNEL_EXT_r;
  reg   [31:0] l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_r;
  reg   [4:0] rg_NVDLA_CSC_D_BATCH_NUMBER_BATCHES;
  reg   [4:0] reg_NVDLA_CSC_D_BATCH_NUMBER_BATCHES_next;
  reg   [4:0] l2h_NVDLA_CSC_D_BATCH_NUMBER_BATCHES_r;
  reg   [31:0] l2d_NVDLA_CSC_D_BATCH_NUMBER_r;
  reg   [1:0] rg_NVDLA_CSC_D_POST_Y_EXTENSION_Y_EXTENSION;
  reg   [1:0] reg_NVDLA_CSC_D_POST_Y_EXTENSION_Y_EXTENSION_next;
  reg   [1:0] l2h_NVDLA_CSC_D_POST_Y_EXTENSION_Y_EXTENSION_r;
  reg   [31:0] l2d_NVDLA_CSC_D_POST_Y_EXTENSION_r;
  reg   [13:0] rg_NVDLA_CSC_D_ENTRY_PER_SLICE_ENTRIES;
  reg   [13:0] reg_NVDLA_CSC_D_ENTRY_PER_SLICE_ENTRIES_next;
  reg   [13:0] l2h_NVDLA_CSC_D_ENTRY_PER_SLICE_ENTRIES_r;
  reg   [31:0] l2d_NVDLA_CSC_D_ENTRY_PER_SLICE_r;
  reg  rg_NVDLA_CSC_D_WEIGHT_FORMAT_WEIGHT_FORMAT;
  reg  reg_NVDLA_CSC_D_WEIGHT_FORMAT_WEIGHT_FORMAT_next;
  reg  l2h_NVDLA_CSC_D_WEIGHT_FORMAT_WEIGHT_FORMAT_r;
  reg   [31:0] l2d_NVDLA_CSC_D_WEIGHT_FORMAT_r;
  reg   [4:0] rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_WIDTH_EXT;
  reg   [4:0] reg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_WIDTH_EXT_next;
  reg   [4:0] l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_WIDTH_EXT_r;
  reg   [4:0] rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_HEIGHT_EXT;
  reg   [4:0] reg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_HEIGHT_EXT_next;
  reg   [4:0] l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_HEIGHT_EXT_r;
  reg   [31:0] l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_r;
  reg   [12:0] rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_CHANNEL_EXT;
  reg   [12:0] reg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_CHANNEL_EXT_next;
  reg   [12:0] l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_CHANNEL_EXT_r;
  reg   [12:0] rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_KERNEL;
  reg   [12:0] reg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_KERNEL_next;
  reg   [12:0] l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_KERNEL_r;
  reg   [31:0] l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_r;
  reg   [31:0] rg_NVDLA_CSC_D_WEIGHT_BYTES_WEIGHT_BYTES;
  reg   [31:0] reg_NVDLA_CSC_D_WEIGHT_BYTES_WEIGHT_BYTES_next;
  reg   [31:0] l2h_NVDLA_CSC_D_WEIGHT_BYTES_WEIGHT_BYTES_r;
  reg   [31:0] l2d_NVDLA_CSC_D_WEIGHT_BYTES_r;
  reg   [27:0] rg_NVDLA_CSC_D_WMB_BYTES_WMB_BYTES;
  reg   [27:0] reg_NVDLA_CSC_D_WMB_BYTES_WMB_BYTES_next;
  reg   [27:0] l2h_NVDLA_CSC_D_WMB_BYTES_WMB_BYTES_r;
  reg   [31:0] l2d_NVDLA_CSC_D_WMB_BYTES_r;
  reg   [12:0] rg_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_WIDTH;
  reg   [12:0] reg_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_WIDTH_next;
  reg   [12:0] l2h_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_WIDTH_r;
  reg   [12:0] rg_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_HEIGHT;
  reg   [12:0] reg_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_HEIGHT_next;
  reg   [12:0] l2h_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_HEIGHT_r;
  reg   [31:0] l2d_NVDLA_CSC_D_DATAOUT_SIZE_0_r;
  reg   [12:0] rg_NVDLA_CSC_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL;
  reg   [12:0] reg_NVDLA_CSC_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_next;
  reg   [12:0] l2h_NVDLA_CSC_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_r;
  reg   [31:0] l2d_NVDLA_CSC_D_DATAOUT_SIZE_1_r;
  reg   [20:0] rg_NVDLA_CSC_D_ATOMICS_ATOMICS;
  reg   [20:0] reg_NVDLA_CSC_D_ATOMICS_ATOMICS_next;
  reg   [20:0] l2h_NVDLA_CSC_D_ATOMICS_ATOMICS_r;
  reg   [31:0] l2d_NVDLA_CSC_D_ATOMICS_r;
  reg   [11:0] rg_NVDLA_CSC_D_RELEASE_RLS_SLICES;
  reg   [11:0] reg_NVDLA_CSC_D_RELEASE_RLS_SLICES_next;
  reg   [11:0] l2h_NVDLA_CSC_D_RELEASE_RLS_SLICES_r;
  reg   [31:0] l2d_NVDLA_CSC_D_RELEASE_r;
  reg   [2:0] rg_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_X_STRIDE_EXT;
  reg   [2:0] reg_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_X_STRIDE_EXT_next;
  reg   [2:0] l2h_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_X_STRIDE_EXT_r;
  reg   [2:0] rg_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_Y_STRIDE_EXT;
  reg   [2:0] reg_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_Y_STRIDE_EXT_next;
  reg   [2:0] l2h_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_Y_STRIDE_EXT_r;
  reg   [31:0] l2d_NVDLA_CSC_D_CONV_STRIDE_EXT_r;
  reg   [4:0] rg_NVDLA_CSC_D_DILATION_EXT_X_DILATION_EXT;
  reg   [4:0] reg_NVDLA_CSC_D_DILATION_EXT_X_DILATION_EXT_next;
  reg   [4:0] l2h_NVDLA_CSC_D_DILATION_EXT_X_DILATION_EXT_r;
  reg   [4:0] rg_NVDLA_CSC_D_DILATION_EXT_Y_DILATION_EXT;
  reg   [4:0] reg_NVDLA_CSC_D_DILATION_EXT_Y_DILATION_EXT_next;
  reg   [4:0] l2h_NVDLA_CSC_D_DILATION_EXT_Y_DILATION_EXT_r;
  reg   [31:0] l2d_NVDLA_CSC_D_DILATION_EXT_r;
  reg   [4:0] rg_NVDLA_CSC_D_ZERO_PADDING_PAD_LEFT;
  reg   [4:0] reg_NVDLA_CSC_D_ZERO_PADDING_PAD_LEFT_next;
  reg   [4:0] l2h_NVDLA_CSC_D_ZERO_PADDING_PAD_LEFT_r;
  reg   [4:0] rg_NVDLA_CSC_D_ZERO_PADDING_PAD_TOP;
  reg   [4:0] reg_NVDLA_CSC_D_ZERO_PADDING_PAD_TOP_next;
  reg   [4:0] l2h_NVDLA_CSC_D_ZERO_PADDING_PAD_TOP_r;
  reg   [31:0] l2d_NVDLA_CSC_D_ZERO_PADDING_r;
  reg   [15:0] rg_NVDLA_CSC_D_ZERO_PADDING_VALUE_PAD_VALUE;
  reg   [15:0] reg_NVDLA_CSC_D_ZERO_PADDING_VALUE_PAD_VALUE_next;
  reg   [15:0] l2h_NVDLA_CSC_D_ZERO_PADDING_VALUE_PAD_VALUE_r;
  reg   [31:0] l2d_NVDLA_CSC_D_ZERO_PADDING_VALUE_r;
  reg   [4:0] rg_NVDLA_CSC_D_BANK_DATA_BANK;
  reg   [4:0] reg_NVDLA_CSC_D_BANK_DATA_BANK_next;
  reg   [4:0] l2h_NVDLA_CSC_D_BANK_DATA_BANK_r;
  reg   [4:0] rg_NVDLA_CSC_D_BANK_WEIGHT_BANK;
  reg   [4:0] reg_NVDLA_CSC_D_BANK_WEIGHT_BANK_next;
  reg   [4:0] l2h_NVDLA_CSC_D_BANK_WEIGHT_BANK_r;
  reg   [31:0] l2d_NVDLA_CSC_D_BANK_r;
  reg   [1:0] rg_NVDLA_CSC_D_PRA_CFG_PRA_TRUNCATE;
  reg   [1:0] reg_NVDLA_CSC_D_PRA_CFG_PRA_TRUNCATE_next;
  reg   [1:0] l2h_NVDLA_CSC_D_PRA_CFG_PRA_TRUNCATE_r;
  reg   [31:0] l2d_NVDLA_CSC_D_PRA_CFG_r;
  reg   [31:0] rg_NVDLA_CSC_D_CYA_CYA;
  reg   [31:0] reg_NVDLA_CSC_D_CYA_CYA_next;
  reg   [31:0] l2h_NVDLA_CSC_D_CYA_CYA_r;
  reg   [31:0] l2d_NVDLA_CSC_D_CYA_r;
  
  
  //------- combinatorial assigns for NVDLA_CSC_D_MISC_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_MISC_CFG_r = 32'b0;
    l2d_NVDLA_CSC_D_MISC_CFG_r [0]  = rg_NVDLA_CSC_D_MISC_CFG_CONV_MODE;
    l2d_NVDLA_CSC_D_MISC_CFG_r [9:8]  = rg_NVDLA_CSC_D_MISC_CFG_IN_PRECISION;
    l2d_NVDLA_CSC_D_MISC_CFG_r [13:12]  = rg_NVDLA_CSC_D_MISC_CFG_PROC_PRECISION;
    l2d_NVDLA_CSC_D_MISC_CFG_r [16]  = rg_NVDLA_CSC_D_MISC_CFG_DATA_REUSE;
    l2d_NVDLA_CSC_D_MISC_CFG_r [20]  = rg_NVDLA_CSC_D_MISC_CFG_WEIGHT_REUSE;
    l2d_NVDLA_CSC_D_MISC_CFG_r [24]  = rg_NVDLA_CSC_D_MISC_CFG_SKIP_DATA_RLS;
    l2d_NVDLA_CSC_D_MISC_CFG_r [28]  = rg_NVDLA_CSC_D_MISC_CFG_SKIP_WEIGHT_RLS;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_DATAIN_SIZE_EXT_1
  always @ (*) begin
    reg_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_DATAIN_CHANNEL_EXT_next = rg_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_DATAIN_CHANNEL_EXT;
    l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_DATAIN_CHANNEL_EXT_r = rg_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_DATAIN_CHANNEL_EXT;
    if (d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_we) reg_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_DATAIN_CHANNEL_EXT_next = d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_w [12:0] ;
  end
  
  //------- reg assigns for NVDLA_CSC_D_DATAIN_SIZE_EXT_1
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_DATAIN_CHANNEL_EXT <= #1 13'h0;
    end
    else begin
      rg_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_DATAIN_CHANNEL_EXT <= #1  reg_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_DATAIN_CHANNEL_EXT_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_ATOMICS (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_ATOMICS_r = 32'b0;
    l2d_NVDLA_CSC_D_ATOMICS_r [20:0]  = rg_NVDLA_CSC_D_ATOMICS_ATOMICS;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_DILATION_EXT
  always @ (*) begin
    reg_NVDLA_CSC_D_DILATION_EXT_X_DILATION_EXT_next = rg_NVDLA_CSC_D_DILATION_EXT_X_DILATION_EXT;
    l2h_NVDLA_CSC_D_DILATION_EXT_X_DILATION_EXT_r = rg_NVDLA_CSC_D_DILATION_EXT_X_DILATION_EXT;
    reg_NVDLA_CSC_D_DILATION_EXT_Y_DILATION_EXT_next = rg_NVDLA_CSC_D_DILATION_EXT_Y_DILATION_EXT;
    l2h_NVDLA_CSC_D_DILATION_EXT_Y_DILATION_EXT_r = rg_NVDLA_CSC_D_DILATION_EXT_Y_DILATION_EXT;
    if (d2l_NVDLA_CSC_D_DILATION_EXT_we) reg_NVDLA_CSC_D_DILATION_EXT_X_DILATION_EXT_next = d2l_NVDLA_CSC_D_DILATION_EXT_w [4:0] ;
    if (d2l_NVDLA_CSC_D_DILATION_EXT_we) reg_NVDLA_CSC_D_DILATION_EXT_Y_DILATION_EXT_next = d2l_NVDLA_CSC_D_DILATION_EXT_w [20:16] ;
  end
  
  //------- reg assigns for NVDLA_CSC_D_DILATION_EXT
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_DILATION_EXT_X_DILATION_EXT <= #1 5'h0;
      rg_NVDLA_CSC_D_DILATION_EXT_Y_DILATION_EXT <= #1 5'h0;
    end
    else begin
      rg_NVDLA_CSC_D_DILATION_EXT_X_DILATION_EXT <= #1  reg_NVDLA_CSC_D_DILATION_EXT_X_DILATION_EXT_next;
      rg_NVDLA_CSC_D_DILATION_EXT_Y_DILATION_EXT <= #1  reg_NVDLA_CSC_D_DILATION_EXT_Y_DILATION_EXT_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_ZERO_PADDING_VALUE (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_ZERO_PADDING_VALUE_r = 32'b0;
    l2d_NVDLA_CSC_D_ZERO_PADDING_VALUE_r [15:0]  = rg_NVDLA_CSC_D_ZERO_PADDING_VALUE_PAD_VALUE;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_DATAIN_SIZE_EXT_0
  always @ (*) begin
    reg_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_WIDTH_EXT_next = rg_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_WIDTH_EXT;
    l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_WIDTH_EXT_r = rg_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_WIDTH_EXT;
    reg_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_HEIGHT_EXT_next = rg_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_HEIGHT_EXT;
    l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_HEIGHT_EXT_r = rg_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_HEIGHT_EXT;
    if (d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_we) reg_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_WIDTH_EXT_next = d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_w [12:0] ;
    if (d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_we) reg_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_HEIGHT_EXT_next = d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_w [28:16] ;
  end
  
  //------- reg assigns for NVDLA_CSC_D_DATAIN_SIZE_EXT_0
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_WIDTH_EXT <= #1 13'h0;
      rg_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_HEIGHT_EXT <= #1 13'h0;
    end
    else begin
      rg_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_WIDTH_EXT <= #1  reg_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_WIDTH_EXT_next;
      rg_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_HEIGHT_EXT <= #1  reg_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_HEIGHT_EXT_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_WEIGHT_SIZE_EXT_1 (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_r = 32'b0;
    l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_r [12:0]  = rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_CHANNEL_EXT;
    l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_r [28:16]  = rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_KERNEL;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_WMB_BYTES (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_WMB_BYTES_r = 32'b0;
    l2d_NVDLA_CSC_D_WMB_BYTES_r [27:0]  = rg_NVDLA_CSC_D_WMB_BYTES_WMB_BYTES;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_POST_Y_EXTENSION
  always @ (*) begin
    reg_NVDLA_CSC_D_POST_Y_EXTENSION_Y_EXTENSION_next = rg_NVDLA_CSC_D_POST_Y_EXTENSION_Y_EXTENSION;
    l2h_NVDLA_CSC_D_POST_Y_EXTENSION_Y_EXTENSION_r = rg_NVDLA_CSC_D_POST_Y_EXTENSION_Y_EXTENSION;
    if (d2l_NVDLA_CSC_D_POST_Y_EXTENSION_we) reg_NVDLA_CSC_D_POST_Y_EXTENSION_Y_EXTENSION_next = d2l_NVDLA_CSC_D_POST_Y_EXTENSION_w [1:0] ;
  end
  
  //------- reg assigns for NVDLA_CSC_D_POST_Y_EXTENSION
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_POST_Y_EXTENSION_Y_EXTENSION <= #1 2'h0;
    end
    else begin
      rg_NVDLA_CSC_D_POST_Y_EXTENSION_Y_EXTENSION <= #1  reg_NVDLA_CSC_D_POST_Y_EXTENSION_Y_EXTENSION_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_WMB_BYTES
  always @ (*) begin
    reg_NVDLA_CSC_D_WMB_BYTES_WMB_BYTES_next = rg_NVDLA_CSC_D_WMB_BYTES_WMB_BYTES;
    l2h_NVDLA_CSC_D_WMB_BYTES_WMB_BYTES_r = rg_NVDLA_CSC_D_WMB_BYTES_WMB_BYTES;
    if (d2l_NVDLA_CSC_D_WMB_BYTES_we) reg_NVDLA_CSC_D_WMB_BYTES_WMB_BYTES_next = d2l_NVDLA_CSC_D_WMB_BYTES_w [27:0] ;
  end
  
  //------- reg assigns for NVDLA_CSC_D_WMB_BYTES
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_WMB_BYTES_WMB_BYTES <= #1 28'h0;
    end
    else begin
      rg_NVDLA_CSC_D_WMB_BYTES_WMB_BYTES <= #1  reg_NVDLA_CSC_D_WMB_BYTES_WMB_BYTES_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_WEIGHT_FORMAT (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_WEIGHT_FORMAT_r = 32'b0;
    l2d_NVDLA_CSC_D_WEIGHT_FORMAT_r [0]  = rg_NVDLA_CSC_D_WEIGHT_FORMAT_WEIGHT_FORMAT;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_ZERO_PADDING
  always @ (*) begin
    reg_NVDLA_CSC_D_ZERO_PADDING_PAD_LEFT_next = rg_NVDLA_CSC_D_ZERO_PADDING_PAD_LEFT;
    l2h_NVDLA_CSC_D_ZERO_PADDING_PAD_LEFT_r = rg_NVDLA_CSC_D_ZERO_PADDING_PAD_LEFT;
    reg_NVDLA_CSC_D_ZERO_PADDING_PAD_TOP_next = rg_NVDLA_CSC_D_ZERO_PADDING_PAD_TOP;
    l2h_NVDLA_CSC_D_ZERO_PADDING_PAD_TOP_r = rg_NVDLA_CSC_D_ZERO_PADDING_PAD_TOP;
    if (d2l_NVDLA_CSC_D_ZERO_PADDING_we) reg_NVDLA_CSC_D_ZERO_PADDING_PAD_LEFT_next = d2l_NVDLA_CSC_D_ZERO_PADDING_w [4:0] ;
    if (d2l_NVDLA_CSC_D_ZERO_PADDING_we) reg_NVDLA_CSC_D_ZERO_PADDING_PAD_TOP_next = d2l_NVDLA_CSC_D_ZERO_PADDING_w [20:16] ;
  end
  
  //------- reg assigns for NVDLA_CSC_D_ZERO_PADDING
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_ZERO_PADDING_PAD_LEFT <= #1 5'h0;
      rg_NVDLA_CSC_D_ZERO_PADDING_PAD_TOP <= #1 5'h0;
    end
    else begin
      rg_NVDLA_CSC_D_ZERO_PADDING_PAD_LEFT <= #1  reg_NVDLA_CSC_D_ZERO_PADDING_PAD_LEFT_next;
      rg_NVDLA_CSC_D_ZERO_PADDING_PAD_TOP <= #1  reg_NVDLA_CSC_D_ZERO_PADDING_PAD_TOP_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_WEIGHT_SIZE_EXT_0 (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_r = 32'b0;
    l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_r [4:0]  = rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_WIDTH_EXT;
    l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_r [20:16]  = rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_HEIGHT_EXT;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_CONV_STRIDE_EXT (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_CONV_STRIDE_EXT_r = 32'b0;
    l2d_NVDLA_CSC_D_CONV_STRIDE_EXT_r [2:0]  = rg_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_X_STRIDE_EXT;
    l2d_NVDLA_CSC_D_CONV_STRIDE_EXT_r [18:16]  = rg_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_Y_STRIDE_EXT;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_PRA_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_PRA_CFG_r = 32'b0;
    l2d_NVDLA_CSC_D_PRA_CFG_r [1:0]  = rg_NVDLA_CSC_D_PRA_CFG_PRA_TRUNCATE;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_CYA (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_CYA_r = rg_NVDLA_CSC_D_CYA_CYA;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_S_STATUS (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_S_STATUS_r = 32'b0;
    l2d_NVDLA_CSC_S_STATUS_r [1:0]  = rg_NVDLA_CSC_S_STATUS_STATUS_0;
    l2d_NVDLA_CSC_S_STATUS_r [17:16]  = rg_NVDLA_CSC_S_STATUS_STATUS_1;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_DATAIN_SIZE_EXT_1 (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_r = 32'b0;
    l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_r [12:0]  = rg_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_DATAIN_CHANNEL_EXT;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_WEIGHT_BYTES
  always @ (*) begin
    reg_NVDLA_CSC_D_WEIGHT_BYTES_WEIGHT_BYTES_next = rg_NVDLA_CSC_D_WEIGHT_BYTES_WEIGHT_BYTES;
    l2h_NVDLA_CSC_D_WEIGHT_BYTES_WEIGHT_BYTES_r = rg_NVDLA_CSC_D_WEIGHT_BYTES_WEIGHT_BYTES;
    if (d2l_NVDLA_CSC_D_WEIGHT_BYTES_we) reg_NVDLA_CSC_D_WEIGHT_BYTES_WEIGHT_BYTES_next = d2l_NVDLA_CSC_D_WEIGHT_BYTES_w;
  end
  
  //------- reg assigns for NVDLA_CSC_D_WEIGHT_BYTES
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_WEIGHT_BYTES_WEIGHT_BYTES <= #1 32'h0;
    end
    else begin
      rg_NVDLA_CSC_D_WEIGHT_BYTES_WEIGHT_BYTES <= #1  reg_NVDLA_CSC_D_WEIGHT_BYTES_WEIGHT_BYTES_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_ZERO_PADDING_VALUE
  always @ (*) begin
    reg_NVDLA_CSC_D_ZERO_PADDING_VALUE_PAD_VALUE_next = rg_NVDLA_CSC_D_ZERO_PADDING_VALUE_PAD_VALUE;
    l2h_NVDLA_CSC_D_ZERO_PADDING_VALUE_PAD_VALUE_r = rg_NVDLA_CSC_D_ZERO_PADDING_VALUE_PAD_VALUE;
    if (d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_we) reg_NVDLA_CSC_D_ZERO_PADDING_VALUE_PAD_VALUE_next = d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_w [15:0] ;
  end
  
  //------- reg assigns for NVDLA_CSC_D_ZERO_PADDING_VALUE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_ZERO_PADDING_VALUE_PAD_VALUE <= #1 16'h0;
    end
    else begin
      rg_NVDLA_CSC_D_ZERO_PADDING_VALUE_PAD_VALUE <= #1  reg_NVDLA_CSC_D_ZERO_PADDING_VALUE_PAD_VALUE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_S_STATUS
  always @ (*) begin
    rg_NVDLA_CSC_S_STATUS_STATUS_0 =  h2l_NVDLA_CSC_S_STATUS_STATUS_0_w;
    rg_NVDLA_CSC_S_STATUS_STATUS_1 =  h2l_NVDLA_CSC_S_STATUS_STATUS_1_w;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_ATOMICS
  always @ (*) begin
    reg_NVDLA_CSC_D_ATOMICS_ATOMICS_next = rg_NVDLA_CSC_D_ATOMICS_ATOMICS;
    l2h_NVDLA_CSC_D_ATOMICS_ATOMICS_r = rg_NVDLA_CSC_D_ATOMICS_ATOMICS;
    if (d2l_NVDLA_CSC_D_ATOMICS_we) reg_NVDLA_CSC_D_ATOMICS_ATOMICS_next = d2l_NVDLA_CSC_D_ATOMICS_w [20:0] ;
  end
  
  //------- reg assigns for NVDLA_CSC_D_ATOMICS
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_ATOMICS_ATOMICS <= #1 21'h1;
    end
    else begin
      rg_NVDLA_CSC_D_ATOMICS_ATOMICS <= #1  reg_NVDLA_CSC_D_ATOMICS_ATOMICS_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_S_POINTER (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_S_POINTER_r = 32'b0;
    l2d_NVDLA_CSC_S_POINTER_r [0]  = rg_NVDLA_CSC_S_POINTER_PRODUCER;
    l2d_NVDLA_CSC_S_POINTER_r [16]  = rg_NVDLA_CSC_S_POINTER_CONSUMER;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_CYA
  always @ (*) begin
    reg_NVDLA_CSC_D_CYA_CYA_next = rg_NVDLA_CSC_D_CYA_CYA;
    l2h_NVDLA_CSC_D_CYA_CYA_r = rg_NVDLA_CSC_D_CYA_CYA;
    if (d2l_NVDLA_CSC_D_CYA_we) reg_NVDLA_CSC_D_CYA_CYA_next = d2l_NVDLA_CSC_D_CYA_w;
  end
  
  //------- reg assigns for NVDLA_CSC_D_CYA
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_CYA_CYA <= #1 32'h0;
    end
    else begin
      rg_NVDLA_CSC_D_CYA_CYA <= #1  reg_NVDLA_CSC_D_CYA_CYA_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_WEIGHT_FORMAT
  always @ (*) begin
    reg_NVDLA_CSC_D_WEIGHT_FORMAT_WEIGHT_FORMAT_next = rg_NVDLA_CSC_D_WEIGHT_FORMAT_WEIGHT_FORMAT;
    l2h_NVDLA_CSC_D_WEIGHT_FORMAT_WEIGHT_FORMAT_r = rg_NVDLA_CSC_D_WEIGHT_FORMAT_WEIGHT_FORMAT;
    if (d2l_NVDLA_CSC_D_WEIGHT_FORMAT_we) reg_NVDLA_CSC_D_WEIGHT_FORMAT_WEIGHT_FORMAT_next = d2l_NVDLA_CSC_D_WEIGHT_FORMAT_w [0] ;
  end
  
  //------- reg assigns for NVDLA_CSC_D_WEIGHT_FORMAT
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_WEIGHT_FORMAT_WEIGHT_FORMAT <= #1 1'h0;
    end
    else begin
      rg_NVDLA_CSC_D_WEIGHT_FORMAT_WEIGHT_FORMAT <= #1  reg_NVDLA_CSC_D_WEIGHT_FORMAT_WEIGHT_FORMAT_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_ZERO_PADDING (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_ZERO_PADDING_r = 32'b0;
    l2d_NVDLA_CSC_D_ZERO_PADDING_r [4:0]  = rg_NVDLA_CSC_D_ZERO_PADDING_PAD_LEFT;
    l2d_NVDLA_CSC_D_ZERO_PADDING_r [20:16]  = rg_NVDLA_CSC_D_ZERO_PADDING_PAD_TOP;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_OP_ENABLE
  always @ (*) begin
    reg_NVDLA_CSC_D_OP_ENABLE_OP_EN_next = rg_NVDLA_CSC_D_OP_ENABLE_OP_EN;
    l2h_NVDLA_CSC_D_OP_ENABLE_OP_EN_r = rg_NVDLA_CSC_D_OP_ENABLE_OP_EN;
    if (d2l_NVDLA_CSC_D_OP_ENABLE_we) reg_NVDLA_CSC_D_OP_ENABLE_OP_EN_next = d2l_NVDLA_CSC_D_OP_ENABLE_w [0] ;
  end
  
  //------- reg assigns for NVDLA_CSC_D_OP_ENABLE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_OP_ENABLE_OP_EN <= #1 1'h0;
    end
    else begin
      rg_NVDLA_CSC_D_OP_ENABLE_OP_EN <= #1  reg_NVDLA_CSC_D_OP_ENABLE_OP_EN_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_CONV_STRIDE_EXT
  always @ (*) begin
    reg_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_X_STRIDE_EXT_next = rg_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_X_STRIDE_EXT;
    l2h_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_X_STRIDE_EXT_r = rg_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_X_STRIDE_EXT;
    reg_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_Y_STRIDE_EXT_next = rg_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_Y_STRIDE_EXT;
    l2h_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_Y_STRIDE_EXT_r = rg_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_Y_STRIDE_EXT;
    if (d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_we) reg_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_X_STRIDE_EXT_next = d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_w [2:0] ;
    if (d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_we) reg_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_Y_STRIDE_EXT_next = d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_w [18:16] ;
  end
  
  //------- reg assigns for NVDLA_CSC_D_CONV_STRIDE_EXT
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_X_STRIDE_EXT <= #1 3'h0;
      rg_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_Y_STRIDE_EXT <= #1 3'h0;
    end
    else begin
      rg_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_X_STRIDE_EXT <= #1  reg_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_X_STRIDE_EXT_next;
      rg_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_Y_STRIDE_EXT <= #1  reg_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_Y_STRIDE_EXT_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_BANK
  always @ (*) begin
    reg_NVDLA_CSC_D_BANK_DATA_BANK_next = rg_NVDLA_CSC_D_BANK_DATA_BANK;
    l2h_NVDLA_CSC_D_BANK_DATA_BANK_r = rg_NVDLA_CSC_D_BANK_DATA_BANK;
    reg_NVDLA_CSC_D_BANK_WEIGHT_BANK_next = rg_NVDLA_CSC_D_BANK_WEIGHT_BANK;
    l2h_NVDLA_CSC_D_BANK_WEIGHT_BANK_r = rg_NVDLA_CSC_D_BANK_WEIGHT_BANK;
    if (d2l_NVDLA_CSC_D_BANK_we) reg_NVDLA_CSC_D_BANK_DATA_BANK_next = d2l_NVDLA_CSC_D_BANK_w [4:0] ;
    if (d2l_NVDLA_CSC_D_BANK_we) reg_NVDLA_CSC_D_BANK_WEIGHT_BANK_next = d2l_NVDLA_CSC_D_BANK_w [20:16] ;
  end
  
  //------- reg assigns for NVDLA_CSC_D_BANK
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_BANK_DATA_BANK <= #1 5'h0;
      rg_NVDLA_CSC_D_BANK_WEIGHT_BANK <= #1 5'h0;
    end
    else begin
      rg_NVDLA_CSC_D_BANK_DATA_BANK <= #1  reg_NVDLA_CSC_D_BANK_DATA_BANK_next;
      rg_NVDLA_CSC_D_BANK_WEIGHT_BANK <= #1  reg_NVDLA_CSC_D_BANK_WEIGHT_BANK_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_DATAIN_SIZE_EXT_0 (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_r = 32'b0;
    l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_r [12:0]  = rg_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_WIDTH_EXT;
    l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_r [28:16]  = rg_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_HEIGHT_EXT;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_POST_Y_EXTENSION (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_POST_Y_EXTENSION_r = 32'b0;
    l2d_NVDLA_CSC_D_POST_Y_EXTENSION_r [1:0]  = rg_NVDLA_CSC_D_POST_Y_EXTENSION_Y_EXTENSION;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_RELEASE
  always @ (*) begin
    reg_NVDLA_CSC_D_RELEASE_RLS_SLICES_next = rg_NVDLA_CSC_D_RELEASE_RLS_SLICES;
    l2h_NVDLA_CSC_D_RELEASE_RLS_SLICES_r = rg_NVDLA_CSC_D_RELEASE_RLS_SLICES;
    if (d2l_NVDLA_CSC_D_RELEASE_we) reg_NVDLA_CSC_D_RELEASE_RLS_SLICES_next = d2l_NVDLA_CSC_D_RELEASE_w [11:0] ;
  end
  
  //------- reg assigns for NVDLA_CSC_D_RELEASE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_RELEASE_RLS_SLICES <= #1 12'h1;
    end
    else begin
      rg_NVDLA_CSC_D_RELEASE_RLS_SLICES <= #1  reg_NVDLA_CSC_D_RELEASE_RLS_SLICES_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_RELEASE (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_RELEASE_r = 32'b0;
    l2d_NVDLA_CSC_D_RELEASE_r [11:0]  = rg_NVDLA_CSC_D_RELEASE_RLS_SLICES;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_WEIGHT_BYTES (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_WEIGHT_BYTES_r = rg_NVDLA_CSC_D_WEIGHT_BYTES_WEIGHT_BYTES;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_MISC_CFG
  always @ (*) begin
    reg_NVDLA_CSC_D_MISC_CFG_CONV_MODE_next = rg_NVDLA_CSC_D_MISC_CFG_CONV_MODE;
    l2h_NVDLA_CSC_D_MISC_CFG_CONV_MODE_r = rg_NVDLA_CSC_D_MISC_CFG_CONV_MODE;
    reg_NVDLA_CSC_D_MISC_CFG_IN_PRECISION_next = rg_NVDLA_CSC_D_MISC_CFG_IN_PRECISION;
    l2h_NVDLA_CSC_D_MISC_CFG_IN_PRECISION_r = rg_NVDLA_CSC_D_MISC_CFG_IN_PRECISION;
    reg_NVDLA_CSC_D_MISC_CFG_PROC_PRECISION_next = rg_NVDLA_CSC_D_MISC_CFG_PROC_PRECISION;
    l2h_NVDLA_CSC_D_MISC_CFG_PROC_PRECISION_r = rg_NVDLA_CSC_D_MISC_CFG_PROC_PRECISION;
    reg_NVDLA_CSC_D_MISC_CFG_DATA_REUSE_next = rg_NVDLA_CSC_D_MISC_CFG_DATA_REUSE;
    l2h_NVDLA_CSC_D_MISC_CFG_DATA_REUSE_r = rg_NVDLA_CSC_D_MISC_CFG_DATA_REUSE;
    reg_NVDLA_CSC_D_MISC_CFG_WEIGHT_REUSE_next = rg_NVDLA_CSC_D_MISC_CFG_WEIGHT_REUSE;
    l2h_NVDLA_CSC_D_MISC_CFG_WEIGHT_REUSE_r = rg_NVDLA_CSC_D_MISC_CFG_WEIGHT_REUSE;
    reg_NVDLA_CSC_D_MISC_CFG_SKIP_DATA_RLS_next = rg_NVDLA_CSC_D_MISC_CFG_SKIP_DATA_RLS;
    l2h_NVDLA_CSC_D_MISC_CFG_SKIP_DATA_RLS_r = rg_NVDLA_CSC_D_MISC_CFG_SKIP_DATA_RLS;
    reg_NVDLA_CSC_D_MISC_CFG_SKIP_WEIGHT_RLS_next = rg_NVDLA_CSC_D_MISC_CFG_SKIP_WEIGHT_RLS;
    l2h_NVDLA_CSC_D_MISC_CFG_SKIP_WEIGHT_RLS_r = rg_NVDLA_CSC_D_MISC_CFG_SKIP_WEIGHT_RLS;
    if (d2l_NVDLA_CSC_D_MISC_CFG_we) reg_NVDLA_CSC_D_MISC_CFG_CONV_MODE_next = d2l_NVDLA_CSC_D_MISC_CFG_w [0] ;
    if (d2l_NVDLA_CSC_D_MISC_CFG_we) reg_NVDLA_CSC_D_MISC_CFG_IN_PRECISION_next = d2l_NVDLA_CSC_D_MISC_CFG_w [9:8] ;
    if (d2l_NVDLA_CSC_D_MISC_CFG_we) reg_NVDLA_CSC_D_MISC_CFG_PROC_PRECISION_next = d2l_NVDLA_CSC_D_MISC_CFG_w [13:12] ;
    if (d2l_NVDLA_CSC_D_MISC_CFG_we) reg_NVDLA_CSC_D_MISC_CFG_DATA_REUSE_next = d2l_NVDLA_CSC_D_MISC_CFG_w [16] ;
    if (d2l_NVDLA_CSC_D_MISC_CFG_we) reg_NVDLA_CSC_D_MISC_CFG_WEIGHT_REUSE_next = d2l_NVDLA_CSC_D_MISC_CFG_w [20] ;
    if (d2l_NVDLA_CSC_D_MISC_CFG_we) reg_NVDLA_CSC_D_MISC_CFG_SKIP_DATA_RLS_next = d2l_NVDLA_CSC_D_MISC_CFG_w [24] ;
    if (d2l_NVDLA_CSC_D_MISC_CFG_we) reg_NVDLA_CSC_D_MISC_CFG_SKIP_WEIGHT_RLS_next = d2l_NVDLA_CSC_D_MISC_CFG_w [28] ;
  end
  
  //------- reg assigns for NVDLA_CSC_D_MISC_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_MISC_CFG_CONV_MODE <= #1 1'h0;
      rg_NVDLA_CSC_D_MISC_CFG_IN_PRECISION <= #1 2'h1;
      rg_NVDLA_CSC_D_MISC_CFG_PROC_PRECISION <= #1 2'h1;
      rg_NVDLA_CSC_D_MISC_CFG_DATA_REUSE <= #1 1'h0;
      rg_NVDLA_CSC_D_MISC_CFG_WEIGHT_REUSE <= #1 1'h0;
      rg_NVDLA_CSC_D_MISC_CFG_SKIP_DATA_RLS <= #1 1'h0;
      rg_NVDLA_CSC_D_MISC_CFG_SKIP_WEIGHT_RLS <= #1 1'h0;
    end
    else begin
      rg_NVDLA_CSC_D_MISC_CFG_CONV_MODE <= #1  reg_NVDLA_CSC_D_MISC_CFG_CONV_MODE_next;
      rg_NVDLA_CSC_D_MISC_CFG_IN_PRECISION <= #1  reg_NVDLA_CSC_D_MISC_CFG_IN_PRECISION_next;
      rg_NVDLA_CSC_D_MISC_CFG_PROC_PRECISION <= #1  reg_NVDLA_CSC_D_MISC_CFG_PROC_PRECISION_next;
      rg_NVDLA_CSC_D_MISC_CFG_DATA_REUSE <= #1  reg_NVDLA_CSC_D_MISC_CFG_DATA_REUSE_next;
      rg_NVDLA_CSC_D_MISC_CFG_WEIGHT_REUSE <= #1  reg_NVDLA_CSC_D_MISC_CFG_WEIGHT_REUSE_next;
      rg_NVDLA_CSC_D_MISC_CFG_SKIP_DATA_RLS <= #1  reg_NVDLA_CSC_D_MISC_CFG_SKIP_DATA_RLS_next;
      rg_NVDLA_CSC_D_MISC_CFG_SKIP_WEIGHT_RLS <= #1  reg_NVDLA_CSC_D_MISC_CFG_SKIP_WEIGHT_RLS_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_DATAIN_FORMAT
  always @ (*) begin
    reg_NVDLA_CSC_D_DATAIN_FORMAT_DATAIN_FORMAT_next = rg_NVDLA_CSC_D_DATAIN_FORMAT_DATAIN_FORMAT;
    l2h_NVDLA_CSC_D_DATAIN_FORMAT_DATAIN_FORMAT_r = rg_NVDLA_CSC_D_DATAIN_FORMAT_DATAIN_FORMAT;
    if (d2l_NVDLA_CSC_D_DATAIN_FORMAT_we) reg_NVDLA_CSC_D_DATAIN_FORMAT_DATAIN_FORMAT_next = d2l_NVDLA_CSC_D_DATAIN_FORMAT_w [0] ;
  end
  
  //------- reg assigns for NVDLA_CSC_D_DATAIN_FORMAT
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_DATAIN_FORMAT_DATAIN_FORMAT <= #1 1'h0;
    end
    else begin
      rg_NVDLA_CSC_D_DATAIN_FORMAT_DATAIN_FORMAT <= #1  reg_NVDLA_CSC_D_DATAIN_FORMAT_DATAIN_FORMAT_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_DATAOUT_SIZE_1 (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_DATAOUT_SIZE_1_r = 32'b0;
    l2d_NVDLA_CSC_D_DATAOUT_SIZE_1_r [12:0]  = rg_NVDLA_CSC_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_DILATION_EXT (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_DILATION_EXT_r = 32'b0;
    l2d_NVDLA_CSC_D_DILATION_EXT_r [4:0]  = rg_NVDLA_CSC_D_DILATION_EXT_X_DILATION_EXT;
    l2d_NVDLA_CSC_D_DILATION_EXT_r [20:16]  = rg_NVDLA_CSC_D_DILATION_EXT_Y_DILATION_EXT;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_WEIGHT_SIZE_EXT_0
  always @ (*) begin
    reg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_WIDTH_EXT_next = rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_WIDTH_EXT;
    l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_WIDTH_EXT_r = rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_WIDTH_EXT;
    reg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_HEIGHT_EXT_next = rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_HEIGHT_EXT;
    l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_HEIGHT_EXT_r = rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_HEIGHT_EXT;
    if (d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_we) reg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_WIDTH_EXT_next = d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_w [4:0] ;
    if (d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_we) reg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_HEIGHT_EXT_next = d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_w [20:16] ;
  end
  
  //------- reg assigns for NVDLA_CSC_D_WEIGHT_SIZE_EXT_0
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_WIDTH_EXT <= #1 5'h0;
      rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_HEIGHT_EXT <= #1 5'h0;
    end
    else begin
      rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_WIDTH_EXT <= #1  reg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_WIDTH_EXT_next;
      rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_HEIGHT_EXT <= #1  reg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_HEIGHT_EXT_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_WEIGHT_SIZE_EXT_1
  always @ (*) begin
    reg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_CHANNEL_EXT_next = rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_CHANNEL_EXT;
    l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_CHANNEL_EXT_r = rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_CHANNEL_EXT;
    reg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_KERNEL_next = rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_KERNEL;
    l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_KERNEL_r = rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_KERNEL;
    if (d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_we) reg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_CHANNEL_EXT_next = d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_w [12:0] ;
    if (d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_we) reg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_KERNEL_next = d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_w [28:16] ;
  end
  
  //------- reg assigns for NVDLA_CSC_D_WEIGHT_SIZE_EXT_1
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_CHANNEL_EXT <= #1 13'h0;
      rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_KERNEL <= #1 13'h0;
    end
    else begin
      rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_CHANNEL_EXT <= #1  reg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_CHANNEL_EXT_next;
      rg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_KERNEL <= #1  reg_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_KERNEL_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_DATAOUT_SIZE_0 (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_DATAOUT_SIZE_0_r = 32'b0;
    l2d_NVDLA_CSC_D_DATAOUT_SIZE_0_r [12:0]  = rg_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_WIDTH;
    l2d_NVDLA_CSC_D_DATAOUT_SIZE_0_r [28:16]  = rg_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_HEIGHT;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_OP_ENABLE (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_OP_ENABLE_r = 32'b0;
    l2d_NVDLA_CSC_D_OP_ENABLE_r [0]  = rg_NVDLA_CSC_D_OP_ENABLE_OP_EN;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_BATCH_NUMBER (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_BATCH_NUMBER_r = 32'b0;
    l2d_NVDLA_CSC_D_BATCH_NUMBER_r [4:0]  = rg_NVDLA_CSC_D_BATCH_NUMBER_BATCHES;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_S_POINTER
  always @ (*) begin
    reg_NVDLA_CSC_S_POINTER_PRODUCER_next = rg_NVDLA_CSC_S_POINTER_PRODUCER;
    l2h_NVDLA_CSC_S_POINTER_PRODUCER_r = rg_NVDLA_CSC_S_POINTER_PRODUCER;
    rg_NVDLA_CSC_S_POINTER_CONSUMER =  h2l_NVDLA_CSC_S_POINTER_CONSUMER_w;
    if (d2l_NVDLA_CSC_S_POINTER_we) reg_NVDLA_CSC_S_POINTER_PRODUCER_next = d2l_NVDLA_CSC_S_POINTER_w [0] ;
  end
  
  //------- reg assigns for NVDLA_CSC_S_POINTER
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_S_POINTER_PRODUCER <= #1 1'h0;
    end
    else begin
      rg_NVDLA_CSC_S_POINTER_PRODUCER <= #1  reg_NVDLA_CSC_S_POINTER_PRODUCER_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_BATCH_NUMBER
  always @ (*) begin
    reg_NVDLA_CSC_D_BATCH_NUMBER_BATCHES_next = rg_NVDLA_CSC_D_BATCH_NUMBER_BATCHES;
    l2h_NVDLA_CSC_D_BATCH_NUMBER_BATCHES_r = rg_NVDLA_CSC_D_BATCH_NUMBER_BATCHES;
    if (d2l_NVDLA_CSC_D_BATCH_NUMBER_we) reg_NVDLA_CSC_D_BATCH_NUMBER_BATCHES_next = d2l_NVDLA_CSC_D_BATCH_NUMBER_w [4:0] ;
  end
  
  //------- reg assigns for NVDLA_CSC_D_BATCH_NUMBER
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_BATCH_NUMBER_BATCHES <= #1 5'h0;
    end
    else begin
      rg_NVDLA_CSC_D_BATCH_NUMBER_BATCHES <= #1  reg_NVDLA_CSC_D_BATCH_NUMBER_BATCHES_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_ENTRY_PER_SLICE (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_ENTRY_PER_SLICE_r = 32'b0;
    l2d_NVDLA_CSC_D_ENTRY_PER_SLICE_r [13:0]  = rg_NVDLA_CSC_D_ENTRY_PER_SLICE_ENTRIES;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_PRA_CFG
  always @ (*) begin
    reg_NVDLA_CSC_D_PRA_CFG_PRA_TRUNCATE_next = rg_NVDLA_CSC_D_PRA_CFG_PRA_TRUNCATE;
    l2h_NVDLA_CSC_D_PRA_CFG_PRA_TRUNCATE_r = rg_NVDLA_CSC_D_PRA_CFG_PRA_TRUNCATE;
    if (d2l_NVDLA_CSC_D_PRA_CFG_we) reg_NVDLA_CSC_D_PRA_CFG_PRA_TRUNCATE_next = d2l_NVDLA_CSC_D_PRA_CFG_w [1:0] ;
  end
  
  //------- reg assigns for NVDLA_CSC_D_PRA_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_PRA_CFG_PRA_TRUNCATE <= #1 2'h0;
    end
    else begin
      rg_NVDLA_CSC_D_PRA_CFG_PRA_TRUNCATE <= #1  reg_NVDLA_CSC_D_PRA_CFG_PRA_TRUNCATE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_BANK (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_BANK_r = 32'b0;
    l2d_NVDLA_CSC_D_BANK_r [4:0]  = rg_NVDLA_CSC_D_BANK_DATA_BANK;
    l2d_NVDLA_CSC_D_BANK_r [20:16]  = rg_NVDLA_CSC_D_BANK_WEIGHT_BANK;
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_ENTRY_PER_SLICE
  always @ (*) begin
    reg_NVDLA_CSC_D_ENTRY_PER_SLICE_ENTRIES_next = rg_NVDLA_CSC_D_ENTRY_PER_SLICE_ENTRIES;
    l2h_NVDLA_CSC_D_ENTRY_PER_SLICE_ENTRIES_r = rg_NVDLA_CSC_D_ENTRY_PER_SLICE_ENTRIES;
    if (d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_we) reg_NVDLA_CSC_D_ENTRY_PER_SLICE_ENTRIES_next = d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_w [13:0] ;
  end
  
  //------- reg assigns for NVDLA_CSC_D_ENTRY_PER_SLICE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_ENTRY_PER_SLICE_ENTRIES <= #1 14'h0;
    end
    else begin
      rg_NVDLA_CSC_D_ENTRY_PER_SLICE_ENTRIES <= #1  reg_NVDLA_CSC_D_ENTRY_PER_SLICE_ENTRIES_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_DATAOUT_SIZE_0
  always @ (*) begin
    reg_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_WIDTH_next = rg_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_WIDTH;
    l2h_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_WIDTH_r = rg_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_WIDTH;
    reg_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_HEIGHT_next = rg_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_HEIGHT;
    l2h_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_HEIGHT_r = rg_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_HEIGHT;
    if (d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_we) reg_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_WIDTH_next = d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_w [12:0] ;
    if (d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_we) reg_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_HEIGHT_next = d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_w [28:16] ;
  end
  
  //------- reg assigns for NVDLA_CSC_D_DATAOUT_SIZE_0
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_WIDTH <= #1 13'h0;
      rg_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_HEIGHT <= #1 13'h0;
    end
    else begin
      rg_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_WIDTH <= #1  reg_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_WIDTH_next;
      rg_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_HEIGHT <= #1  reg_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_HEIGHT_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_DATAOUT_SIZE_1
  always @ (*) begin
    reg_NVDLA_CSC_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_next = rg_NVDLA_CSC_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL;
    l2h_NVDLA_CSC_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_r = rg_NVDLA_CSC_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL;
    if (d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_we) reg_NVDLA_CSC_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_next = d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_w [12:0] ;
  end
  
  //------- reg assigns for NVDLA_CSC_D_DATAOUT_SIZE_1
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CSC_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL <= #1 13'h0;
    end
    else begin
      rg_NVDLA_CSC_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL <= #1  reg_NVDLA_CSC_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CSC_D_DATAIN_FORMAT (pio read data)
  always @ (*) begin
    l2d_NVDLA_CSC_D_DATAIN_FORMAT_r = 32'b0;
    l2d_NVDLA_CSC_D_DATAIN_FORMAT_r [0]  = rg_NVDLA_CSC_D_DATAIN_FORMAT_DATAIN_FORMAT;
  end
  
endmodule

//
//---------- module addrmap_NVDLA_jrdl_decode
//
module addrmap_NVDLA_jrdl_decode
(
  clk,
  reset,
  leaf_dec_wr_data,
  leaf_dec_addr,
  leaf_dec_block_sel,
  leaf_dec_valid,
  leaf_dec_wr_dvld,
  leaf_dec_cycle,
  leaf_dec_wr_width,
  l2d_NVDLA_CSC_S_STATUS_r,
  l2d_NVDLA_CSC_S_POINTER_r,
  l2d_NVDLA_CSC_D_OP_ENABLE_r,
  l2d_NVDLA_CSC_D_MISC_CFG_r,
  l2d_NVDLA_CSC_D_DATAIN_FORMAT_r,
  l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_r,
  l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_r,
  l2d_NVDLA_CSC_D_BATCH_NUMBER_r,
  l2d_NVDLA_CSC_D_POST_Y_EXTENSION_r,
  l2d_NVDLA_CSC_D_ENTRY_PER_SLICE_r,
  l2d_NVDLA_CSC_D_WEIGHT_FORMAT_r,
  l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_r,
  l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_r,
  l2d_NVDLA_CSC_D_WEIGHT_BYTES_r,
  l2d_NVDLA_CSC_D_WMB_BYTES_r,
  l2d_NVDLA_CSC_D_DATAOUT_SIZE_0_r,
  l2d_NVDLA_CSC_D_DATAOUT_SIZE_1_r,
  l2d_NVDLA_CSC_D_ATOMICS_r,
  l2d_NVDLA_CSC_D_RELEASE_r,
  l2d_NVDLA_CSC_D_CONV_STRIDE_EXT_r,
  l2d_NVDLA_CSC_D_DILATION_EXT_r,
  l2d_NVDLA_CSC_D_ZERO_PADDING_r,
  l2d_NVDLA_CSC_D_ZERO_PADDING_VALUE_r,
  l2d_NVDLA_CSC_D_BANK_r,
  l2d_NVDLA_CSC_D_PRA_CFG_r,
  l2d_NVDLA_CSC_D_CYA_r,

  dec_leaf_rd_data,
  dec_leaf_ack,
  dec_leaf_nack,
  dec_leaf_accept,
  dec_leaf_reject,
  dec_leaf_retry_atomic,
  dec_leaf_data_width,
  d2l_NVDLA_CSC_S_STATUS_w,
  d2l_NVDLA_CSC_S_STATUS_we,
  d2l_NVDLA_CSC_S_STATUS_re,
  d2l_NVDLA_CSC_S_POINTER_w,
  d2l_NVDLA_CSC_S_POINTER_we,
  d2l_NVDLA_CSC_S_POINTER_re,
  d2l_NVDLA_CSC_D_OP_ENABLE_w,
  d2l_NVDLA_CSC_D_OP_ENABLE_we,
  d2l_NVDLA_CSC_D_OP_ENABLE_re,
  d2l_NVDLA_CSC_D_MISC_CFG_w,
  d2l_NVDLA_CSC_D_MISC_CFG_we,
  d2l_NVDLA_CSC_D_MISC_CFG_re,
  d2l_NVDLA_CSC_D_DATAIN_FORMAT_w,
  d2l_NVDLA_CSC_D_DATAIN_FORMAT_we,
  d2l_NVDLA_CSC_D_DATAIN_FORMAT_re,
  d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_w,
  d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_we,
  d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_re,
  d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_w,
  d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_we,
  d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_re,
  d2l_NVDLA_CSC_D_BATCH_NUMBER_w,
  d2l_NVDLA_CSC_D_BATCH_NUMBER_we,
  d2l_NVDLA_CSC_D_BATCH_NUMBER_re,
  d2l_NVDLA_CSC_D_POST_Y_EXTENSION_w,
  d2l_NVDLA_CSC_D_POST_Y_EXTENSION_we,
  d2l_NVDLA_CSC_D_POST_Y_EXTENSION_re,
  d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_w,
  d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_we,
  d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_re,
  d2l_NVDLA_CSC_D_WEIGHT_FORMAT_w,
  d2l_NVDLA_CSC_D_WEIGHT_FORMAT_we,
  d2l_NVDLA_CSC_D_WEIGHT_FORMAT_re,
  d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_w,
  d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_we,
  d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_re,
  d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_w,
  d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_we,
  d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_re,
  d2l_NVDLA_CSC_D_WEIGHT_BYTES_w,
  d2l_NVDLA_CSC_D_WEIGHT_BYTES_we,
  d2l_NVDLA_CSC_D_WEIGHT_BYTES_re,
  d2l_NVDLA_CSC_D_WMB_BYTES_w,
  d2l_NVDLA_CSC_D_WMB_BYTES_we,
  d2l_NVDLA_CSC_D_WMB_BYTES_re,
  d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_w,
  d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_we,
  d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_re,
  d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_w,
  d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_we,
  d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_re,
  d2l_NVDLA_CSC_D_ATOMICS_w,
  d2l_NVDLA_CSC_D_ATOMICS_we,
  d2l_NVDLA_CSC_D_ATOMICS_re,
  d2l_NVDLA_CSC_D_RELEASE_w,
  d2l_NVDLA_CSC_D_RELEASE_we,
  d2l_NVDLA_CSC_D_RELEASE_re,
  d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_w,
  d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_we,
  d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_re,
  d2l_NVDLA_CSC_D_DILATION_EXT_w,
  d2l_NVDLA_CSC_D_DILATION_EXT_we,
  d2l_NVDLA_CSC_D_DILATION_EXT_re,
  d2l_NVDLA_CSC_D_ZERO_PADDING_w,
  d2l_NVDLA_CSC_D_ZERO_PADDING_we,
  d2l_NVDLA_CSC_D_ZERO_PADDING_re,
  d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_w,
  d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_we,
  d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_re,
  d2l_NVDLA_CSC_D_BANK_w,
  d2l_NVDLA_CSC_D_BANK_we,
  d2l_NVDLA_CSC_D_BANK_re,
  d2l_NVDLA_CSC_D_PRA_CFG_w,
  d2l_NVDLA_CSC_D_PRA_CFG_we,
  d2l_NVDLA_CSC_D_PRA_CFG_re,
  d2l_NVDLA_CSC_D_CYA_w,
  d2l_NVDLA_CSC_D_CYA_we,
  d2l_NVDLA_CSC_D_CYA_re );

  //------- inputs
  input    clk;
  input    reset;
  input     [31:0] leaf_dec_wr_data;
  input     [39:0] leaf_dec_addr;
  input    leaf_dec_block_sel;
  input    leaf_dec_valid;
  input    leaf_dec_wr_dvld;
  input     [1:0] leaf_dec_cycle;
  input     [2:0] leaf_dec_wr_width;
  input     [31:0] l2d_NVDLA_CSC_S_STATUS_r;
  input     [31:0] l2d_NVDLA_CSC_S_POINTER_r;
  input     [31:0] l2d_NVDLA_CSC_D_OP_ENABLE_r;
  input     [31:0] l2d_NVDLA_CSC_D_MISC_CFG_r;
  input     [31:0] l2d_NVDLA_CSC_D_DATAIN_FORMAT_r;
  input     [31:0] l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_r;
  input     [31:0] l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_r;
  input     [31:0] l2d_NVDLA_CSC_D_BATCH_NUMBER_r;
  input     [31:0] l2d_NVDLA_CSC_D_POST_Y_EXTENSION_r;
  input     [31:0] l2d_NVDLA_CSC_D_ENTRY_PER_SLICE_r;
  input     [31:0] l2d_NVDLA_CSC_D_WEIGHT_FORMAT_r;
  input     [31:0] l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_r;
  input     [31:0] l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_r;
  input     [31:0] l2d_NVDLA_CSC_D_WEIGHT_BYTES_r;
  input     [31:0] l2d_NVDLA_CSC_D_WMB_BYTES_r;
  input     [31:0] l2d_NVDLA_CSC_D_DATAOUT_SIZE_0_r;
  input     [31:0] l2d_NVDLA_CSC_D_DATAOUT_SIZE_1_r;
  input     [31:0] l2d_NVDLA_CSC_D_ATOMICS_r;
  input     [31:0] l2d_NVDLA_CSC_D_RELEASE_r;
  input     [31:0] l2d_NVDLA_CSC_D_CONV_STRIDE_EXT_r;
  input     [31:0] l2d_NVDLA_CSC_D_DILATION_EXT_r;
  input     [31:0] l2d_NVDLA_CSC_D_ZERO_PADDING_r;
  input     [31:0] l2d_NVDLA_CSC_D_ZERO_PADDING_VALUE_r;
  input     [31:0] l2d_NVDLA_CSC_D_BANK_r;
  input     [31:0] l2d_NVDLA_CSC_D_PRA_CFG_r;
  input     [31:0] l2d_NVDLA_CSC_D_CYA_r;

  //------- outputs
  output     [31:0] dec_leaf_rd_data;
  output    dec_leaf_ack;
  output    dec_leaf_nack;
  output    dec_leaf_accept;
  output    dec_leaf_reject;
  output    dec_leaf_retry_atomic;
  output     [2:0] dec_leaf_data_width;
  output     [31:0] d2l_NVDLA_CSC_S_STATUS_w;
  output    d2l_NVDLA_CSC_S_STATUS_we;
  output    d2l_NVDLA_CSC_S_STATUS_re;
  output     [31:0] d2l_NVDLA_CSC_S_POINTER_w;
  output    d2l_NVDLA_CSC_S_POINTER_we;
  output    d2l_NVDLA_CSC_S_POINTER_re;
  output     [31:0] d2l_NVDLA_CSC_D_OP_ENABLE_w;
  output    d2l_NVDLA_CSC_D_OP_ENABLE_we;
  output    d2l_NVDLA_CSC_D_OP_ENABLE_re;
  output     [31:0] d2l_NVDLA_CSC_D_MISC_CFG_w;
  output    d2l_NVDLA_CSC_D_MISC_CFG_we;
  output    d2l_NVDLA_CSC_D_MISC_CFG_re;
  output     [31:0] d2l_NVDLA_CSC_D_DATAIN_FORMAT_w;
  output    d2l_NVDLA_CSC_D_DATAIN_FORMAT_we;
  output    d2l_NVDLA_CSC_D_DATAIN_FORMAT_re;
  output     [31:0] d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_w;
  output    d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_we;
  output    d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_re;
  output     [31:0] d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_w;
  output    d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_we;
  output    d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_re;
  output     [31:0] d2l_NVDLA_CSC_D_BATCH_NUMBER_w;
  output    d2l_NVDLA_CSC_D_BATCH_NUMBER_we;
  output    d2l_NVDLA_CSC_D_BATCH_NUMBER_re;
  output     [31:0] d2l_NVDLA_CSC_D_POST_Y_EXTENSION_w;
  output    d2l_NVDLA_CSC_D_POST_Y_EXTENSION_we;
  output    d2l_NVDLA_CSC_D_POST_Y_EXTENSION_re;
  output     [31:0] d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_w;
  output    d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_we;
  output    d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_re;
  output     [31:0] d2l_NVDLA_CSC_D_WEIGHT_FORMAT_w;
  output    d2l_NVDLA_CSC_D_WEIGHT_FORMAT_we;
  output    d2l_NVDLA_CSC_D_WEIGHT_FORMAT_re;
  output     [31:0] d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_w;
  output    d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_we;
  output    d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_re;
  output     [31:0] d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_w;
  output    d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_we;
  output    d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_re;
  output     [31:0] d2l_NVDLA_CSC_D_WEIGHT_BYTES_w;
  output    d2l_NVDLA_CSC_D_WEIGHT_BYTES_we;
  output    d2l_NVDLA_CSC_D_WEIGHT_BYTES_re;
  output     [31:0] d2l_NVDLA_CSC_D_WMB_BYTES_w;
  output    d2l_NVDLA_CSC_D_WMB_BYTES_we;
  output    d2l_NVDLA_CSC_D_WMB_BYTES_re;
  output     [31:0] d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_w;
  output    d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_we;
  output    d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_re;
  output     [31:0] d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_w;
  output    d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_we;
  output    d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_re;
  output     [31:0] d2l_NVDLA_CSC_D_ATOMICS_w;
  output    d2l_NVDLA_CSC_D_ATOMICS_we;
  output    d2l_NVDLA_CSC_D_ATOMICS_re;
  output     [31:0] d2l_NVDLA_CSC_D_RELEASE_w;
  output    d2l_NVDLA_CSC_D_RELEASE_we;
  output    d2l_NVDLA_CSC_D_RELEASE_re;
  output     [31:0] d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_w;
  output    d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_we;
  output    d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_re;
  output     [31:0] d2l_NVDLA_CSC_D_DILATION_EXT_w;
  output    d2l_NVDLA_CSC_D_DILATION_EXT_we;
  output    d2l_NVDLA_CSC_D_DILATION_EXT_re;
  output     [31:0] d2l_NVDLA_CSC_D_ZERO_PADDING_w;
  output    d2l_NVDLA_CSC_D_ZERO_PADDING_we;
  output    d2l_NVDLA_CSC_D_ZERO_PADDING_re;
  output     [31:0] d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_w;
  output    d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_we;
  output    d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_re;
  output     [31:0] d2l_NVDLA_CSC_D_BANK_w;
  output    d2l_NVDLA_CSC_D_BANK_we;
  output    d2l_NVDLA_CSC_D_BANK_re;
  output     [31:0] d2l_NVDLA_CSC_D_PRA_CFG_w;
  output    d2l_NVDLA_CSC_D_PRA_CFG_we;
  output    d2l_NVDLA_CSC_D_PRA_CFG_re;
  output     [31:0] d2l_NVDLA_CSC_D_CYA_w;
  output    d2l_NVDLA_CSC_D_CYA_we;
  output    d2l_NVDLA_CSC_D_CYA_re;


  //------- wire defines
  wire   [31:0] pio_dec_write_data;
  wire   [14:2] pio_dec_address;
  wire  pio_dec_read;
  wire  pio_dec_write;
  wire   [39:0] block_sel_addr;
  wire  block_sel;
  wire  leaf_dec_valid_active;
  wire  leaf_dec_wr_dvld_active;
  
  //------- reg defines
  reg   [31:0] d2l_NVDLA_CSC_S_STATUS_w;
  reg  d2l_NVDLA_CSC_S_STATUS_we;
  reg  d2l_NVDLA_CSC_S_STATUS_re;
  reg   [31:0] d2l_NVDLA_CSC_S_POINTER_w;
  reg  d2l_NVDLA_CSC_S_POINTER_we;
  reg  d2l_NVDLA_CSC_S_POINTER_re;
  reg   [31:0] d2l_NVDLA_CSC_D_OP_ENABLE_w;
  reg  d2l_NVDLA_CSC_D_OP_ENABLE_we;
  reg  d2l_NVDLA_CSC_D_OP_ENABLE_re;
  reg   [31:0] d2l_NVDLA_CSC_D_MISC_CFG_w;
  reg  d2l_NVDLA_CSC_D_MISC_CFG_we;
  reg  d2l_NVDLA_CSC_D_MISC_CFG_re;
  reg   [31:0] d2l_NVDLA_CSC_D_DATAIN_FORMAT_w;
  reg  d2l_NVDLA_CSC_D_DATAIN_FORMAT_we;
  reg  d2l_NVDLA_CSC_D_DATAIN_FORMAT_re;
  reg   [31:0] d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_w;
  reg  d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_we;
  reg  d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_re;
  reg   [31:0] d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_w;
  reg  d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_we;
  reg  d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_re;
  reg   [31:0] d2l_NVDLA_CSC_D_BATCH_NUMBER_w;
  reg  d2l_NVDLA_CSC_D_BATCH_NUMBER_we;
  reg  d2l_NVDLA_CSC_D_BATCH_NUMBER_re;
  reg   [31:0] d2l_NVDLA_CSC_D_POST_Y_EXTENSION_w;
  reg  d2l_NVDLA_CSC_D_POST_Y_EXTENSION_we;
  reg  d2l_NVDLA_CSC_D_POST_Y_EXTENSION_re;
  reg   [31:0] d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_w;
  reg  d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_we;
  reg  d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_re;
  reg   [31:0] d2l_NVDLA_CSC_D_WEIGHT_FORMAT_w;
  reg  d2l_NVDLA_CSC_D_WEIGHT_FORMAT_we;
  reg  d2l_NVDLA_CSC_D_WEIGHT_FORMAT_re;
  reg   [31:0] d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_w;
  reg  d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_we;
  reg  d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_re;
  reg   [31:0] d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_w;
  reg  d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_we;
  reg  d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_re;
  reg   [31:0] d2l_NVDLA_CSC_D_WEIGHT_BYTES_w;
  reg  d2l_NVDLA_CSC_D_WEIGHT_BYTES_we;
  reg  d2l_NVDLA_CSC_D_WEIGHT_BYTES_re;
  reg   [31:0] d2l_NVDLA_CSC_D_WMB_BYTES_w;
  reg  d2l_NVDLA_CSC_D_WMB_BYTES_we;
  reg  d2l_NVDLA_CSC_D_WMB_BYTES_re;
  reg   [31:0] d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_w;
  reg  d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_we;
  reg  d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_re;
  reg   [31:0] d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_w;
  reg  d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_we;
  reg  d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_re;
  reg   [31:0] d2l_NVDLA_CSC_D_ATOMICS_w;
  reg  d2l_NVDLA_CSC_D_ATOMICS_we;
  reg  d2l_NVDLA_CSC_D_ATOMICS_re;
  reg   [31:0] d2l_NVDLA_CSC_D_RELEASE_w;
  reg  d2l_NVDLA_CSC_D_RELEASE_we;
  reg  d2l_NVDLA_CSC_D_RELEASE_re;
  reg   [31:0] d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_w;
  reg  d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_we;
  reg  d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_re;
  reg   [31:0] d2l_NVDLA_CSC_D_DILATION_EXT_w;
  reg  d2l_NVDLA_CSC_D_DILATION_EXT_we;
  reg  d2l_NVDLA_CSC_D_DILATION_EXT_re;
  reg   [31:0] d2l_NVDLA_CSC_D_ZERO_PADDING_w;
  reg  d2l_NVDLA_CSC_D_ZERO_PADDING_we;
  reg  d2l_NVDLA_CSC_D_ZERO_PADDING_re;
  reg   [31:0] d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_w;
  reg  d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_we;
  reg  d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_re;
  reg   [31:0] d2l_NVDLA_CSC_D_BANK_w;
  reg  d2l_NVDLA_CSC_D_BANK_we;
  reg  d2l_NVDLA_CSC_D_BANK_re;
  reg   [31:0] d2l_NVDLA_CSC_D_PRA_CFG_w;
  reg  d2l_NVDLA_CSC_D_PRA_CFG_we;
  reg  d2l_NVDLA_CSC_D_PRA_CFG_re;
  reg   [31:0] d2l_NVDLA_CSC_D_CYA_w;
  reg  d2l_NVDLA_CSC_D_CYA_we;
  reg  d2l_NVDLA_CSC_D_CYA_re;
  reg  leaf_dec_valid_hld1;
  reg  leaf_dec_valid_hld1_next;
  reg  leaf_dec_wr_dvld_hld1;
  reg  leaf_dec_wr_dvld_hld1_next;
  reg  pio_write_active;
  reg  pio_read_active;
  reg   [14:2] pio_dec_address_d1;
  reg   [31:0] pio_dec_write_data_d1;
  reg   [31:0] dec_pio_read_data;
  reg   [31:0] dec_pio_read_data_d1;
  reg  dec_pio_ack;
  reg  dec_pio_nack;
  reg  dec_pio_ack_next;
  reg  dec_pio_nack_next;
  reg  pio_internal_ack;
  reg  pio_internal_nack;
  reg  pio_external_ack;
  reg  pio_external_nack;
  reg  pio_external_ack_next;
  reg  pio_external_nack_next;
  reg  pio_no_acks;
  reg  pio_activate_write;
  reg  pio_activate_read;
  reg   [31:0] dec_pio_read_data_next;
  reg  external_transaction_active;
  
  
  //------- assigns
  assign  pio_dec_write_data = leaf_dec_wr_data;
  assign  dec_leaf_rd_data = dec_pio_read_data;
  assign  dec_leaf_ack = dec_pio_ack;
  assign  dec_leaf_nack = dec_pio_nack;
  assign  pio_dec_address = leaf_dec_addr [14:2] ;
  assign  block_sel_addr = 40'h0;
  assign  block_sel = leaf_dec_block_sel;
  assign  leaf_dec_wr_dvld_active = leaf_dec_wr_dvld | leaf_dec_wr_dvld_hld1;
  assign  leaf_dec_valid_active = leaf_dec_valid | leaf_dec_valid_hld1;
  assign  dec_leaf_accept = leaf_dec_valid & block_sel;
  assign  dec_leaf_reject = leaf_dec_valid & ~block_sel;
  assign  pio_dec_read = block_sel & leaf_dec_valid_active & (leaf_dec_cycle == 2'b10);
  assign  pio_dec_write = block_sel & leaf_dec_wr_dvld_active & (leaf_dec_cycle[1] == 1'b0);
  assign  dec_leaf_retry_atomic = 1'b0;
  assign  dec_leaf_data_width = 3'b0;
  
  //------- combinatorial assigns for pio read data
  always @ (*) begin
    dec_pio_read_data = dec_pio_read_data_d1;
  end
  
  //------- reg assigns for pio read data
  always @ (posedge clk) begin
    if (reset) begin
      dec_pio_read_data_d1 <= #1  32'b0;
    end
    else begin
      dec_pio_read_data_d1 <= #1 dec_pio_read_data_next;
    end
  end
  
  //------- reg assigns for pio i/f
  always @ (posedge clk) begin
    if (reset) begin
      pio_write_active <= #1  1'b0;
      pio_read_active <= #1  1'b0;
    end
    else begin
      pio_write_active <= #1  pio_write_active ? pio_no_acks : pio_activate_write;
      pio_read_active <= #1  pio_read_active ? pio_no_acks : pio_activate_read;
      pio_dec_address_d1 <= #1   pio_dec_address;
      pio_dec_write_data_d1 <= #1  pio_dec_write_data;
    end
  end
  
  //------- combinatorial assigns for leaf i/f
  always @ (*) begin
    leaf_dec_valid_hld1_next = leaf_dec_valid | leaf_dec_valid_hld1;
    if (dec_pio_ack_next | dec_pio_nack_next) leaf_dec_valid_hld1_next = 1'b0;
    leaf_dec_wr_dvld_hld1_next = leaf_dec_wr_dvld | leaf_dec_wr_dvld_hld1;
    if (dec_pio_ack_next | dec_pio_nack_next | leaf_dec_valid) leaf_dec_wr_dvld_hld1_next = 1'b0;
  end
  
  //------- reg assigns for leaf i/f
  always @ (posedge clk) begin
    if (reset) begin
      leaf_dec_valid_hld1 <= #1  1'b0;
      leaf_dec_wr_dvld_hld1 <= #1  1'b0;
    end
    else begin
      leaf_dec_valid_hld1 <= #1 leaf_dec_valid_hld1_next;
      leaf_dec_wr_dvld_hld1 <= #1 leaf_dec_wr_dvld_hld1_next;
    end
  end
  
  //------- combinatorial assigns for pio ack/nack
  always @ (*) begin
    pio_internal_nack = (pio_read_active | pio_write_active) & ~pio_internal_ack & ~external_transaction_active;
    dec_pio_ack_next = (pio_internal_ack | (pio_external_ack_next & external_transaction_active));
    dec_pio_nack_next = (pio_internal_nack | (pio_external_nack_next & external_transaction_active));
    pio_no_acks = ~(dec_pio_ack | dec_pio_nack | pio_external_ack | pio_external_nack);
    pio_activate_write = (pio_dec_write & ~(dec_pio_ack | dec_pio_nack));
    pio_activate_read = (pio_dec_read & ~(dec_pio_ack | dec_pio_nack));
  end
  
  //------- reg assigns for pio ack/nack
  always @ (posedge clk) begin
    if (reset) begin
      dec_pio_ack <= #1 1'b0;
      dec_pio_nack <= #1 1'b0;
      pio_external_ack <= #1  1'b0;
      pio_external_nack <= #1  1'b0;
    end
    else begin
      dec_pio_ack <= #1 dec_pio_ack ? 1'b0 : dec_pio_ack_next;
      dec_pio_nack <= #1 dec_pio_nack ? 1'b0 : dec_pio_nack_next;
      pio_external_ack <= #1 pio_external_ack_next;
      pio_external_nack <= #1 pio_external_nack_next;
    end
  end
  
  
  //------- address decode
  always @ (*) begin
    pio_internal_ack = 1'b0;
    external_transaction_active = 1'b0;
    pio_external_ack_next = 1'b0;
    pio_external_nack_next = 1'b0;
    dec_pio_read_data_next = 32'b0;
    
    d2l_NVDLA_CSC_S_STATUS_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_S_STATUS_we = 1'b0;
    d2l_NVDLA_CSC_S_STATUS_re = 1'b0;
    d2l_NVDLA_CSC_S_POINTER_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_S_POINTER_we = 1'b0;
    d2l_NVDLA_CSC_S_POINTER_re = 1'b0;
    d2l_NVDLA_CSC_D_OP_ENABLE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_OP_ENABLE_we = 1'b0;
    d2l_NVDLA_CSC_D_OP_ENABLE_re = 1'b0;
    d2l_NVDLA_CSC_D_MISC_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_MISC_CFG_we = 1'b0;
    d2l_NVDLA_CSC_D_MISC_CFG_re = 1'b0;
    d2l_NVDLA_CSC_D_DATAIN_FORMAT_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_DATAIN_FORMAT_we = 1'b0;
    d2l_NVDLA_CSC_D_DATAIN_FORMAT_re = 1'b0;
    d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_we = 1'b0;
    d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_re = 1'b0;
    d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_we = 1'b0;
    d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_re = 1'b0;
    d2l_NVDLA_CSC_D_BATCH_NUMBER_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_BATCH_NUMBER_we = 1'b0;
    d2l_NVDLA_CSC_D_BATCH_NUMBER_re = 1'b0;
    d2l_NVDLA_CSC_D_POST_Y_EXTENSION_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_POST_Y_EXTENSION_we = 1'b0;
    d2l_NVDLA_CSC_D_POST_Y_EXTENSION_re = 1'b0;
    d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_we = 1'b0;
    d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_re = 1'b0;
    d2l_NVDLA_CSC_D_WEIGHT_FORMAT_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_WEIGHT_FORMAT_we = 1'b0;
    d2l_NVDLA_CSC_D_WEIGHT_FORMAT_re = 1'b0;
    d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_we = 1'b0;
    d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_re = 1'b0;
    d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_we = 1'b0;
    d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_re = 1'b0;
    d2l_NVDLA_CSC_D_WEIGHT_BYTES_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_WEIGHT_BYTES_we = 1'b0;
    d2l_NVDLA_CSC_D_WEIGHT_BYTES_re = 1'b0;
    d2l_NVDLA_CSC_D_WMB_BYTES_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_WMB_BYTES_we = 1'b0;
    d2l_NVDLA_CSC_D_WMB_BYTES_re = 1'b0;
    d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_we = 1'b0;
    d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_re = 1'b0;
    d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_we = 1'b0;
    d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_re = 1'b0;
    d2l_NVDLA_CSC_D_ATOMICS_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_ATOMICS_we = 1'b0;
    d2l_NVDLA_CSC_D_ATOMICS_re = 1'b0;
    d2l_NVDLA_CSC_D_RELEASE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_RELEASE_we = 1'b0;
    d2l_NVDLA_CSC_D_RELEASE_re = 1'b0;
    d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_we = 1'b0;
    d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_re = 1'b0;
    d2l_NVDLA_CSC_D_DILATION_EXT_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_DILATION_EXT_we = 1'b0;
    d2l_NVDLA_CSC_D_DILATION_EXT_re = 1'b0;
    d2l_NVDLA_CSC_D_ZERO_PADDING_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_ZERO_PADDING_we = 1'b0;
    d2l_NVDLA_CSC_D_ZERO_PADDING_re = 1'b0;
    d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_we = 1'b0;
    d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_re = 1'b0;
    d2l_NVDLA_CSC_D_BANK_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_BANK_we = 1'b0;
    d2l_NVDLA_CSC_D_BANK_re = 1'b0;
    d2l_NVDLA_CSC_D_PRA_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_PRA_CFG_we = 1'b0;
    d2l_NVDLA_CSC_D_PRA_CFG_re = 1'b0;
    d2l_NVDLA_CSC_D_CYA_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CSC_D_CYA_we = 1'b0;
    d2l_NVDLA_CSC_D_CYA_re = 1'b0;
    
    casez(pio_dec_address_d1)
    //  Register: NVDLA_CSC.S_STATUS     Address: 0x4000     External: false
    13'b1000000000000:
      begin
        d2l_NVDLA_CSC_S_STATUS_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_S_STATUS_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_S_STATUS_r;
      end
    //  Register: NVDLA_CSC.S_POINTER     Address: 0x4004     External: false
    13'b1000000000001:
      begin
        d2l_NVDLA_CSC_S_POINTER_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_S_POINTER_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_S_POINTER_r;
      end
    //  Register: NVDLA_CSC.D_OP_ENABLE     Address: 0x4008     External: false
    13'b1000000000010:
      begin
        d2l_NVDLA_CSC_D_OP_ENABLE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_OP_ENABLE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_OP_ENABLE_r;
      end
    //  Register: NVDLA_CSC.D_MISC_CFG     Address: 0x400c     External: false
    13'b1000000000011:
      begin
        d2l_NVDLA_CSC_D_MISC_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_MISC_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_MISC_CFG_r;
      end
    //  Register: NVDLA_CSC.D_DATAIN_FORMAT     Address: 0x4010     External: false
    13'b1000000000100:
      begin
        d2l_NVDLA_CSC_D_DATAIN_FORMAT_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_DATAIN_FORMAT_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_DATAIN_FORMAT_r;
      end
    //  Register: NVDLA_CSC.D_DATAIN_SIZE_EXT_0     Address: 0x4014     External: false
    13'b1000000000101:
      begin
        d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_r;
      end
    //  Register: NVDLA_CSC.D_DATAIN_SIZE_EXT_1     Address: 0x4018     External: false
    13'b1000000000110:
      begin
        d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_r;
      end
    //  Register: NVDLA_CSC.D_BATCH_NUMBER     Address: 0x401c     External: false
    13'b1000000000111:
      begin
        d2l_NVDLA_CSC_D_BATCH_NUMBER_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_BATCH_NUMBER_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_BATCH_NUMBER_r;
      end
    //  Register: NVDLA_CSC.D_POST_Y_EXTENSION     Address: 0x4020     External: false
    13'b1000000001000:
      begin
        d2l_NVDLA_CSC_D_POST_Y_EXTENSION_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_POST_Y_EXTENSION_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_POST_Y_EXTENSION_r;
      end
    //  Register: NVDLA_CSC.D_ENTRY_PER_SLICE     Address: 0x4024     External: false
    13'b1000000001001:
      begin
        d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_ENTRY_PER_SLICE_r;
      end
    //  Register: NVDLA_CSC.D_WEIGHT_FORMAT     Address: 0x4028     External: false
    13'b1000000001010:
      begin
        d2l_NVDLA_CSC_D_WEIGHT_FORMAT_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_WEIGHT_FORMAT_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_WEIGHT_FORMAT_r;
      end
    //  Register: NVDLA_CSC.D_WEIGHT_SIZE_EXT_0     Address: 0x402c     External: false
    13'b1000000001011:
      begin
        d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_r;
      end
    //  Register: NVDLA_CSC.D_WEIGHT_SIZE_EXT_1     Address: 0x4030     External: false
    13'b1000000001100:
      begin
        d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_r;
      end
    //  Register: NVDLA_CSC.D_WEIGHT_BYTES     Address: 0x4034     External: false
    13'b1000000001101:
      begin
        d2l_NVDLA_CSC_D_WEIGHT_BYTES_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_WEIGHT_BYTES_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_WEIGHT_BYTES_r;
      end
    //  Register: NVDLA_CSC.D_WMB_BYTES     Address: 0x4038     External: false
    13'b1000000001110:
      begin
        d2l_NVDLA_CSC_D_WMB_BYTES_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_WMB_BYTES_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_WMB_BYTES_r;
      end
    //  Register: NVDLA_CSC.D_DATAOUT_SIZE_0     Address: 0x403c     External: false
    13'b1000000001111:
      begin
        d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_DATAOUT_SIZE_0_r;
      end
    //  Register: NVDLA_CSC.D_DATAOUT_SIZE_1     Address: 0x4040     External: false
    13'b1000000010000:
      begin
        d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_DATAOUT_SIZE_1_r;
      end
    //  Register: NVDLA_CSC.D_ATOMICS     Address: 0x4044     External: false
    13'b1000000010001:
      begin
        d2l_NVDLA_CSC_D_ATOMICS_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_ATOMICS_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_ATOMICS_r;
      end
    //  Register: NVDLA_CSC.D_RELEASE     Address: 0x4048     External: false
    13'b1000000010010:
      begin
        d2l_NVDLA_CSC_D_RELEASE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_RELEASE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_RELEASE_r;
      end
    //  Register: NVDLA_CSC.D_CONV_STRIDE_EXT     Address: 0x404c     External: false
    13'b1000000010011:
      begin
        d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_CONV_STRIDE_EXT_r;
      end
    //  Register: NVDLA_CSC.D_DILATION_EXT     Address: 0x4050     External: false
    13'b1000000010100:
      begin
        d2l_NVDLA_CSC_D_DILATION_EXT_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_DILATION_EXT_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_DILATION_EXT_r;
      end
    //  Register: NVDLA_CSC.D_ZERO_PADDING     Address: 0x4054     External: false
    13'b1000000010101:
      begin
        d2l_NVDLA_CSC_D_ZERO_PADDING_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_ZERO_PADDING_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_ZERO_PADDING_r;
      end
    //  Register: NVDLA_CSC.D_ZERO_PADDING_VALUE     Address: 0x4058     External: false
    13'b1000000010110:
      begin
        d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_ZERO_PADDING_VALUE_r;
      end
    //  Register: NVDLA_CSC.D_BANK     Address: 0x405c     External: false
    13'b1000000010111:
      begin
        d2l_NVDLA_CSC_D_BANK_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_BANK_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_BANK_r;
      end
    //  Register: NVDLA_CSC.D_PRA_CFG     Address: 0x4060     External: false
    13'b1000000011000:
      begin
        d2l_NVDLA_CSC_D_PRA_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_PRA_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_PRA_CFG_r;
      end
    //  Register: NVDLA_CSC.D_CYA     Address: 0x4064     External: false
    13'b1000000011001:
      begin
        d2l_NVDLA_CSC_D_CYA_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CSC_D_CYA_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CSC_D_CYA_r;
      end
    endcase
  end
  
endmodule

//
//---------- module addrmap_NVDLA_pio
//
module addrmap_NVDLA_pio
(
  clk,
  reset,
  h2l_NVDLA_CSC_S_STATUS_STATUS_0_w,
  h2l_NVDLA_CSC_S_STATUS_STATUS_1_w,
  h2l_NVDLA_CSC_S_POINTER_CONSUMER_w,
  leaf_dec_wr_data,
  leaf_dec_addr,
  leaf_dec_block_sel,
  leaf_dec_valid,
  leaf_dec_wr_dvld,
  leaf_dec_cycle,
  leaf_dec_wr_width,

  l2h_NVDLA_CSC_S_POINTER_PRODUCER_r,
  l2h_NVDLA_CSC_D_OP_ENABLE_OP_EN_r,
  l2h_NVDLA_CSC_D_MISC_CFG_CONV_MODE_r,
  l2h_NVDLA_CSC_D_MISC_CFG_IN_PRECISION_r,
  l2h_NVDLA_CSC_D_MISC_CFG_PROC_PRECISION_r,
  l2h_NVDLA_CSC_D_MISC_CFG_DATA_REUSE_r,
  l2h_NVDLA_CSC_D_MISC_CFG_WEIGHT_REUSE_r,
  l2h_NVDLA_CSC_D_MISC_CFG_SKIP_DATA_RLS_r,
  l2h_NVDLA_CSC_D_MISC_CFG_SKIP_WEIGHT_RLS_r,
  l2h_NVDLA_CSC_D_DATAIN_FORMAT_DATAIN_FORMAT_r,
  l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_WIDTH_EXT_r,
  l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_HEIGHT_EXT_r,
  l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_DATAIN_CHANNEL_EXT_r,
  l2h_NVDLA_CSC_D_BATCH_NUMBER_BATCHES_r,
  l2h_NVDLA_CSC_D_POST_Y_EXTENSION_Y_EXTENSION_r,
  l2h_NVDLA_CSC_D_ENTRY_PER_SLICE_ENTRIES_r,
  l2h_NVDLA_CSC_D_WEIGHT_FORMAT_WEIGHT_FORMAT_r,
  l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_WIDTH_EXT_r,
  l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_HEIGHT_EXT_r,
  l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_CHANNEL_EXT_r,
  l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_KERNEL_r,
  l2h_NVDLA_CSC_D_WEIGHT_BYTES_WEIGHT_BYTES_r,
  l2h_NVDLA_CSC_D_WMB_BYTES_WMB_BYTES_r,
  l2h_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_WIDTH_r,
  l2h_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_HEIGHT_r,
  l2h_NVDLA_CSC_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_r,
  l2h_NVDLA_CSC_D_ATOMICS_ATOMICS_r,
  l2h_NVDLA_CSC_D_RELEASE_RLS_SLICES_r,
  l2h_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_X_STRIDE_EXT_r,
  l2h_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_Y_STRIDE_EXT_r,
  l2h_NVDLA_CSC_D_DILATION_EXT_X_DILATION_EXT_r,
  l2h_NVDLA_CSC_D_DILATION_EXT_Y_DILATION_EXT_r,
  l2h_NVDLA_CSC_D_ZERO_PADDING_PAD_LEFT_r,
  l2h_NVDLA_CSC_D_ZERO_PADDING_PAD_TOP_r,
  l2h_NVDLA_CSC_D_ZERO_PADDING_VALUE_PAD_VALUE_r,
  l2h_NVDLA_CSC_D_BANK_DATA_BANK_r,
  l2h_NVDLA_CSC_D_BANK_WEIGHT_BANK_r,
  l2h_NVDLA_CSC_D_PRA_CFG_PRA_TRUNCATE_r,
  l2h_NVDLA_CSC_D_CYA_CYA_r,
  dec_leaf_rd_data,
  dec_leaf_ack,
  dec_leaf_nack,
  dec_leaf_accept,
  dec_leaf_reject,
  dec_leaf_retry_atomic,
  dec_leaf_data_width );

  //------- inputs
  input    clk;
  input    reset;
  input     [1:0] h2l_NVDLA_CSC_S_STATUS_STATUS_0_w;
  input     [1:0] h2l_NVDLA_CSC_S_STATUS_STATUS_1_w;
  input    h2l_NVDLA_CSC_S_POINTER_CONSUMER_w;
  input     [31:0] leaf_dec_wr_data;
  input     [39:0] leaf_dec_addr;
  input    leaf_dec_block_sel;
  input    leaf_dec_valid;
  input    leaf_dec_wr_dvld;
  input     [1:0] leaf_dec_cycle;
  input     [2:0] leaf_dec_wr_width;

  //------- outputs
  output    l2h_NVDLA_CSC_S_POINTER_PRODUCER_r;
  output    l2h_NVDLA_CSC_D_OP_ENABLE_OP_EN_r;
  output    l2h_NVDLA_CSC_D_MISC_CFG_CONV_MODE_r;
  output     [1:0] l2h_NVDLA_CSC_D_MISC_CFG_IN_PRECISION_r;
  output     [1:0] l2h_NVDLA_CSC_D_MISC_CFG_PROC_PRECISION_r;
  output    l2h_NVDLA_CSC_D_MISC_CFG_DATA_REUSE_r;
  output    l2h_NVDLA_CSC_D_MISC_CFG_WEIGHT_REUSE_r;
  output    l2h_NVDLA_CSC_D_MISC_CFG_SKIP_DATA_RLS_r;
  output    l2h_NVDLA_CSC_D_MISC_CFG_SKIP_WEIGHT_RLS_r;
  output    l2h_NVDLA_CSC_D_DATAIN_FORMAT_DATAIN_FORMAT_r;
  output     [12:0] l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_WIDTH_EXT_r;
  output     [12:0] l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_HEIGHT_EXT_r;
  output     [12:0] l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_DATAIN_CHANNEL_EXT_r;
  output     [4:0] l2h_NVDLA_CSC_D_BATCH_NUMBER_BATCHES_r;
  output     [1:0] l2h_NVDLA_CSC_D_POST_Y_EXTENSION_Y_EXTENSION_r;
  output     [13:0] l2h_NVDLA_CSC_D_ENTRY_PER_SLICE_ENTRIES_r;
  output    l2h_NVDLA_CSC_D_WEIGHT_FORMAT_WEIGHT_FORMAT_r;
  output     [4:0] l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_WIDTH_EXT_r;
  output     [4:0] l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_HEIGHT_EXT_r;
  output     [12:0] l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_CHANNEL_EXT_r;
  output     [12:0] l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_KERNEL_r;
  output     [31:0] l2h_NVDLA_CSC_D_WEIGHT_BYTES_WEIGHT_BYTES_r;
  output     [27:0] l2h_NVDLA_CSC_D_WMB_BYTES_WMB_BYTES_r;
  output     [12:0] l2h_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_WIDTH_r;
  output     [12:0] l2h_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_HEIGHT_r;
  output     [12:0] l2h_NVDLA_CSC_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_r;
  output     [20:0] l2h_NVDLA_CSC_D_ATOMICS_ATOMICS_r;
  output     [11:0] l2h_NVDLA_CSC_D_RELEASE_RLS_SLICES_r;
  output     [2:0] l2h_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_X_STRIDE_EXT_r;
  output     [2:0] l2h_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_Y_STRIDE_EXT_r;
  output     [4:0] l2h_NVDLA_CSC_D_DILATION_EXT_X_DILATION_EXT_r;
  output     [4:0] l2h_NVDLA_CSC_D_DILATION_EXT_Y_DILATION_EXT_r;
  output     [4:0] l2h_NVDLA_CSC_D_ZERO_PADDING_PAD_LEFT_r;
  output     [4:0] l2h_NVDLA_CSC_D_ZERO_PADDING_PAD_TOP_r;
  output     [15:0] l2h_NVDLA_CSC_D_ZERO_PADDING_VALUE_PAD_VALUE_r;
  output     [4:0] l2h_NVDLA_CSC_D_BANK_DATA_BANK_r;
  output     [4:0] l2h_NVDLA_CSC_D_BANK_WEIGHT_BANK_r;
  output     [1:0] l2h_NVDLA_CSC_D_PRA_CFG_PRA_TRUNCATE_r;
  output     [31:0] l2h_NVDLA_CSC_D_CYA_CYA_r;
  output     [31:0] dec_leaf_rd_data;
  output    dec_leaf_ack;
  output    dec_leaf_nack;
  output    dec_leaf_accept;
  output    dec_leaf_reject;
  output    dec_leaf_retry_atomic;
  output     [2:0] dec_leaf_data_width;


  //------- wire defines
  wire   [31:0] d2l_NVDLA_CSC_S_STATUS_w;
  wire  d2l_NVDLA_CSC_S_STATUS_we;
  wire  d2l_NVDLA_CSC_S_STATUS_re;
  wire   [31:0] d2l_NVDLA_CSC_S_POINTER_w;
  wire  d2l_NVDLA_CSC_S_POINTER_we;
  wire  d2l_NVDLA_CSC_S_POINTER_re;
  wire   [31:0] d2l_NVDLA_CSC_D_OP_ENABLE_w;
  wire  d2l_NVDLA_CSC_D_OP_ENABLE_we;
  wire  d2l_NVDLA_CSC_D_OP_ENABLE_re;
  wire   [31:0] d2l_NVDLA_CSC_D_MISC_CFG_w;
  wire  d2l_NVDLA_CSC_D_MISC_CFG_we;
  wire  d2l_NVDLA_CSC_D_MISC_CFG_re;
  wire   [31:0] d2l_NVDLA_CSC_D_DATAIN_FORMAT_w;
  wire  d2l_NVDLA_CSC_D_DATAIN_FORMAT_we;
  wire  d2l_NVDLA_CSC_D_DATAIN_FORMAT_re;
  wire   [31:0] d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_w;
  wire  d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_we;
  wire  d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_re;
  wire   [31:0] d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_w;
  wire  d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_we;
  wire  d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_re;
  wire   [31:0] d2l_NVDLA_CSC_D_BATCH_NUMBER_w;
  wire  d2l_NVDLA_CSC_D_BATCH_NUMBER_we;
  wire  d2l_NVDLA_CSC_D_BATCH_NUMBER_re;
  wire   [31:0] d2l_NVDLA_CSC_D_POST_Y_EXTENSION_w;
  wire  d2l_NVDLA_CSC_D_POST_Y_EXTENSION_we;
  wire  d2l_NVDLA_CSC_D_POST_Y_EXTENSION_re;
  wire   [31:0] d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_w;
  wire  d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_we;
  wire  d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_re;
  wire   [31:0] d2l_NVDLA_CSC_D_WEIGHT_FORMAT_w;
  wire  d2l_NVDLA_CSC_D_WEIGHT_FORMAT_we;
  wire  d2l_NVDLA_CSC_D_WEIGHT_FORMAT_re;
  wire   [31:0] d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_w;
  wire  d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_we;
  wire  d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_re;
  wire   [31:0] d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_w;
  wire  d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_we;
  wire  d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_re;
  wire   [31:0] d2l_NVDLA_CSC_D_WEIGHT_BYTES_w;
  wire  d2l_NVDLA_CSC_D_WEIGHT_BYTES_we;
  wire  d2l_NVDLA_CSC_D_WEIGHT_BYTES_re;
  wire   [31:0] d2l_NVDLA_CSC_D_WMB_BYTES_w;
  wire  d2l_NVDLA_CSC_D_WMB_BYTES_we;
  wire  d2l_NVDLA_CSC_D_WMB_BYTES_re;
  wire   [31:0] d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_w;
  wire  d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_we;
  wire  d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_re;
  wire   [31:0] d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_w;
  wire  d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_we;
  wire  d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_re;
  wire   [31:0] d2l_NVDLA_CSC_D_ATOMICS_w;
  wire  d2l_NVDLA_CSC_D_ATOMICS_we;
  wire  d2l_NVDLA_CSC_D_ATOMICS_re;
  wire   [31:0] d2l_NVDLA_CSC_D_RELEASE_w;
  wire  d2l_NVDLA_CSC_D_RELEASE_we;
  wire  d2l_NVDLA_CSC_D_RELEASE_re;
  wire   [31:0] d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_w;
  wire  d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_we;
  wire  d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_re;
  wire   [31:0] d2l_NVDLA_CSC_D_DILATION_EXT_w;
  wire  d2l_NVDLA_CSC_D_DILATION_EXT_we;
  wire  d2l_NVDLA_CSC_D_DILATION_EXT_re;
  wire   [31:0] d2l_NVDLA_CSC_D_ZERO_PADDING_w;
  wire  d2l_NVDLA_CSC_D_ZERO_PADDING_we;
  wire  d2l_NVDLA_CSC_D_ZERO_PADDING_re;
  wire   [31:0] d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_w;
  wire  d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_we;
  wire  d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_re;
  wire   [31:0] d2l_NVDLA_CSC_D_BANK_w;
  wire  d2l_NVDLA_CSC_D_BANK_we;
  wire  d2l_NVDLA_CSC_D_BANK_re;
  wire   [31:0] d2l_NVDLA_CSC_D_PRA_CFG_w;
  wire  d2l_NVDLA_CSC_D_PRA_CFG_we;
  wire  d2l_NVDLA_CSC_D_PRA_CFG_re;
  wire   [31:0] d2l_NVDLA_CSC_D_CYA_w;
  wire  d2l_NVDLA_CSC_D_CYA_we;
  wire  d2l_NVDLA_CSC_D_CYA_re;
  wire   [31:0] l2d_NVDLA_CSC_S_STATUS_r;
  wire   [31:0] l2d_NVDLA_CSC_S_POINTER_r;
  wire   [31:0] l2d_NVDLA_CSC_D_OP_ENABLE_r;
  wire   [31:0] l2d_NVDLA_CSC_D_MISC_CFG_r;
  wire   [31:0] l2d_NVDLA_CSC_D_DATAIN_FORMAT_r;
  wire   [31:0] l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_r;
  wire   [31:0] l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_r;
  wire   [31:0] l2d_NVDLA_CSC_D_BATCH_NUMBER_r;
  wire   [31:0] l2d_NVDLA_CSC_D_POST_Y_EXTENSION_r;
  wire   [31:0] l2d_NVDLA_CSC_D_ENTRY_PER_SLICE_r;
  wire   [31:0] l2d_NVDLA_CSC_D_WEIGHT_FORMAT_r;
  wire   [31:0] l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_r;
  wire   [31:0] l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_r;
  wire   [31:0] l2d_NVDLA_CSC_D_WEIGHT_BYTES_r;
  wire   [31:0] l2d_NVDLA_CSC_D_WMB_BYTES_r;
  wire   [31:0] l2d_NVDLA_CSC_D_DATAOUT_SIZE_0_r;
  wire   [31:0] l2d_NVDLA_CSC_D_DATAOUT_SIZE_1_r;
  wire   [31:0] l2d_NVDLA_CSC_D_ATOMICS_r;
  wire   [31:0] l2d_NVDLA_CSC_D_RELEASE_r;
  wire   [31:0] l2d_NVDLA_CSC_D_CONV_STRIDE_EXT_r;
  wire   [31:0] l2d_NVDLA_CSC_D_DILATION_EXT_r;
  wire   [31:0] l2d_NVDLA_CSC_D_ZERO_PADDING_r;
  wire   [31:0] l2d_NVDLA_CSC_D_ZERO_PADDING_VALUE_r;
  wire   [31:0] l2d_NVDLA_CSC_D_BANK_r;
  wire   [31:0] l2d_NVDLA_CSC_D_PRA_CFG_r;
  wire   [31:0] l2d_NVDLA_CSC_D_CYA_r;
  
  
  addrmap_NVDLA_jrdl_decode pio_decode (
    .clk(clk),
    .reset(reset),
    .leaf_dec_wr_data(leaf_dec_wr_data),
    .leaf_dec_addr(leaf_dec_addr),
    .leaf_dec_block_sel(leaf_dec_block_sel),
    .leaf_dec_valid(leaf_dec_valid),
    .leaf_dec_wr_dvld(leaf_dec_wr_dvld),
    .leaf_dec_cycle(leaf_dec_cycle),
    .leaf_dec_wr_width(leaf_dec_wr_width),
    .l2d_NVDLA_CSC_S_STATUS_r(l2d_NVDLA_CSC_S_STATUS_r),
    .l2d_NVDLA_CSC_S_POINTER_r(l2d_NVDLA_CSC_S_POINTER_r),
    .l2d_NVDLA_CSC_D_OP_ENABLE_r(l2d_NVDLA_CSC_D_OP_ENABLE_r),
    .l2d_NVDLA_CSC_D_MISC_CFG_r(l2d_NVDLA_CSC_D_MISC_CFG_r),
    .l2d_NVDLA_CSC_D_DATAIN_FORMAT_r(l2d_NVDLA_CSC_D_DATAIN_FORMAT_r),
    .l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_r(l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_r),
    .l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_r(l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_r),
    .l2d_NVDLA_CSC_D_BATCH_NUMBER_r(l2d_NVDLA_CSC_D_BATCH_NUMBER_r),
    .l2d_NVDLA_CSC_D_POST_Y_EXTENSION_r(l2d_NVDLA_CSC_D_POST_Y_EXTENSION_r),
    .l2d_NVDLA_CSC_D_ENTRY_PER_SLICE_r(l2d_NVDLA_CSC_D_ENTRY_PER_SLICE_r),
    .l2d_NVDLA_CSC_D_WEIGHT_FORMAT_r(l2d_NVDLA_CSC_D_WEIGHT_FORMAT_r),
    .l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_r(l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_r),
    .l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_r(l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_r),
    .l2d_NVDLA_CSC_D_WEIGHT_BYTES_r(l2d_NVDLA_CSC_D_WEIGHT_BYTES_r),
    .l2d_NVDLA_CSC_D_WMB_BYTES_r(l2d_NVDLA_CSC_D_WMB_BYTES_r),
    .l2d_NVDLA_CSC_D_DATAOUT_SIZE_0_r(l2d_NVDLA_CSC_D_DATAOUT_SIZE_0_r),
    .l2d_NVDLA_CSC_D_DATAOUT_SIZE_1_r(l2d_NVDLA_CSC_D_DATAOUT_SIZE_1_r),
    .l2d_NVDLA_CSC_D_ATOMICS_r(l2d_NVDLA_CSC_D_ATOMICS_r),
    .l2d_NVDLA_CSC_D_RELEASE_r(l2d_NVDLA_CSC_D_RELEASE_r),
    .l2d_NVDLA_CSC_D_CONV_STRIDE_EXT_r(l2d_NVDLA_CSC_D_CONV_STRIDE_EXT_r),
    .l2d_NVDLA_CSC_D_DILATION_EXT_r(l2d_NVDLA_CSC_D_DILATION_EXT_r),
    .l2d_NVDLA_CSC_D_ZERO_PADDING_r(l2d_NVDLA_CSC_D_ZERO_PADDING_r),
    .l2d_NVDLA_CSC_D_ZERO_PADDING_VALUE_r(l2d_NVDLA_CSC_D_ZERO_PADDING_VALUE_r),
    .l2d_NVDLA_CSC_D_BANK_r(l2d_NVDLA_CSC_D_BANK_r),
    .l2d_NVDLA_CSC_D_PRA_CFG_r(l2d_NVDLA_CSC_D_PRA_CFG_r),
    .l2d_NVDLA_CSC_D_CYA_r(l2d_NVDLA_CSC_D_CYA_r),
    .dec_leaf_rd_data(dec_leaf_rd_data),
    .dec_leaf_ack(dec_leaf_ack),
    .dec_leaf_nack(dec_leaf_nack),
    .dec_leaf_accept(dec_leaf_accept),
    .dec_leaf_reject(dec_leaf_reject),
    .dec_leaf_retry_atomic(dec_leaf_retry_atomic),
    .dec_leaf_data_width(dec_leaf_data_width),
    .d2l_NVDLA_CSC_S_STATUS_w(d2l_NVDLA_CSC_S_STATUS_w),
    .d2l_NVDLA_CSC_S_STATUS_we(d2l_NVDLA_CSC_S_STATUS_we),
    .d2l_NVDLA_CSC_S_STATUS_re(d2l_NVDLA_CSC_S_STATUS_re),
    .d2l_NVDLA_CSC_S_POINTER_w(d2l_NVDLA_CSC_S_POINTER_w),
    .d2l_NVDLA_CSC_S_POINTER_we(d2l_NVDLA_CSC_S_POINTER_we),
    .d2l_NVDLA_CSC_S_POINTER_re(d2l_NVDLA_CSC_S_POINTER_re),
    .d2l_NVDLA_CSC_D_OP_ENABLE_w(d2l_NVDLA_CSC_D_OP_ENABLE_w),
    .d2l_NVDLA_CSC_D_OP_ENABLE_we(d2l_NVDLA_CSC_D_OP_ENABLE_we),
    .d2l_NVDLA_CSC_D_OP_ENABLE_re(d2l_NVDLA_CSC_D_OP_ENABLE_re),
    .d2l_NVDLA_CSC_D_MISC_CFG_w(d2l_NVDLA_CSC_D_MISC_CFG_w),
    .d2l_NVDLA_CSC_D_MISC_CFG_we(d2l_NVDLA_CSC_D_MISC_CFG_we),
    .d2l_NVDLA_CSC_D_MISC_CFG_re(d2l_NVDLA_CSC_D_MISC_CFG_re),
    .d2l_NVDLA_CSC_D_DATAIN_FORMAT_w(d2l_NVDLA_CSC_D_DATAIN_FORMAT_w),
    .d2l_NVDLA_CSC_D_DATAIN_FORMAT_we(d2l_NVDLA_CSC_D_DATAIN_FORMAT_we),
    .d2l_NVDLA_CSC_D_DATAIN_FORMAT_re(d2l_NVDLA_CSC_D_DATAIN_FORMAT_re),
    .d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_w(d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_w),
    .d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_we(d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_we),
    .d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_re(d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_re),
    .d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_w(d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_w),
    .d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_we(d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_we),
    .d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_re(d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_re),
    .d2l_NVDLA_CSC_D_BATCH_NUMBER_w(d2l_NVDLA_CSC_D_BATCH_NUMBER_w),
    .d2l_NVDLA_CSC_D_BATCH_NUMBER_we(d2l_NVDLA_CSC_D_BATCH_NUMBER_we),
    .d2l_NVDLA_CSC_D_BATCH_NUMBER_re(d2l_NVDLA_CSC_D_BATCH_NUMBER_re),
    .d2l_NVDLA_CSC_D_POST_Y_EXTENSION_w(d2l_NVDLA_CSC_D_POST_Y_EXTENSION_w),
    .d2l_NVDLA_CSC_D_POST_Y_EXTENSION_we(d2l_NVDLA_CSC_D_POST_Y_EXTENSION_we),
    .d2l_NVDLA_CSC_D_POST_Y_EXTENSION_re(d2l_NVDLA_CSC_D_POST_Y_EXTENSION_re),
    .d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_w(d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_w),
    .d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_we(d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_we),
    .d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_re(d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_re),
    .d2l_NVDLA_CSC_D_WEIGHT_FORMAT_w(d2l_NVDLA_CSC_D_WEIGHT_FORMAT_w),
    .d2l_NVDLA_CSC_D_WEIGHT_FORMAT_we(d2l_NVDLA_CSC_D_WEIGHT_FORMAT_we),
    .d2l_NVDLA_CSC_D_WEIGHT_FORMAT_re(d2l_NVDLA_CSC_D_WEIGHT_FORMAT_re),
    .d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_w(d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_w),
    .d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_we(d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_we),
    .d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_re(d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_re),
    .d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_w(d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_w),
    .d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_we(d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_we),
    .d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_re(d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_re),
    .d2l_NVDLA_CSC_D_WEIGHT_BYTES_w(d2l_NVDLA_CSC_D_WEIGHT_BYTES_w),
    .d2l_NVDLA_CSC_D_WEIGHT_BYTES_we(d2l_NVDLA_CSC_D_WEIGHT_BYTES_we),
    .d2l_NVDLA_CSC_D_WEIGHT_BYTES_re(d2l_NVDLA_CSC_D_WEIGHT_BYTES_re),
    .d2l_NVDLA_CSC_D_WMB_BYTES_w(d2l_NVDLA_CSC_D_WMB_BYTES_w),
    .d2l_NVDLA_CSC_D_WMB_BYTES_we(d2l_NVDLA_CSC_D_WMB_BYTES_we),
    .d2l_NVDLA_CSC_D_WMB_BYTES_re(d2l_NVDLA_CSC_D_WMB_BYTES_re),
    .d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_w(d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_w),
    .d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_we(d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_we),
    .d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_re(d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_re),
    .d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_w(d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_w),
    .d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_we(d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_we),
    .d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_re(d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_re),
    .d2l_NVDLA_CSC_D_ATOMICS_w(d2l_NVDLA_CSC_D_ATOMICS_w),
    .d2l_NVDLA_CSC_D_ATOMICS_we(d2l_NVDLA_CSC_D_ATOMICS_we),
    .d2l_NVDLA_CSC_D_ATOMICS_re(d2l_NVDLA_CSC_D_ATOMICS_re),
    .d2l_NVDLA_CSC_D_RELEASE_w(d2l_NVDLA_CSC_D_RELEASE_w),
    .d2l_NVDLA_CSC_D_RELEASE_we(d2l_NVDLA_CSC_D_RELEASE_we),
    .d2l_NVDLA_CSC_D_RELEASE_re(d2l_NVDLA_CSC_D_RELEASE_re),
    .d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_w(d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_w),
    .d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_we(d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_we),
    .d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_re(d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_re),
    .d2l_NVDLA_CSC_D_DILATION_EXT_w(d2l_NVDLA_CSC_D_DILATION_EXT_w),
    .d2l_NVDLA_CSC_D_DILATION_EXT_we(d2l_NVDLA_CSC_D_DILATION_EXT_we),
    .d2l_NVDLA_CSC_D_DILATION_EXT_re(d2l_NVDLA_CSC_D_DILATION_EXT_re),
    .d2l_NVDLA_CSC_D_ZERO_PADDING_w(d2l_NVDLA_CSC_D_ZERO_PADDING_w),
    .d2l_NVDLA_CSC_D_ZERO_PADDING_we(d2l_NVDLA_CSC_D_ZERO_PADDING_we),
    .d2l_NVDLA_CSC_D_ZERO_PADDING_re(d2l_NVDLA_CSC_D_ZERO_PADDING_re),
    .d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_w(d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_w),
    .d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_we(d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_we),
    .d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_re(d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_re),
    .d2l_NVDLA_CSC_D_BANK_w(d2l_NVDLA_CSC_D_BANK_w),
    .d2l_NVDLA_CSC_D_BANK_we(d2l_NVDLA_CSC_D_BANK_we),
    .d2l_NVDLA_CSC_D_BANK_re(d2l_NVDLA_CSC_D_BANK_re),
    .d2l_NVDLA_CSC_D_PRA_CFG_w(d2l_NVDLA_CSC_D_PRA_CFG_w),
    .d2l_NVDLA_CSC_D_PRA_CFG_we(d2l_NVDLA_CSC_D_PRA_CFG_we),
    .d2l_NVDLA_CSC_D_PRA_CFG_re(d2l_NVDLA_CSC_D_PRA_CFG_re),
    .d2l_NVDLA_CSC_D_CYA_w(d2l_NVDLA_CSC_D_CYA_w),
    .d2l_NVDLA_CSC_D_CYA_we(d2l_NVDLA_CSC_D_CYA_we),
    .d2l_NVDLA_CSC_D_CYA_re(d2l_NVDLA_CSC_D_CYA_re) );
    
  addrmap_NVDLA_jrdl_logic pio_logic (
    .clk(clk),
    .reset(reset),
    .d2l_NVDLA_CSC_S_STATUS_w(d2l_NVDLA_CSC_S_STATUS_w),
    .d2l_NVDLA_CSC_S_STATUS_we(d2l_NVDLA_CSC_S_STATUS_we),
    .d2l_NVDLA_CSC_S_STATUS_re(d2l_NVDLA_CSC_S_STATUS_re),
    .d2l_NVDLA_CSC_S_POINTER_w(d2l_NVDLA_CSC_S_POINTER_w),
    .d2l_NVDLA_CSC_S_POINTER_we(d2l_NVDLA_CSC_S_POINTER_we),
    .d2l_NVDLA_CSC_S_POINTER_re(d2l_NVDLA_CSC_S_POINTER_re),
    .d2l_NVDLA_CSC_D_OP_ENABLE_w(d2l_NVDLA_CSC_D_OP_ENABLE_w),
    .d2l_NVDLA_CSC_D_OP_ENABLE_we(d2l_NVDLA_CSC_D_OP_ENABLE_we),
    .d2l_NVDLA_CSC_D_OP_ENABLE_re(d2l_NVDLA_CSC_D_OP_ENABLE_re),
    .d2l_NVDLA_CSC_D_MISC_CFG_w(d2l_NVDLA_CSC_D_MISC_CFG_w),
    .d2l_NVDLA_CSC_D_MISC_CFG_we(d2l_NVDLA_CSC_D_MISC_CFG_we),
    .d2l_NVDLA_CSC_D_MISC_CFG_re(d2l_NVDLA_CSC_D_MISC_CFG_re),
    .d2l_NVDLA_CSC_D_DATAIN_FORMAT_w(d2l_NVDLA_CSC_D_DATAIN_FORMAT_w),
    .d2l_NVDLA_CSC_D_DATAIN_FORMAT_we(d2l_NVDLA_CSC_D_DATAIN_FORMAT_we),
    .d2l_NVDLA_CSC_D_DATAIN_FORMAT_re(d2l_NVDLA_CSC_D_DATAIN_FORMAT_re),
    .d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_w(d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_w),
    .d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_we(d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_we),
    .d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_re(d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_re),
    .d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_w(d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_w),
    .d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_we(d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_we),
    .d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_re(d2l_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_re),
    .d2l_NVDLA_CSC_D_BATCH_NUMBER_w(d2l_NVDLA_CSC_D_BATCH_NUMBER_w),
    .d2l_NVDLA_CSC_D_BATCH_NUMBER_we(d2l_NVDLA_CSC_D_BATCH_NUMBER_we),
    .d2l_NVDLA_CSC_D_BATCH_NUMBER_re(d2l_NVDLA_CSC_D_BATCH_NUMBER_re),
    .d2l_NVDLA_CSC_D_POST_Y_EXTENSION_w(d2l_NVDLA_CSC_D_POST_Y_EXTENSION_w),
    .d2l_NVDLA_CSC_D_POST_Y_EXTENSION_we(d2l_NVDLA_CSC_D_POST_Y_EXTENSION_we),
    .d2l_NVDLA_CSC_D_POST_Y_EXTENSION_re(d2l_NVDLA_CSC_D_POST_Y_EXTENSION_re),
    .d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_w(d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_w),
    .d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_we(d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_we),
    .d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_re(d2l_NVDLA_CSC_D_ENTRY_PER_SLICE_re),
    .d2l_NVDLA_CSC_D_WEIGHT_FORMAT_w(d2l_NVDLA_CSC_D_WEIGHT_FORMAT_w),
    .d2l_NVDLA_CSC_D_WEIGHT_FORMAT_we(d2l_NVDLA_CSC_D_WEIGHT_FORMAT_we),
    .d2l_NVDLA_CSC_D_WEIGHT_FORMAT_re(d2l_NVDLA_CSC_D_WEIGHT_FORMAT_re),
    .d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_w(d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_w),
    .d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_we(d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_we),
    .d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_re(d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_re),
    .d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_w(d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_w),
    .d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_we(d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_we),
    .d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_re(d2l_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_re),
    .d2l_NVDLA_CSC_D_WEIGHT_BYTES_w(d2l_NVDLA_CSC_D_WEIGHT_BYTES_w),
    .d2l_NVDLA_CSC_D_WEIGHT_BYTES_we(d2l_NVDLA_CSC_D_WEIGHT_BYTES_we),
    .d2l_NVDLA_CSC_D_WEIGHT_BYTES_re(d2l_NVDLA_CSC_D_WEIGHT_BYTES_re),
    .d2l_NVDLA_CSC_D_WMB_BYTES_w(d2l_NVDLA_CSC_D_WMB_BYTES_w),
    .d2l_NVDLA_CSC_D_WMB_BYTES_we(d2l_NVDLA_CSC_D_WMB_BYTES_we),
    .d2l_NVDLA_CSC_D_WMB_BYTES_re(d2l_NVDLA_CSC_D_WMB_BYTES_re),
    .d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_w(d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_w),
    .d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_we(d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_we),
    .d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_re(d2l_NVDLA_CSC_D_DATAOUT_SIZE_0_re),
    .d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_w(d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_w),
    .d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_we(d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_we),
    .d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_re(d2l_NVDLA_CSC_D_DATAOUT_SIZE_1_re),
    .d2l_NVDLA_CSC_D_ATOMICS_w(d2l_NVDLA_CSC_D_ATOMICS_w),
    .d2l_NVDLA_CSC_D_ATOMICS_we(d2l_NVDLA_CSC_D_ATOMICS_we),
    .d2l_NVDLA_CSC_D_ATOMICS_re(d2l_NVDLA_CSC_D_ATOMICS_re),
    .d2l_NVDLA_CSC_D_RELEASE_w(d2l_NVDLA_CSC_D_RELEASE_w),
    .d2l_NVDLA_CSC_D_RELEASE_we(d2l_NVDLA_CSC_D_RELEASE_we),
    .d2l_NVDLA_CSC_D_RELEASE_re(d2l_NVDLA_CSC_D_RELEASE_re),
    .d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_w(d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_w),
    .d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_we(d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_we),
    .d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_re(d2l_NVDLA_CSC_D_CONV_STRIDE_EXT_re),
    .d2l_NVDLA_CSC_D_DILATION_EXT_w(d2l_NVDLA_CSC_D_DILATION_EXT_w),
    .d2l_NVDLA_CSC_D_DILATION_EXT_we(d2l_NVDLA_CSC_D_DILATION_EXT_we),
    .d2l_NVDLA_CSC_D_DILATION_EXT_re(d2l_NVDLA_CSC_D_DILATION_EXT_re),
    .d2l_NVDLA_CSC_D_ZERO_PADDING_w(d2l_NVDLA_CSC_D_ZERO_PADDING_w),
    .d2l_NVDLA_CSC_D_ZERO_PADDING_we(d2l_NVDLA_CSC_D_ZERO_PADDING_we),
    .d2l_NVDLA_CSC_D_ZERO_PADDING_re(d2l_NVDLA_CSC_D_ZERO_PADDING_re),
    .d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_w(d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_w),
    .d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_we(d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_we),
    .d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_re(d2l_NVDLA_CSC_D_ZERO_PADDING_VALUE_re),
    .d2l_NVDLA_CSC_D_BANK_w(d2l_NVDLA_CSC_D_BANK_w),
    .d2l_NVDLA_CSC_D_BANK_we(d2l_NVDLA_CSC_D_BANK_we),
    .d2l_NVDLA_CSC_D_BANK_re(d2l_NVDLA_CSC_D_BANK_re),
    .d2l_NVDLA_CSC_D_PRA_CFG_w(d2l_NVDLA_CSC_D_PRA_CFG_w),
    .d2l_NVDLA_CSC_D_PRA_CFG_we(d2l_NVDLA_CSC_D_PRA_CFG_we),
    .d2l_NVDLA_CSC_D_PRA_CFG_re(d2l_NVDLA_CSC_D_PRA_CFG_re),
    .d2l_NVDLA_CSC_D_CYA_w(d2l_NVDLA_CSC_D_CYA_w),
    .d2l_NVDLA_CSC_D_CYA_we(d2l_NVDLA_CSC_D_CYA_we),
    .d2l_NVDLA_CSC_D_CYA_re(d2l_NVDLA_CSC_D_CYA_re),
    .h2l_NVDLA_CSC_S_STATUS_STATUS_0_w(h2l_NVDLA_CSC_S_STATUS_STATUS_0_w),
    .h2l_NVDLA_CSC_S_STATUS_STATUS_1_w(h2l_NVDLA_CSC_S_STATUS_STATUS_1_w),
    .h2l_NVDLA_CSC_S_POINTER_CONSUMER_w(h2l_NVDLA_CSC_S_POINTER_CONSUMER_w),
    .l2d_NVDLA_CSC_S_STATUS_r(l2d_NVDLA_CSC_S_STATUS_r),
    .l2d_NVDLA_CSC_S_POINTER_r(l2d_NVDLA_CSC_S_POINTER_r),
    .l2d_NVDLA_CSC_D_OP_ENABLE_r(l2d_NVDLA_CSC_D_OP_ENABLE_r),
    .l2d_NVDLA_CSC_D_MISC_CFG_r(l2d_NVDLA_CSC_D_MISC_CFG_r),
    .l2d_NVDLA_CSC_D_DATAIN_FORMAT_r(l2d_NVDLA_CSC_D_DATAIN_FORMAT_r),
    .l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_r(l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_r),
    .l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_r(l2d_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_r),
    .l2d_NVDLA_CSC_D_BATCH_NUMBER_r(l2d_NVDLA_CSC_D_BATCH_NUMBER_r),
    .l2d_NVDLA_CSC_D_POST_Y_EXTENSION_r(l2d_NVDLA_CSC_D_POST_Y_EXTENSION_r),
    .l2d_NVDLA_CSC_D_ENTRY_PER_SLICE_r(l2d_NVDLA_CSC_D_ENTRY_PER_SLICE_r),
    .l2d_NVDLA_CSC_D_WEIGHT_FORMAT_r(l2d_NVDLA_CSC_D_WEIGHT_FORMAT_r),
    .l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_r(l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_r),
    .l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_r(l2d_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_r),
    .l2d_NVDLA_CSC_D_WEIGHT_BYTES_r(l2d_NVDLA_CSC_D_WEIGHT_BYTES_r),
    .l2d_NVDLA_CSC_D_WMB_BYTES_r(l2d_NVDLA_CSC_D_WMB_BYTES_r),
    .l2d_NVDLA_CSC_D_DATAOUT_SIZE_0_r(l2d_NVDLA_CSC_D_DATAOUT_SIZE_0_r),
    .l2d_NVDLA_CSC_D_DATAOUT_SIZE_1_r(l2d_NVDLA_CSC_D_DATAOUT_SIZE_1_r),
    .l2d_NVDLA_CSC_D_ATOMICS_r(l2d_NVDLA_CSC_D_ATOMICS_r),
    .l2d_NVDLA_CSC_D_RELEASE_r(l2d_NVDLA_CSC_D_RELEASE_r),
    .l2d_NVDLA_CSC_D_CONV_STRIDE_EXT_r(l2d_NVDLA_CSC_D_CONV_STRIDE_EXT_r),
    .l2d_NVDLA_CSC_D_DILATION_EXT_r(l2d_NVDLA_CSC_D_DILATION_EXT_r),
    .l2d_NVDLA_CSC_D_ZERO_PADDING_r(l2d_NVDLA_CSC_D_ZERO_PADDING_r),
    .l2d_NVDLA_CSC_D_ZERO_PADDING_VALUE_r(l2d_NVDLA_CSC_D_ZERO_PADDING_VALUE_r),
    .l2d_NVDLA_CSC_D_BANK_r(l2d_NVDLA_CSC_D_BANK_r),
    .l2d_NVDLA_CSC_D_PRA_CFG_r(l2d_NVDLA_CSC_D_PRA_CFG_r),
    .l2d_NVDLA_CSC_D_CYA_r(l2d_NVDLA_CSC_D_CYA_r),
    .l2h_NVDLA_CSC_S_POINTER_PRODUCER_r(l2h_NVDLA_CSC_S_POINTER_PRODUCER_r),
    .l2h_NVDLA_CSC_D_OP_ENABLE_OP_EN_r(l2h_NVDLA_CSC_D_OP_ENABLE_OP_EN_r),
    .l2h_NVDLA_CSC_D_MISC_CFG_CONV_MODE_r(l2h_NVDLA_CSC_D_MISC_CFG_CONV_MODE_r),
    .l2h_NVDLA_CSC_D_MISC_CFG_IN_PRECISION_r(l2h_NVDLA_CSC_D_MISC_CFG_IN_PRECISION_r),
    .l2h_NVDLA_CSC_D_MISC_CFG_PROC_PRECISION_r(l2h_NVDLA_CSC_D_MISC_CFG_PROC_PRECISION_r),
    .l2h_NVDLA_CSC_D_MISC_CFG_DATA_REUSE_r(l2h_NVDLA_CSC_D_MISC_CFG_DATA_REUSE_r),
    .l2h_NVDLA_CSC_D_MISC_CFG_WEIGHT_REUSE_r(l2h_NVDLA_CSC_D_MISC_CFG_WEIGHT_REUSE_r),
    .l2h_NVDLA_CSC_D_MISC_CFG_SKIP_DATA_RLS_r(l2h_NVDLA_CSC_D_MISC_CFG_SKIP_DATA_RLS_r),
    .l2h_NVDLA_CSC_D_MISC_CFG_SKIP_WEIGHT_RLS_r(l2h_NVDLA_CSC_D_MISC_CFG_SKIP_WEIGHT_RLS_r),
    .l2h_NVDLA_CSC_D_DATAIN_FORMAT_DATAIN_FORMAT_r(l2h_NVDLA_CSC_D_DATAIN_FORMAT_DATAIN_FORMAT_r),
    .l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_WIDTH_EXT_r(l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_WIDTH_EXT_r),
    .l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_HEIGHT_EXT_r(l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_0_DATAIN_HEIGHT_EXT_r),
    .l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_DATAIN_CHANNEL_EXT_r(l2h_NVDLA_CSC_D_DATAIN_SIZE_EXT_1_DATAIN_CHANNEL_EXT_r),
    .l2h_NVDLA_CSC_D_BATCH_NUMBER_BATCHES_r(l2h_NVDLA_CSC_D_BATCH_NUMBER_BATCHES_r),
    .l2h_NVDLA_CSC_D_POST_Y_EXTENSION_Y_EXTENSION_r(l2h_NVDLA_CSC_D_POST_Y_EXTENSION_Y_EXTENSION_r),
    .l2h_NVDLA_CSC_D_ENTRY_PER_SLICE_ENTRIES_r(l2h_NVDLA_CSC_D_ENTRY_PER_SLICE_ENTRIES_r),
    .l2h_NVDLA_CSC_D_WEIGHT_FORMAT_WEIGHT_FORMAT_r(l2h_NVDLA_CSC_D_WEIGHT_FORMAT_WEIGHT_FORMAT_r),
    .l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_WIDTH_EXT_r(l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_WIDTH_EXT_r),
    .l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_HEIGHT_EXT_r(l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_0_WEIGHT_HEIGHT_EXT_r),
    .l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_CHANNEL_EXT_r(l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_CHANNEL_EXT_r),
    .l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_KERNEL_r(l2h_NVDLA_CSC_D_WEIGHT_SIZE_EXT_1_WEIGHT_KERNEL_r),
    .l2h_NVDLA_CSC_D_WEIGHT_BYTES_WEIGHT_BYTES_r(l2h_NVDLA_CSC_D_WEIGHT_BYTES_WEIGHT_BYTES_r),
    .l2h_NVDLA_CSC_D_WMB_BYTES_WMB_BYTES_r(l2h_NVDLA_CSC_D_WMB_BYTES_WMB_BYTES_r),
    .l2h_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_WIDTH_r(l2h_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_WIDTH_r),
    .l2h_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_HEIGHT_r(l2h_NVDLA_CSC_D_DATAOUT_SIZE_0_DATAOUT_HEIGHT_r),
    .l2h_NVDLA_CSC_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_r(l2h_NVDLA_CSC_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_r),
    .l2h_NVDLA_CSC_D_ATOMICS_ATOMICS_r(l2h_NVDLA_CSC_D_ATOMICS_ATOMICS_r),
    .l2h_NVDLA_CSC_D_RELEASE_RLS_SLICES_r(l2h_NVDLA_CSC_D_RELEASE_RLS_SLICES_r),
    .l2h_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_X_STRIDE_EXT_r(l2h_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_X_STRIDE_EXT_r),
    .l2h_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_Y_STRIDE_EXT_r(l2h_NVDLA_CSC_D_CONV_STRIDE_EXT_CONV_Y_STRIDE_EXT_r),
    .l2h_NVDLA_CSC_D_DILATION_EXT_X_DILATION_EXT_r(l2h_NVDLA_CSC_D_DILATION_EXT_X_DILATION_EXT_r),
    .l2h_NVDLA_CSC_D_DILATION_EXT_Y_DILATION_EXT_r(l2h_NVDLA_CSC_D_DILATION_EXT_Y_DILATION_EXT_r),
    .l2h_NVDLA_CSC_D_ZERO_PADDING_PAD_LEFT_r(l2h_NVDLA_CSC_D_ZERO_PADDING_PAD_LEFT_r),
    .l2h_NVDLA_CSC_D_ZERO_PADDING_PAD_TOP_r(l2h_NVDLA_CSC_D_ZERO_PADDING_PAD_TOP_r),
    .l2h_NVDLA_CSC_D_ZERO_PADDING_VALUE_PAD_VALUE_r(l2h_NVDLA_CSC_D_ZERO_PADDING_VALUE_PAD_VALUE_r),
    .l2h_NVDLA_CSC_D_BANK_DATA_BANK_r(l2h_NVDLA_CSC_D_BANK_DATA_BANK_r),
    .l2h_NVDLA_CSC_D_BANK_WEIGHT_BANK_r(l2h_NVDLA_CSC_D_BANK_WEIGHT_BANK_r),
    .l2h_NVDLA_CSC_D_PRA_CFG_PRA_TRUNCATE_r(l2h_NVDLA_CSC_D_PRA_CFG_PRA_TRUNCATE_r),
    .l2h_NVDLA_CSC_D_CYA_CYA_r(l2h_NVDLA_CSC_D_CYA_CYA_r) );
    
endmodule

