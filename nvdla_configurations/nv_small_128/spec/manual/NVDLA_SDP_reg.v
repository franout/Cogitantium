//   Ordt 171103.01 autogenerated file 
//   Input: NVDLA_SDP.rdl
//   Parms: opendla.parms
//   Date: Tue Feb 04 11:11:24 CET 2020
//

//
//---------- module addrmap_NVDLA_jrdl_logic
//
module addrmap_NVDLA_jrdl_logic
(
  clk,
  reset,
  d2l_NVDLA_SDP_S_STATUS_w,
  d2l_NVDLA_SDP_S_STATUS_we,
  d2l_NVDLA_SDP_S_STATUS_re,
  d2l_NVDLA_SDP_S_POINTER_w,
  d2l_NVDLA_SDP_S_POINTER_we,
  d2l_NVDLA_SDP_S_POINTER_re,
  d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_w,
  d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_we,
  d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_re,
  d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_w,
  d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_we,
  d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_re,
  d2l_NVDLA_SDP_S_LUT_CFG_w,
  d2l_NVDLA_SDP_S_LUT_CFG_we,
  d2l_NVDLA_SDP_S_LUT_CFG_re,
  d2l_NVDLA_SDP_S_LUT_INFO_w,
  d2l_NVDLA_SDP_S_LUT_INFO_we,
  d2l_NVDLA_SDP_S_LUT_INFO_re,
  d2l_NVDLA_SDP_S_LUT_LE_START_w,
  d2l_NVDLA_SDP_S_LUT_LE_START_we,
  d2l_NVDLA_SDP_S_LUT_LE_START_re,
  d2l_NVDLA_SDP_S_LUT_LE_END_w,
  d2l_NVDLA_SDP_S_LUT_LE_END_we,
  d2l_NVDLA_SDP_S_LUT_LE_END_re,
  d2l_NVDLA_SDP_S_LUT_LO_START_w,
  d2l_NVDLA_SDP_S_LUT_LO_START_we,
  d2l_NVDLA_SDP_S_LUT_LO_START_re,
  d2l_NVDLA_SDP_S_LUT_LO_END_w,
  d2l_NVDLA_SDP_S_LUT_LO_END_we,
  d2l_NVDLA_SDP_S_LUT_LO_END_re,
  d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_w,
  d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_we,
  d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_re,
  d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_w,
  d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_we,
  d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_re,
  d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_w,
  d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_we,
  d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_re,
  d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_w,
  d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_we,
  d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_re,
  d2l_NVDLA_SDP_D_OP_ENABLE_w,
  d2l_NVDLA_SDP_D_OP_ENABLE_we,
  d2l_NVDLA_SDP_D_OP_ENABLE_re,
  d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_w,
  d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_we,
  d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_re,
  d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_w,
  d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_we,
  d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_re,
  d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_w,
  d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_we,
  d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_re,
  d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_w,
  d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_we,
  d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_re,
  d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_w,
  d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_we,
  d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_re,
  d2l_NVDLA_SDP_D_DST_LINE_STRIDE_w,
  d2l_NVDLA_SDP_D_DST_LINE_STRIDE_we,
  d2l_NVDLA_SDP_D_DST_LINE_STRIDE_re,
  d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_w,
  d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_we,
  d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_re,
  d2l_NVDLA_SDP_D_DP_BS_CFG_w,
  d2l_NVDLA_SDP_D_DP_BS_CFG_we,
  d2l_NVDLA_SDP_D_DP_BS_CFG_re,
  d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_w,
  d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_we,
  d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_re,
  d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_w,
  d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_we,
  d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_re,
  d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_w,
  d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_we,
  d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_re,
  d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_w,
  d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_we,
  d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_re,
  d2l_NVDLA_SDP_D_DP_BN_CFG_w,
  d2l_NVDLA_SDP_D_DP_BN_CFG_we,
  d2l_NVDLA_SDP_D_DP_BN_CFG_re,
  d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_w,
  d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_we,
  d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_re,
  d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_w,
  d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_we,
  d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_re,
  d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_w,
  d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_we,
  d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_re,
  d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_w,
  d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_we,
  d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_re,
  d2l_NVDLA_SDP_D_DP_EW_CFG_w,
  d2l_NVDLA_SDP_D_DP_EW_CFG_we,
  d2l_NVDLA_SDP_D_DP_EW_CFG_re,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_w,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_we,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_re,
  d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_w,
  d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_we,
  d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_re,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_w,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_we,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_re,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_w,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_we,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_re,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_w,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_we,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_re,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_w,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_we,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_re,
  d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_w,
  d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_we,
  d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_re,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_w,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_we,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_re,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_w,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_we,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_re,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_w,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_we,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_re,
  d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_w,
  d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_we,
  d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_re,
  d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_w,
  d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_we,
  d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_re,
  d2l_NVDLA_SDP_D_DST_DMA_CFG_w,
  d2l_NVDLA_SDP_D_DST_DMA_CFG_we,
  d2l_NVDLA_SDP_D_DST_DMA_CFG_re,
  d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_w,
  d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_we,
  d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_re,
  d2l_NVDLA_SDP_D_DATA_FORMAT_w,
  d2l_NVDLA_SDP_D_DATA_FORMAT_we,
  d2l_NVDLA_SDP_D_DATA_FORMAT_re,
  d2l_NVDLA_SDP_D_CVT_OFFSET_w,
  d2l_NVDLA_SDP_D_CVT_OFFSET_we,
  d2l_NVDLA_SDP_D_CVT_OFFSET_re,
  d2l_NVDLA_SDP_D_CVT_SCALE_w,
  d2l_NVDLA_SDP_D_CVT_SCALE_we,
  d2l_NVDLA_SDP_D_CVT_SCALE_re,
  d2l_NVDLA_SDP_D_CVT_SHIFT_w,
  d2l_NVDLA_SDP_D_CVT_SHIFT_we,
  d2l_NVDLA_SDP_D_CVT_SHIFT_re,
  d2l_NVDLA_SDP_D_STATUS_w,
  d2l_NVDLA_SDP_D_STATUS_we,
  d2l_NVDLA_SDP_D_STATUS_re,
  d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_w,
  d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_we,
  d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_re,
  d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_w,
  d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_we,
  d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_re,
  d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_w,
  d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_we,
  d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_re,
  d2l_NVDLA_SDP_D_PERF_ENABLE_w,
  d2l_NVDLA_SDP_D_PERF_ENABLE_we,
  d2l_NVDLA_SDP_D_PERF_ENABLE_re,
  d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_w,
  d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_we,
  d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_re,
  d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_w,
  d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_we,
  d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_re,
  d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_w,
  d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_we,
  d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_re,
  d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_w,
  d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_we,
  d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_re,
  d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_w,
  d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_we,
  d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_re,
  d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_w,
  d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_we,
  d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_re,
  d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_w,
  d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_we,
  d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_re,
  h2l_NVDLA_SDP_S_STATUS_STATUS_0_w,
  h2l_NVDLA_SDP_S_STATUS_STATUS_1_w,
  h2l_NVDLA_SDP_S_POINTER_CONSUMER_w,
  h2l_NVDLA_SDP_D_STATUS_STATUS_UNEQUAL_w,
  h2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_STATUS_NAN_INPUT_NUM_w,
  h2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_STATUS_INF_INPUT_NUM_w,
  h2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_STATUS_NAN_OUTPUT_NUM_w,
  h2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_WDMA_STALL_w,
  h2l_NVDLA_SDP_D_PERF_LUT_UFLOW_LUT_UFLOW_w,
  h2l_NVDLA_SDP_D_PERF_LUT_OFLOW_LUT_OFLOW_w,
  h2l_NVDLA_SDP_D_PERF_OUT_SATURATION_OUT_SATURATION_w,
  h2l_NVDLA_SDP_D_PERF_LUT_HYBRID_LUT_HYBRID_w,
  h2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_LUT_LE_HIT_w,
  h2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_LUT_LO_HIT_w,

  l2d_NVDLA_SDP_S_STATUS_r,
  l2d_NVDLA_SDP_S_POINTER_r,
  l2d_NVDLA_SDP_S_LUT_ACCESS_CFG_r,
  l2d_NVDLA_SDP_S_LUT_ACCESS_DATA_r,
  l2d_NVDLA_SDP_S_LUT_CFG_r,
  l2d_NVDLA_SDP_S_LUT_INFO_r,
  l2d_NVDLA_SDP_S_LUT_LE_START_r,
  l2d_NVDLA_SDP_S_LUT_LE_END_r,
  l2d_NVDLA_SDP_S_LUT_LO_START_r,
  l2d_NVDLA_SDP_S_LUT_LO_END_r,
  l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_r,
  l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_r,
  l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_r,
  l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_r,
  l2d_NVDLA_SDP_D_OP_ENABLE_r,
  l2d_NVDLA_SDP_D_DATA_CUBE_WIDTH_r,
  l2d_NVDLA_SDP_D_DATA_CUBE_HEIGHT_r,
  l2d_NVDLA_SDP_D_DATA_CUBE_CHANNEL_r,
  l2d_NVDLA_SDP_D_DST_BASE_ADDR_LOW_r,
  l2d_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_r,
  l2d_NVDLA_SDP_D_DST_LINE_STRIDE_r,
  l2d_NVDLA_SDP_D_DST_SURFACE_STRIDE_r,
  l2d_NVDLA_SDP_D_DP_BS_CFG_r,
  l2d_NVDLA_SDP_D_DP_BS_ALU_CFG_r,
  l2d_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_r,
  l2d_NVDLA_SDP_D_DP_BS_MUL_CFG_r,
  l2d_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_r,
  l2d_NVDLA_SDP_D_DP_BN_CFG_r,
  l2d_NVDLA_SDP_D_DP_BN_ALU_CFG_r,
  l2d_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_r,
  l2d_NVDLA_SDP_D_DP_BN_MUL_CFG_r,
  l2d_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_r,
  l2d_NVDLA_SDP_D_DP_EW_CFG_r,
  l2d_NVDLA_SDP_D_DP_EW_ALU_CFG_r,
  l2d_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_r,
  l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_r,
  l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_r,
  l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_r,
  l2d_NVDLA_SDP_D_DP_EW_MUL_CFG_r,
  l2d_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_r,
  l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_r,
  l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_r,
  l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_r,
  l2d_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_r,
  l2d_NVDLA_SDP_D_FEATURE_MODE_CFG_r,
  l2d_NVDLA_SDP_D_DST_DMA_CFG_r,
  l2d_NVDLA_SDP_D_DST_BATCH_STRIDE_r,
  l2d_NVDLA_SDP_D_DATA_FORMAT_r,
  l2d_NVDLA_SDP_D_CVT_OFFSET_r,
  l2d_NVDLA_SDP_D_CVT_SCALE_r,
  l2d_NVDLA_SDP_D_CVT_SHIFT_r,
  l2d_NVDLA_SDP_D_STATUS_r,
  l2d_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_r,
  l2d_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_r,
  l2d_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_r,
  l2d_NVDLA_SDP_D_PERF_ENABLE_r,
  l2d_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_r,
  l2d_NVDLA_SDP_D_PERF_LUT_UFLOW_r,
  l2d_NVDLA_SDP_D_PERF_LUT_OFLOW_r,
  l2d_NVDLA_SDP_D_PERF_OUT_SATURATION_r,
  l2d_NVDLA_SDP_D_PERF_LUT_HYBRID_r,
  l2d_NVDLA_SDP_D_PERF_LUT_LE_HIT_r,
  l2d_NVDLA_SDP_D_PERF_LUT_LO_HIT_r,
  l2h_NVDLA_SDP_S_POINTER_PRODUCER_r,
  l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ADDR_r,
  l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_TABLE_ID_r,
  l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ACCESS_TYPE_r,
  l2h_NVDLA_SDP_S_LUT_ACCESS_DATA_LUT_DATA_r,
  l2h_NVDLA_SDP_S_LUT_CFG_LUT_LE_FUNCTION_r,
  l2h_NVDLA_SDP_S_LUT_CFG_LUT_UFLOW_PRIORITY_r,
  l2h_NVDLA_SDP_S_LUT_CFG_LUT_OFLOW_PRIORITY_r,
  l2h_NVDLA_SDP_S_LUT_CFG_LUT_HYBRID_PRIORITY_r,
  l2h_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_OFFSET_r,
  l2h_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_SELECT_r,
  l2h_NVDLA_SDP_S_LUT_INFO_LUT_LO_INDEX_SELECT_r,
  l2h_NVDLA_SDP_S_LUT_LE_START_LUT_LE_START_r,
  l2h_NVDLA_SDP_S_LUT_LE_END_LUT_LE_END_r,
  l2h_NVDLA_SDP_S_LUT_LO_START_LUT_LO_START_r,
  l2h_NVDLA_SDP_S_LUT_LO_END_LUT_LO_END_r,
  l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_UFLOW_SCALE_r,
  l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_OFLOW_SCALE_r,
  l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_UFLOW_SHIFT_r,
  l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_OFLOW_SHIFT_r,
  l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_UFLOW_SCALE_r,
  l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_OFLOW_SCALE_r,
  l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_UFLOW_SHIFT_r,
  l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_OFLOW_SHIFT_r,
  l2h_NVDLA_SDP_D_OP_ENABLE_OP_EN_r,
  l2h_NVDLA_SDP_D_DATA_CUBE_WIDTH_WIDTH_r,
  l2h_NVDLA_SDP_D_DATA_CUBE_HEIGHT_HEIGHT_r,
  l2h_NVDLA_SDP_D_DATA_CUBE_CHANNEL_CHANNEL_r,
  l2h_NVDLA_SDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_r,
  l2h_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_r,
  l2h_NVDLA_SDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_r,
  l2h_NVDLA_SDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_r,
  l2h_NVDLA_SDP_D_DP_BS_CFG_BS_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_ALGO_r,
  l2h_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_PRELU_r,
  l2h_NVDLA_SDP_D_DP_BS_CFG_BS_RELU_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SRC_r,
  l2h_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SHIFT_VALUE_r,
  l2h_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_BS_ALU_OPERAND_r,
  l2h_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SRC_r,
  l2h_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SHIFT_VALUE_r,
  l2h_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_BS_MUL_OPERAND_r,
  l2h_NVDLA_SDP_D_DP_BN_CFG_BN_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_ALGO_r,
  l2h_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_PRELU_r,
  l2h_NVDLA_SDP_D_DP_BN_CFG_BN_RELU_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SRC_r,
  l2h_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SHIFT_VALUE_r,
  l2h_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_BN_ALU_OPERAND_r,
  l2h_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SRC_r,
  l2h_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SHIFT_VALUE_r,
  l2h_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_BN_MUL_OPERAND_r,
  l2h_NVDLA_SDP_D_DP_EW_CFG_EW_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_ALGO_r,
  l2h_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_PRELU_r,
  l2h_NVDLA_SDP_D_DP_EW_CFG_EW_LUT_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_SRC_r,
  l2h_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_CVT_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_EW_ALU_OPERAND_r,
  l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_EW_ALU_CVT_OFFSET_r,
  l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_EW_ALU_CVT_SCALE_r,
  l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_EW_ALU_CVT_TRUNCATE_r,
  l2h_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_SRC_r,
  l2h_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_CVT_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_EW_MUL_OPERAND_r,
  l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_EW_MUL_CVT_OFFSET_r,
  l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_EW_MUL_CVT_SCALE_r,
  l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_EW_MUL_CVT_TRUNCATE_r,
  l2h_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_EW_TRUNCATE_r,
  l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_FLYING_MODE_r,
  l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_OUTPUT_DST_r,
  l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_WINOGRAD_r,
  l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_NAN_TO_ZERO_r,
  l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_BATCH_NUMBER_r,
  l2h_NVDLA_SDP_D_DST_DMA_CFG_DST_RAM_TYPE_r,
  l2h_NVDLA_SDP_D_DST_BATCH_STRIDE_DST_BATCH_STRIDE_r,
  l2h_NVDLA_SDP_D_DATA_FORMAT_PROC_PRECISION_r,
  l2h_NVDLA_SDP_D_DATA_FORMAT_OUT_PRECISION_r,
  l2h_NVDLA_SDP_D_CVT_OFFSET_CVT_OFFSET_r,
  l2h_NVDLA_SDP_D_CVT_SCALE_CVT_SCALE_r,
  l2h_NVDLA_SDP_D_CVT_SHIFT_CVT_SHIFT_r,
  l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_DMA_EN_r,
  l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_LUT_EN_r,
  l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_SAT_EN_r,
  l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_NAN_INF_COUNT_EN_r );

  //------- inputs
  input    clk;
  input    reset;
  input     [31:0] d2l_NVDLA_SDP_S_STATUS_w;
  input    d2l_NVDLA_SDP_S_STATUS_we;
  input    d2l_NVDLA_SDP_S_STATUS_re;
  input     [31:0] d2l_NVDLA_SDP_S_POINTER_w;
  input    d2l_NVDLA_SDP_S_POINTER_we;
  input    d2l_NVDLA_SDP_S_POINTER_re;
  input     [31:0] d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_w;
  input    d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_we;
  input    d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_re;
  input     [31:0] d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_w;
  input    d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_we;
  input    d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_re;
  input     [31:0] d2l_NVDLA_SDP_S_LUT_CFG_w;
  input    d2l_NVDLA_SDP_S_LUT_CFG_we;
  input    d2l_NVDLA_SDP_S_LUT_CFG_re;
  input     [31:0] d2l_NVDLA_SDP_S_LUT_INFO_w;
  input    d2l_NVDLA_SDP_S_LUT_INFO_we;
  input    d2l_NVDLA_SDP_S_LUT_INFO_re;
  input     [31:0] d2l_NVDLA_SDP_S_LUT_LE_START_w;
  input    d2l_NVDLA_SDP_S_LUT_LE_START_we;
  input    d2l_NVDLA_SDP_S_LUT_LE_START_re;
  input     [31:0] d2l_NVDLA_SDP_S_LUT_LE_END_w;
  input    d2l_NVDLA_SDP_S_LUT_LE_END_we;
  input    d2l_NVDLA_SDP_S_LUT_LE_END_re;
  input     [31:0] d2l_NVDLA_SDP_S_LUT_LO_START_w;
  input    d2l_NVDLA_SDP_S_LUT_LO_START_we;
  input    d2l_NVDLA_SDP_S_LUT_LO_START_re;
  input     [31:0] d2l_NVDLA_SDP_S_LUT_LO_END_w;
  input    d2l_NVDLA_SDP_S_LUT_LO_END_we;
  input    d2l_NVDLA_SDP_S_LUT_LO_END_re;
  input     [31:0] d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_w;
  input    d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_we;
  input    d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_re;
  input     [31:0] d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_w;
  input    d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_we;
  input    d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_re;
  input     [31:0] d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_w;
  input    d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_we;
  input    d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_re;
  input     [31:0] d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_w;
  input    d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_we;
  input    d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_re;
  input     [31:0] d2l_NVDLA_SDP_D_OP_ENABLE_w;
  input    d2l_NVDLA_SDP_D_OP_ENABLE_we;
  input    d2l_NVDLA_SDP_D_OP_ENABLE_re;
  input     [31:0] d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_w;
  input    d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_we;
  input    d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_re;
  input     [31:0] d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_w;
  input    d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_we;
  input    d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_re;
  input     [31:0] d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_w;
  input    d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_we;
  input    d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_re;
  input     [31:0] d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_w;
  input    d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_we;
  input    d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_re;
  input     [31:0] d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_w;
  input    d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_we;
  input    d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_re;
  input     [31:0] d2l_NVDLA_SDP_D_DST_LINE_STRIDE_w;
  input    d2l_NVDLA_SDP_D_DST_LINE_STRIDE_we;
  input    d2l_NVDLA_SDP_D_DST_LINE_STRIDE_re;
  input     [31:0] d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_w;
  input    d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_we;
  input    d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_re;
  input     [31:0] d2l_NVDLA_SDP_D_DP_BS_CFG_w;
  input    d2l_NVDLA_SDP_D_DP_BS_CFG_we;
  input    d2l_NVDLA_SDP_D_DP_BS_CFG_re;
  input     [31:0] d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_w;
  input    d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_we;
  input    d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_re;
  input     [31:0] d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_w;
  input    d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_we;
  input    d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_re;
  input     [31:0] d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_w;
  input    d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_we;
  input    d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_re;
  input     [31:0] d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_w;
  input    d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_we;
  input    d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_re;
  input     [31:0] d2l_NVDLA_SDP_D_DP_BN_CFG_w;
  input    d2l_NVDLA_SDP_D_DP_BN_CFG_we;
  input    d2l_NVDLA_SDP_D_DP_BN_CFG_re;
  input     [31:0] d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_w;
  input    d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_we;
  input    d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_re;
  input     [31:0] d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_w;
  input    d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_we;
  input    d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_re;
  input     [31:0] d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_w;
  input    d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_we;
  input    d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_re;
  input     [31:0] d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_w;
  input    d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_we;
  input    d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_re;
  input     [31:0] d2l_NVDLA_SDP_D_DP_EW_CFG_w;
  input    d2l_NVDLA_SDP_D_DP_EW_CFG_we;
  input    d2l_NVDLA_SDP_D_DP_EW_CFG_re;
  input     [31:0] d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_w;
  input    d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_we;
  input    d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_re;
  input     [31:0] d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_w;
  input    d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_we;
  input    d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_re;
  input     [31:0] d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_w;
  input    d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_we;
  input    d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_re;
  input     [31:0] d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_w;
  input    d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_we;
  input    d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_re;
  input     [31:0] d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_w;
  input    d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_we;
  input    d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_re;
  input     [31:0] d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_w;
  input    d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_we;
  input    d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_re;
  input     [31:0] d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_w;
  input    d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_we;
  input    d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_re;
  input     [31:0] d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_w;
  input    d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_we;
  input    d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_re;
  input     [31:0] d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_w;
  input    d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_we;
  input    d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_re;
  input     [31:0] d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_w;
  input    d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_we;
  input    d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_re;
  input     [31:0] d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_w;
  input    d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_we;
  input    d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_re;
  input     [31:0] d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_w;
  input    d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_we;
  input    d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_re;
  input     [31:0] d2l_NVDLA_SDP_D_DST_DMA_CFG_w;
  input    d2l_NVDLA_SDP_D_DST_DMA_CFG_we;
  input    d2l_NVDLA_SDP_D_DST_DMA_CFG_re;
  input     [31:0] d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_w;
  input    d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_we;
  input    d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_re;
  input     [31:0] d2l_NVDLA_SDP_D_DATA_FORMAT_w;
  input    d2l_NVDLA_SDP_D_DATA_FORMAT_we;
  input    d2l_NVDLA_SDP_D_DATA_FORMAT_re;
  input     [31:0] d2l_NVDLA_SDP_D_CVT_OFFSET_w;
  input    d2l_NVDLA_SDP_D_CVT_OFFSET_we;
  input    d2l_NVDLA_SDP_D_CVT_OFFSET_re;
  input     [31:0] d2l_NVDLA_SDP_D_CVT_SCALE_w;
  input    d2l_NVDLA_SDP_D_CVT_SCALE_we;
  input    d2l_NVDLA_SDP_D_CVT_SCALE_re;
  input     [31:0] d2l_NVDLA_SDP_D_CVT_SHIFT_w;
  input    d2l_NVDLA_SDP_D_CVT_SHIFT_we;
  input    d2l_NVDLA_SDP_D_CVT_SHIFT_re;
  input     [31:0] d2l_NVDLA_SDP_D_STATUS_w;
  input    d2l_NVDLA_SDP_D_STATUS_we;
  input    d2l_NVDLA_SDP_D_STATUS_re;
  input     [31:0] d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_w;
  input    d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_we;
  input    d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_re;
  input     [31:0] d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_w;
  input    d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_we;
  input    d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_re;
  input     [31:0] d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_w;
  input    d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_we;
  input    d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_re;
  input     [31:0] d2l_NVDLA_SDP_D_PERF_ENABLE_w;
  input    d2l_NVDLA_SDP_D_PERF_ENABLE_we;
  input    d2l_NVDLA_SDP_D_PERF_ENABLE_re;
  input     [31:0] d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_w;
  input    d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_we;
  input    d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_re;
  input     [31:0] d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_w;
  input    d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_we;
  input    d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_re;
  input     [31:0] d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_w;
  input    d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_we;
  input    d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_re;
  input     [31:0] d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_w;
  input    d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_we;
  input    d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_re;
  input     [31:0] d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_w;
  input    d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_we;
  input    d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_re;
  input     [31:0] d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_w;
  input    d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_we;
  input    d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_re;
  input     [31:0] d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_w;
  input    d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_we;
  input    d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_re;
  input     [1:0] h2l_NVDLA_SDP_S_STATUS_STATUS_0_w;
  input     [1:0] h2l_NVDLA_SDP_S_STATUS_STATUS_1_w;
  input    h2l_NVDLA_SDP_S_POINTER_CONSUMER_w;
  input    h2l_NVDLA_SDP_D_STATUS_STATUS_UNEQUAL_w;
  input     [31:0] h2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_STATUS_NAN_INPUT_NUM_w;
  input     [31:0] h2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_STATUS_INF_INPUT_NUM_w;
  input     [31:0] h2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_STATUS_NAN_OUTPUT_NUM_w;
  input     [31:0] h2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_WDMA_STALL_w;
  input     [31:0] h2l_NVDLA_SDP_D_PERF_LUT_UFLOW_LUT_UFLOW_w;
  input     [31:0] h2l_NVDLA_SDP_D_PERF_LUT_OFLOW_LUT_OFLOW_w;
  input     [31:0] h2l_NVDLA_SDP_D_PERF_OUT_SATURATION_OUT_SATURATION_w;
  input     [31:0] h2l_NVDLA_SDP_D_PERF_LUT_HYBRID_LUT_HYBRID_w;
  input     [31:0] h2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_LUT_LE_HIT_w;
  input     [31:0] h2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_LUT_LO_HIT_w;

  //------- outputs
  output     [31:0] l2d_NVDLA_SDP_S_STATUS_r;
  output     [31:0] l2d_NVDLA_SDP_S_POINTER_r;
  output     [31:0] l2d_NVDLA_SDP_S_LUT_ACCESS_CFG_r;
  output     [31:0] l2d_NVDLA_SDP_S_LUT_ACCESS_DATA_r;
  output     [31:0] l2d_NVDLA_SDP_S_LUT_CFG_r;
  output     [31:0] l2d_NVDLA_SDP_S_LUT_INFO_r;
  output     [31:0] l2d_NVDLA_SDP_S_LUT_LE_START_r;
  output     [31:0] l2d_NVDLA_SDP_S_LUT_LE_END_r;
  output     [31:0] l2d_NVDLA_SDP_S_LUT_LO_START_r;
  output     [31:0] l2d_NVDLA_SDP_S_LUT_LO_END_r;
  output     [31:0] l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_r;
  output     [31:0] l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_r;
  output     [31:0] l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_r;
  output     [31:0] l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_r;
  output     [31:0] l2d_NVDLA_SDP_D_OP_ENABLE_r;
  output     [31:0] l2d_NVDLA_SDP_D_DATA_CUBE_WIDTH_r;
  output     [31:0] l2d_NVDLA_SDP_D_DATA_CUBE_HEIGHT_r;
  output     [31:0] l2d_NVDLA_SDP_D_DATA_CUBE_CHANNEL_r;
  output     [31:0] l2d_NVDLA_SDP_D_DST_BASE_ADDR_LOW_r;
  output     [31:0] l2d_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_r;
  output     [31:0] l2d_NVDLA_SDP_D_DST_LINE_STRIDE_r;
  output     [31:0] l2d_NVDLA_SDP_D_DST_SURFACE_STRIDE_r;
  output     [31:0] l2d_NVDLA_SDP_D_DP_BS_CFG_r;
  output     [31:0] l2d_NVDLA_SDP_D_DP_BS_ALU_CFG_r;
  output     [31:0] l2d_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_r;
  output     [31:0] l2d_NVDLA_SDP_D_DP_BS_MUL_CFG_r;
  output     [31:0] l2d_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_r;
  output     [31:0] l2d_NVDLA_SDP_D_DP_BN_CFG_r;
  output     [31:0] l2d_NVDLA_SDP_D_DP_BN_ALU_CFG_r;
  output     [31:0] l2d_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_r;
  output     [31:0] l2d_NVDLA_SDP_D_DP_BN_MUL_CFG_r;
  output     [31:0] l2d_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_r;
  output     [31:0] l2d_NVDLA_SDP_D_DP_EW_CFG_r;
  output     [31:0] l2d_NVDLA_SDP_D_DP_EW_ALU_CFG_r;
  output     [31:0] l2d_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_r;
  output     [31:0] l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_r;
  output     [31:0] l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_r;
  output     [31:0] l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_r;
  output     [31:0] l2d_NVDLA_SDP_D_DP_EW_MUL_CFG_r;
  output     [31:0] l2d_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_r;
  output     [31:0] l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_r;
  output     [31:0] l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_r;
  output     [31:0] l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_r;
  output     [31:0] l2d_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_r;
  output     [31:0] l2d_NVDLA_SDP_D_FEATURE_MODE_CFG_r;
  output     [31:0] l2d_NVDLA_SDP_D_DST_DMA_CFG_r;
  output     [31:0] l2d_NVDLA_SDP_D_DST_BATCH_STRIDE_r;
  output     [31:0] l2d_NVDLA_SDP_D_DATA_FORMAT_r;
  output     [31:0] l2d_NVDLA_SDP_D_CVT_OFFSET_r;
  output     [31:0] l2d_NVDLA_SDP_D_CVT_SCALE_r;
  output     [31:0] l2d_NVDLA_SDP_D_CVT_SHIFT_r;
  output     [31:0] l2d_NVDLA_SDP_D_STATUS_r;
  output     [31:0] l2d_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_r;
  output     [31:0] l2d_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_r;
  output     [31:0] l2d_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_r;
  output     [31:0] l2d_NVDLA_SDP_D_PERF_ENABLE_r;
  output     [31:0] l2d_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_r;
  output     [31:0] l2d_NVDLA_SDP_D_PERF_LUT_UFLOW_r;
  output     [31:0] l2d_NVDLA_SDP_D_PERF_LUT_OFLOW_r;
  output     [31:0] l2d_NVDLA_SDP_D_PERF_OUT_SATURATION_r;
  output     [31:0] l2d_NVDLA_SDP_D_PERF_LUT_HYBRID_r;
  output     [31:0] l2d_NVDLA_SDP_D_PERF_LUT_LE_HIT_r;
  output     [31:0] l2d_NVDLA_SDP_D_PERF_LUT_LO_HIT_r;
  output    l2h_NVDLA_SDP_S_POINTER_PRODUCER_r;
  output     [9:0] l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ADDR_r;
  output    l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_TABLE_ID_r;
  output    l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ACCESS_TYPE_r;
  output     [15:0] l2h_NVDLA_SDP_S_LUT_ACCESS_DATA_LUT_DATA_r;
  output    l2h_NVDLA_SDP_S_LUT_CFG_LUT_LE_FUNCTION_r;
  output    l2h_NVDLA_SDP_S_LUT_CFG_LUT_UFLOW_PRIORITY_r;
  output    l2h_NVDLA_SDP_S_LUT_CFG_LUT_OFLOW_PRIORITY_r;
  output    l2h_NVDLA_SDP_S_LUT_CFG_LUT_HYBRID_PRIORITY_r;
  output     [7:0] l2h_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_OFFSET_r;
  output     [7:0] l2h_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_SELECT_r;
  output     [7:0] l2h_NVDLA_SDP_S_LUT_INFO_LUT_LO_INDEX_SELECT_r;
  output     [31:0] l2h_NVDLA_SDP_S_LUT_LE_START_LUT_LE_START_r;
  output     [31:0] l2h_NVDLA_SDP_S_LUT_LE_END_LUT_LE_END_r;
  output     [31:0] l2h_NVDLA_SDP_S_LUT_LO_START_LUT_LO_START_r;
  output     [31:0] l2h_NVDLA_SDP_S_LUT_LO_END_LUT_LO_END_r;
  output     [15:0] l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_UFLOW_SCALE_r;
  output     [15:0] l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_OFLOW_SCALE_r;
  output     [4:0] l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_UFLOW_SHIFT_r;
  output     [4:0] l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_OFLOW_SHIFT_r;
  output     [15:0] l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_UFLOW_SCALE_r;
  output     [15:0] l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_OFLOW_SCALE_r;
  output     [4:0] l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_UFLOW_SHIFT_r;
  output     [4:0] l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_OFLOW_SHIFT_r;
  output    l2h_NVDLA_SDP_D_OP_ENABLE_OP_EN_r;
  output     [12:0] l2h_NVDLA_SDP_D_DATA_CUBE_WIDTH_WIDTH_r;
  output     [12:0] l2h_NVDLA_SDP_D_DATA_CUBE_HEIGHT_HEIGHT_r;
  output     [12:0] l2h_NVDLA_SDP_D_DATA_CUBE_CHANNEL_CHANNEL_r;
  output     [31:0] l2h_NVDLA_SDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_r;
  output     [31:0] l2h_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_r;
  output     [31:0] l2h_NVDLA_SDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_r;
  output     [31:0] l2h_NVDLA_SDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_r;
  output    l2h_NVDLA_SDP_D_DP_BS_CFG_BS_BYPASS_r;
  output    l2h_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_BYPASS_r;
  output     [1:0] l2h_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_ALGO_r;
  output    l2h_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_BYPASS_r;
  output    l2h_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_PRELU_r;
  output    l2h_NVDLA_SDP_D_DP_BS_CFG_BS_RELU_BYPASS_r;
  output    l2h_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SRC_r;
  output     [5:0] l2h_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SHIFT_VALUE_r;
  output     [15:0] l2h_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_BS_ALU_OPERAND_r;
  output    l2h_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SRC_r;
  output     [7:0] l2h_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SHIFT_VALUE_r;
  output     [15:0] l2h_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_BS_MUL_OPERAND_r;
  output    l2h_NVDLA_SDP_D_DP_BN_CFG_BN_BYPASS_r;
  output    l2h_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_BYPASS_r;
  output     [1:0] l2h_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_ALGO_r;
  output    l2h_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_BYPASS_r;
  output    l2h_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_PRELU_r;
  output    l2h_NVDLA_SDP_D_DP_BN_CFG_BN_RELU_BYPASS_r;
  output    l2h_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SRC_r;
  output     [5:0] l2h_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SHIFT_VALUE_r;
  output     [15:0] l2h_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_BN_ALU_OPERAND_r;
  output    l2h_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SRC_r;
  output     [7:0] l2h_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SHIFT_VALUE_r;
  output     [15:0] l2h_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_BN_MUL_OPERAND_r;
  output    l2h_NVDLA_SDP_D_DP_EW_CFG_EW_BYPASS_r;
  output    l2h_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_BYPASS_r;
  output     [1:0] l2h_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_ALGO_r;
  output    l2h_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_BYPASS_r;
  output    l2h_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_PRELU_r;
  output    l2h_NVDLA_SDP_D_DP_EW_CFG_EW_LUT_BYPASS_r;
  output    l2h_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_SRC_r;
  output    l2h_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_CVT_BYPASS_r;
  output     [31:0] l2h_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_EW_ALU_OPERAND_r;
  output     [31:0] l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_EW_ALU_CVT_OFFSET_r;
  output     [15:0] l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_EW_ALU_CVT_SCALE_r;
  output     [5:0] l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_EW_ALU_CVT_TRUNCATE_r;
  output    l2h_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_SRC_r;
  output    l2h_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_CVT_BYPASS_r;
  output     [31:0] l2h_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_EW_MUL_OPERAND_r;
  output     [31:0] l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_EW_MUL_CVT_OFFSET_r;
  output     [15:0] l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_EW_MUL_CVT_SCALE_r;
  output     [5:0] l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_EW_MUL_CVT_TRUNCATE_r;
  output     [9:0] l2h_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_EW_TRUNCATE_r;
  output    l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_FLYING_MODE_r;
  output    l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_OUTPUT_DST_r;
  output    l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_WINOGRAD_r;
  output    l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_NAN_TO_ZERO_r;
  output     [4:0] l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_BATCH_NUMBER_r;
  output    l2h_NVDLA_SDP_D_DST_DMA_CFG_DST_RAM_TYPE_r;
  output     [31:0] l2h_NVDLA_SDP_D_DST_BATCH_STRIDE_DST_BATCH_STRIDE_r;
  output     [1:0] l2h_NVDLA_SDP_D_DATA_FORMAT_PROC_PRECISION_r;
  output     [1:0] l2h_NVDLA_SDP_D_DATA_FORMAT_OUT_PRECISION_r;
  output     [31:0] l2h_NVDLA_SDP_D_CVT_OFFSET_CVT_OFFSET_r;
  output     [15:0] l2h_NVDLA_SDP_D_CVT_SCALE_CVT_SCALE_r;
  output     [5:0] l2h_NVDLA_SDP_D_CVT_SHIFT_CVT_SHIFT_r;
  output    l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_DMA_EN_r;
  output    l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_LUT_EN_r;
  output    l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_SAT_EN_r;
  output    l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_NAN_INF_COUNT_EN_r;


  //------- reg defines
  reg   [1:0] rg_NVDLA_SDP_S_STATUS_STATUS_0;
  reg   [1:0] rg_NVDLA_SDP_S_STATUS_STATUS_1;
  reg   [31:0] l2d_NVDLA_SDP_S_STATUS_r;
  reg  rg_NVDLA_SDP_S_POINTER_PRODUCER;
  reg  reg_NVDLA_SDP_S_POINTER_PRODUCER_next;
  reg  l2h_NVDLA_SDP_S_POINTER_PRODUCER_r;
  reg  rg_NVDLA_SDP_S_POINTER_CONSUMER;
  reg   [31:0] l2d_NVDLA_SDP_S_POINTER_r;
  reg   [9:0] rg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ADDR;
  reg   [9:0] reg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ADDR_next;
  reg   [9:0] l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ADDR_r;
  reg  rg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_TABLE_ID;
  reg  reg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_TABLE_ID_next;
  reg  l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_TABLE_ID_r;
  reg  rg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ACCESS_TYPE;
  reg  reg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ACCESS_TYPE_next;
  reg  l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ACCESS_TYPE_r;
  reg   [31:0] l2d_NVDLA_SDP_S_LUT_ACCESS_CFG_r;
  reg   [15:0] rg_NVDLA_SDP_S_LUT_ACCESS_DATA_LUT_DATA;
  reg   [15:0] reg_NVDLA_SDP_S_LUT_ACCESS_DATA_LUT_DATA_next;
  reg   [15:0] l2h_NVDLA_SDP_S_LUT_ACCESS_DATA_LUT_DATA_r;
  reg   [31:0] l2d_NVDLA_SDP_S_LUT_ACCESS_DATA_r;
  reg  rg_NVDLA_SDP_S_LUT_CFG_LUT_LE_FUNCTION;
  reg  reg_NVDLA_SDP_S_LUT_CFG_LUT_LE_FUNCTION_next;
  reg  l2h_NVDLA_SDP_S_LUT_CFG_LUT_LE_FUNCTION_r;
  reg  rg_NVDLA_SDP_S_LUT_CFG_LUT_UFLOW_PRIORITY;
  reg  reg_NVDLA_SDP_S_LUT_CFG_LUT_UFLOW_PRIORITY_next;
  reg  l2h_NVDLA_SDP_S_LUT_CFG_LUT_UFLOW_PRIORITY_r;
  reg  rg_NVDLA_SDP_S_LUT_CFG_LUT_OFLOW_PRIORITY;
  reg  reg_NVDLA_SDP_S_LUT_CFG_LUT_OFLOW_PRIORITY_next;
  reg  l2h_NVDLA_SDP_S_LUT_CFG_LUT_OFLOW_PRIORITY_r;
  reg  rg_NVDLA_SDP_S_LUT_CFG_LUT_HYBRID_PRIORITY;
  reg  reg_NVDLA_SDP_S_LUT_CFG_LUT_HYBRID_PRIORITY_next;
  reg  l2h_NVDLA_SDP_S_LUT_CFG_LUT_HYBRID_PRIORITY_r;
  reg   [31:0] l2d_NVDLA_SDP_S_LUT_CFG_r;
  reg   [7:0] rg_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_OFFSET;
  reg   [7:0] reg_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_OFFSET_next;
  reg   [7:0] l2h_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_OFFSET_r;
  reg   [7:0] rg_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_SELECT;
  reg   [7:0] reg_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_SELECT_next;
  reg   [7:0] l2h_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_SELECT_r;
  reg   [7:0] rg_NVDLA_SDP_S_LUT_INFO_LUT_LO_INDEX_SELECT;
  reg   [7:0] reg_NVDLA_SDP_S_LUT_INFO_LUT_LO_INDEX_SELECT_next;
  reg   [7:0] l2h_NVDLA_SDP_S_LUT_INFO_LUT_LO_INDEX_SELECT_r;
  reg   [31:0] l2d_NVDLA_SDP_S_LUT_INFO_r;
  reg   [31:0] rg_NVDLA_SDP_S_LUT_LE_START_LUT_LE_START;
  reg   [31:0] reg_NVDLA_SDP_S_LUT_LE_START_LUT_LE_START_next;
  reg   [31:0] l2h_NVDLA_SDP_S_LUT_LE_START_LUT_LE_START_r;
  reg   [31:0] l2d_NVDLA_SDP_S_LUT_LE_START_r;
  reg   [31:0] rg_NVDLA_SDP_S_LUT_LE_END_LUT_LE_END;
  reg   [31:0] reg_NVDLA_SDP_S_LUT_LE_END_LUT_LE_END_next;
  reg   [31:0] l2h_NVDLA_SDP_S_LUT_LE_END_LUT_LE_END_r;
  reg   [31:0] l2d_NVDLA_SDP_S_LUT_LE_END_r;
  reg   [31:0] rg_NVDLA_SDP_S_LUT_LO_START_LUT_LO_START;
  reg   [31:0] reg_NVDLA_SDP_S_LUT_LO_START_LUT_LO_START_next;
  reg   [31:0] l2h_NVDLA_SDP_S_LUT_LO_START_LUT_LO_START_r;
  reg   [31:0] l2d_NVDLA_SDP_S_LUT_LO_START_r;
  reg   [31:0] rg_NVDLA_SDP_S_LUT_LO_END_LUT_LO_END;
  reg   [31:0] reg_NVDLA_SDP_S_LUT_LO_END_LUT_LO_END_next;
  reg   [31:0] l2h_NVDLA_SDP_S_LUT_LO_END_LUT_LO_END_r;
  reg   [31:0] l2d_NVDLA_SDP_S_LUT_LO_END_r;
  reg   [15:0] rg_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_UFLOW_SCALE;
  reg   [15:0] reg_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_UFLOW_SCALE_next;
  reg   [15:0] l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_UFLOW_SCALE_r;
  reg   [15:0] rg_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_OFLOW_SCALE;
  reg   [15:0] reg_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_OFLOW_SCALE_next;
  reg   [15:0] l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_OFLOW_SCALE_r;
  reg   [31:0] l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_r;
  reg   [4:0] rg_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_UFLOW_SHIFT;
  reg   [4:0] reg_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_UFLOW_SHIFT_next;
  reg   [4:0] l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_UFLOW_SHIFT_r;
  reg   [4:0] rg_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_OFLOW_SHIFT;
  reg   [4:0] reg_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_OFLOW_SHIFT_next;
  reg   [4:0] l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_OFLOW_SHIFT_r;
  reg   [31:0] l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_r;
  reg   [15:0] rg_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_UFLOW_SCALE;
  reg   [15:0] reg_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_UFLOW_SCALE_next;
  reg   [15:0] l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_UFLOW_SCALE_r;
  reg   [15:0] rg_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_OFLOW_SCALE;
  reg   [15:0] reg_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_OFLOW_SCALE_next;
  reg   [15:0] l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_OFLOW_SCALE_r;
  reg   [31:0] l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_r;
  reg   [4:0] rg_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_UFLOW_SHIFT;
  reg   [4:0] reg_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_UFLOW_SHIFT_next;
  reg   [4:0] l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_UFLOW_SHIFT_r;
  reg   [4:0] rg_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_OFLOW_SHIFT;
  reg   [4:0] reg_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_OFLOW_SHIFT_next;
  reg   [4:0] l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_OFLOW_SHIFT_r;
  reg   [31:0] l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_r;
  reg  rg_NVDLA_SDP_D_OP_ENABLE_OP_EN;
  reg  reg_NVDLA_SDP_D_OP_ENABLE_OP_EN_next;
  reg  l2h_NVDLA_SDP_D_OP_ENABLE_OP_EN_r;
  reg   [31:0] l2d_NVDLA_SDP_D_OP_ENABLE_r;
  reg   [12:0] rg_NVDLA_SDP_D_DATA_CUBE_WIDTH_WIDTH;
  reg   [12:0] reg_NVDLA_SDP_D_DATA_CUBE_WIDTH_WIDTH_next;
  reg   [12:0] l2h_NVDLA_SDP_D_DATA_CUBE_WIDTH_WIDTH_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DATA_CUBE_WIDTH_r;
  reg   [12:0] rg_NVDLA_SDP_D_DATA_CUBE_HEIGHT_HEIGHT;
  reg   [12:0] reg_NVDLA_SDP_D_DATA_CUBE_HEIGHT_HEIGHT_next;
  reg   [12:0] l2h_NVDLA_SDP_D_DATA_CUBE_HEIGHT_HEIGHT_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DATA_CUBE_HEIGHT_r;
  reg   [12:0] rg_NVDLA_SDP_D_DATA_CUBE_CHANNEL_CHANNEL;
  reg   [12:0] reg_NVDLA_SDP_D_DATA_CUBE_CHANNEL_CHANNEL_next;
  reg   [12:0] l2h_NVDLA_SDP_D_DATA_CUBE_CHANNEL_CHANNEL_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DATA_CUBE_CHANNEL_r;
  reg   [31:0] rg_NVDLA_SDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW;
  reg   [31:0] reg_NVDLA_SDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_next;
  reg   [31:0] l2h_NVDLA_SDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DST_BASE_ADDR_LOW_r;
  reg   [31:0] rg_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH;
  reg   [31:0] reg_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_next;
  reg   [31:0] l2h_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_r;
  reg   [31:0] rg_NVDLA_SDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE;
  reg   [31:0] reg_NVDLA_SDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_next;
  reg   [31:0] l2h_NVDLA_SDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DST_LINE_STRIDE_r;
  reg   [31:0] rg_NVDLA_SDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE;
  reg   [31:0] reg_NVDLA_SDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_next;
  reg   [31:0] l2h_NVDLA_SDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DST_SURFACE_STRIDE_r;
  reg  rg_NVDLA_SDP_D_DP_BS_CFG_BS_BYPASS;
  reg  reg_NVDLA_SDP_D_DP_BS_CFG_BS_BYPASS_next;
  reg  l2h_NVDLA_SDP_D_DP_BS_CFG_BS_BYPASS_r;
  reg  rg_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_BYPASS;
  reg  reg_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_BYPASS_next;
  reg  l2h_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_BYPASS_r;
  reg   [1:0] rg_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_ALGO;
  reg   [1:0] reg_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_ALGO_next;
  reg   [1:0] l2h_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_ALGO_r;
  reg  rg_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_BYPASS;
  reg  reg_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_BYPASS_next;
  reg  l2h_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_BYPASS_r;
  reg  rg_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_PRELU;
  reg  reg_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_PRELU_next;
  reg  l2h_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_PRELU_r;
  reg  rg_NVDLA_SDP_D_DP_BS_CFG_BS_RELU_BYPASS;
  reg  reg_NVDLA_SDP_D_DP_BS_CFG_BS_RELU_BYPASS_next;
  reg  l2h_NVDLA_SDP_D_DP_BS_CFG_BS_RELU_BYPASS_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DP_BS_CFG_r;
  reg  rg_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SRC;
  reg  reg_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SRC_next;
  reg  l2h_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SRC_r;
  reg   [5:0] rg_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SHIFT_VALUE;
  reg   [5:0] reg_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SHIFT_VALUE_next;
  reg   [5:0] l2h_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SHIFT_VALUE_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DP_BS_ALU_CFG_r;
  reg   [15:0] rg_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_BS_ALU_OPERAND;
  reg   [15:0] reg_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_BS_ALU_OPERAND_next;
  reg   [15:0] l2h_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_BS_ALU_OPERAND_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_r;
  reg  rg_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SRC;
  reg  reg_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SRC_next;
  reg  l2h_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SRC_r;
  reg   [7:0] rg_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SHIFT_VALUE;
  reg   [7:0] reg_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SHIFT_VALUE_next;
  reg   [7:0] l2h_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SHIFT_VALUE_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DP_BS_MUL_CFG_r;
  reg   [15:0] rg_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_BS_MUL_OPERAND;
  reg   [15:0] reg_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_BS_MUL_OPERAND_next;
  reg   [15:0] l2h_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_BS_MUL_OPERAND_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_r;
  reg  rg_NVDLA_SDP_D_DP_BN_CFG_BN_BYPASS;
  reg  reg_NVDLA_SDP_D_DP_BN_CFG_BN_BYPASS_next;
  reg  l2h_NVDLA_SDP_D_DP_BN_CFG_BN_BYPASS_r;
  reg  rg_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_BYPASS;
  reg  reg_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_BYPASS_next;
  reg  l2h_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_BYPASS_r;
  reg   [1:0] rg_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_ALGO;
  reg   [1:0] reg_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_ALGO_next;
  reg   [1:0] l2h_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_ALGO_r;
  reg  rg_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_BYPASS;
  reg  reg_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_BYPASS_next;
  reg  l2h_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_BYPASS_r;
  reg  rg_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_PRELU;
  reg  reg_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_PRELU_next;
  reg  l2h_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_PRELU_r;
  reg  rg_NVDLA_SDP_D_DP_BN_CFG_BN_RELU_BYPASS;
  reg  reg_NVDLA_SDP_D_DP_BN_CFG_BN_RELU_BYPASS_next;
  reg  l2h_NVDLA_SDP_D_DP_BN_CFG_BN_RELU_BYPASS_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DP_BN_CFG_r;
  reg  rg_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SRC;
  reg  reg_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SRC_next;
  reg  l2h_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SRC_r;
  reg   [5:0] rg_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SHIFT_VALUE;
  reg   [5:0] reg_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SHIFT_VALUE_next;
  reg   [5:0] l2h_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SHIFT_VALUE_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DP_BN_ALU_CFG_r;
  reg   [15:0] rg_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_BN_ALU_OPERAND;
  reg   [15:0] reg_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_BN_ALU_OPERAND_next;
  reg   [15:0] l2h_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_BN_ALU_OPERAND_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_r;
  reg  rg_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SRC;
  reg  reg_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SRC_next;
  reg  l2h_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SRC_r;
  reg   [7:0] rg_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SHIFT_VALUE;
  reg   [7:0] reg_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SHIFT_VALUE_next;
  reg   [7:0] l2h_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SHIFT_VALUE_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DP_BN_MUL_CFG_r;
  reg   [15:0] rg_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_BN_MUL_OPERAND;
  reg   [15:0] reg_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_BN_MUL_OPERAND_next;
  reg   [15:0] l2h_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_BN_MUL_OPERAND_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_r;
  reg  rg_NVDLA_SDP_D_DP_EW_CFG_EW_BYPASS;
  reg  reg_NVDLA_SDP_D_DP_EW_CFG_EW_BYPASS_next;
  reg  l2h_NVDLA_SDP_D_DP_EW_CFG_EW_BYPASS_r;
  reg  rg_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_BYPASS;
  reg  reg_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_BYPASS_next;
  reg  l2h_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_BYPASS_r;
  reg   [1:0] rg_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_ALGO;
  reg   [1:0] reg_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_ALGO_next;
  reg   [1:0] l2h_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_ALGO_r;
  reg  rg_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_BYPASS;
  reg  reg_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_BYPASS_next;
  reg  l2h_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_BYPASS_r;
  reg  rg_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_PRELU;
  reg  reg_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_PRELU_next;
  reg  l2h_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_PRELU_r;
  reg  rg_NVDLA_SDP_D_DP_EW_CFG_EW_LUT_BYPASS;
  reg  reg_NVDLA_SDP_D_DP_EW_CFG_EW_LUT_BYPASS_next;
  reg  l2h_NVDLA_SDP_D_DP_EW_CFG_EW_LUT_BYPASS_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DP_EW_CFG_r;
  reg  rg_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_SRC;
  reg  reg_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_SRC_next;
  reg  l2h_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_SRC_r;
  reg  rg_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_CVT_BYPASS;
  reg  reg_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_CVT_BYPASS_next;
  reg  l2h_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_CVT_BYPASS_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DP_EW_ALU_CFG_r;
  reg   [31:0] rg_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_EW_ALU_OPERAND;
  reg   [31:0] reg_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_EW_ALU_OPERAND_next;
  reg   [31:0] l2h_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_EW_ALU_OPERAND_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_r;
  reg   [31:0] rg_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_EW_ALU_CVT_OFFSET;
  reg   [31:0] reg_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_EW_ALU_CVT_OFFSET_next;
  reg   [31:0] l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_EW_ALU_CVT_OFFSET_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_r;
  reg   [15:0] rg_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_EW_ALU_CVT_SCALE;
  reg   [15:0] reg_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_EW_ALU_CVT_SCALE_next;
  reg   [15:0] l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_EW_ALU_CVT_SCALE_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_r;
  reg   [5:0] rg_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_EW_ALU_CVT_TRUNCATE;
  reg   [5:0] reg_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_EW_ALU_CVT_TRUNCATE_next;
  reg   [5:0] l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_EW_ALU_CVT_TRUNCATE_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_r;
  reg  rg_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_SRC;
  reg  reg_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_SRC_next;
  reg  l2h_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_SRC_r;
  reg  rg_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_CVT_BYPASS;
  reg  reg_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_CVT_BYPASS_next;
  reg  l2h_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_CVT_BYPASS_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DP_EW_MUL_CFG_r;
  reg   [31:0] rg_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_EW_MUL_OPERAND;
  reg   [31:0] reg_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_EW_MUL_OPERAND_next;
  reg   [31:0] l2h_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_EW_MUL_OPERAND_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_r;
  reg   [31:0] rg_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_EW_MUL_CVT_OFFSET;
  reg   [31:0] reg_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_EW_MUL_CVT_OFFSET_next;
  reg   [31:0] l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_EW_MUL_CVT_OFFSET_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_r;
  reg   [15:0] rg_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_EW_MUL_CVT_SCALE;
  reg   [15:0] reg_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_EW_MUL_CVT_SCALE_next;
  reg   [15:0] l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_EW_MUL_CVT_SCALE_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_r;
  reg   [5:0] rg_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_EW_MUL_CVT_TRUNCATE;
  reg   [5:0] reg_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_EW_MUL_CVT_TRUNCATE_next;
  reg   [5:0] l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_EW_MUL_CVT_TRUNCATE_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_r;
  reg   [9:0] rg_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_EW_TRUNCATE;
  reg   [9:0] reg_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_EW_TRUNCATE_next;
  reg   [9:0] l2h_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_EW_TRUNCATE_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_r;
  reg  rg_NVDLA_SDP_D_FEATURE_MODE_CFG_FLYING_MODE;
  reg  reg_NVDLA_SDP_D_FEATURE_MODE_CFG_FLYING_MODE_next;
  reg  l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_FLYING_MODE_r;
  reg  rg_NVDLA_SDP_D_FEATURE_MODE_CFG_OUTPUT_DST;
  reg  reg_NVDLA_SDP_D_FEATURE_MODE_CFG_OUTPUT_DST_next;
  reg  l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_OUTPUT_DST_r;
  reg  rg_NVDLA_SDP_D_FEATURE_MODE_CFG_WINOGRAD;
  reg  reg_NVDLA_SDP_D_FEATURE_MODE_CFG_WINOGRAD_next;
  reg  l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_WINOGRAD_r;
  reg  rg_NVDLA_SDP_D_FEATURE_MODE_CFG_NAN_TO_ZERO;
  reg  reg_NVDLA_SDP_D_FEATURE_MODE_CFG_NAN_TO_ZERO_next;
  reg  l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_NAN_TO_ZERO_r;
  reg   [4:0] rg_NVDLA_SDP_D_FEATURE_MODE_CFG_BATCH_NUMBER;
  reg   [4:0] reg_NVDLA_SDP_D_FEATURE_MODE_CFG_BATCH_NUMBER_next;
  reg   [4:0] l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_BATCH_NUMBER_r;
  reg   [31:0] l2d_NVDLA_SDP_D_FEATURE_MODE_CFG_r;
  reg  rg_NVDLA_SDP_D_DST_DMA_CFG_DST_RAM_TYPE;
  reg  reg_NVDLA_SDP_D_DST_DMA_CFG_DST_RAM_TYPE_next;
  reg  l2h_NVDLA_SDP_D_DST_DMA_CFG_DST_RAM_TYPE_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DST_DMA_CFG_r;
  reg   [31:0] rg_NVDLA_SDP_D_DST_BATCH_STRIDE_DST_BATCH_STRIDE;
  reg   [31:0] reg_NVDLA_SDP_D_DST_BATCH_STRIDE_DST_BATCH_STRIDE_next;
  reg   [31:0] l2h_NVDLA_SDP_D_DST_BATCH_STRIDE_DST_BATCH_STRIDE_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DST_BATCH_STRIDE_r;
  reg   [1:0] rg_NVDLA_SDP_D_DATA_FORMAT_PROC_PRECISION;
  reg   [1:0] reg_NVDLA_SDP_D_DATA_FORMAT_PROC_PRECISION_next;
  reg   [1:0] l2h_NVDLA_SDP_D_DATA_FORMAT_PROC_PRECISION_r;
  reg   [1:0] rg_NVDLA_SDP_D_DATA_FORMAT_OUT_PRECISION;
  reg   [1:0] reg_NVDLA_SDP_D_DATA_FORMAT_OUT_PRECISION_next;
  reg   [1:0] l2h_NVDLA_SDP_D_DATA_FORMAT_OUT_PRECISION_r;
  reg   [31:0] l2d_NVDLA_SDP_D_DATA_FORMAT_r;
  reg   [31:0] rg_NVDLA_SDP_D_CVT_OFFSET_CVT_OFFSET;
  reg   [31:0] reg_NVDLA_SDP_D_CVT_OFFSET_CVT_OFFSET_next;
  reg   [31:0] l2h_NVDLA_SDP_D_CVT_OFFSET_CVT_OFFSET_r;
  reg   [31:0] l2d_NVDLA_SDP_D_CVT_OFFSET_r;
  reg   [15:0] rg_NVDLA_SDP_D_CVT_SCALE_CVT_SCALE;
  reg   [15:0] reg_NVDLA_SDP_D_CVT_SCALE_CVT_SCALE_next;
  reg   [15:0] l2h_NVDLA_SDP_D_CVT_SCALE_CVT_SCALE_r;
  reg   [31:0] l2d_NVDLA_SDP_D_CVT_SCALE_r;
  reg   [5:0] rg_NVDLA_SDP_D_CVT_SHIFT_CVT_SHIFT;
  reg   [5:0] reg_NVDLA_SDP_D_CVT_SHIFT_CVT_SHIFT_next;
  reg   [5:0] l2h_NVDLA_SDP_D_CVT_SHIFT_CVT_SHIFT_r;
  reg   [31:0] l2d_NVDLA_SDP_D_CVT_SHIFT_r;
  reg  rg_NVDLA_SDP_D_STATUS_STATUS_UNEQUAL;
  reg   [31:0] l2d_NVDLA_SDP_D_STATUS_r;
  reg   [31:0] rg_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_STATUS_NAN_INPUT_NUM;
  reg   [31:0] l2d_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_r;
  reg   [31:0] rg_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_STATUS_INF_INPUT_NUM;
  reg   [31:0] l2d_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_r;
  reg   [31:0] rg_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_STATUS_NAN_OUTPUT_NUM;
  reg   [31:0] l2d_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_r;
  reg  rg_NVDLA_SDP_D_PERF_ENABLE_PERF_DMA_EN;
  reg  reg_NVDLA_SDP_D_PERF_ENABLE_PERF_DMA_EN_next;
  reg  l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_DMA_EN_r;
  reg  rg_NVDLA_SDP_D_PERF_ENABLE_PERF_LUT_EN;
  reg  reg_NVDLA_SDP_D_PERF_ENABLE_PERF_LUT_EN_next;
  reg  l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_LUT_EN_r;
  reg  rg_NVDLA_SDP_D_PERF_ENABLE_PERF_SAT_EN;
  reg  reg_NVDLA_SDP_D_PERF_ENABLE_PERF_SAT_EN_next;
  reg  l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_SAT_EN_r;
  reg  rg_NVDLA_SDP_D_PERF_ENABLE_PERF_NAN_INF_COUNT_EN;
  reg  reg_NVDLA_SDP_D_PERF_ENABLE_PERF_NAN_INF_COUNT_EN_next;
  reg  l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_NAN_INF_COUNT_EN_r;
  reg   [31:0] l2d_NVDLA_SDP_D_PERF_ENABLE_r;
  reg   [31:0] rg_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_WDMA_STALL;
  reg   [31:0] l2d_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_r;
  reg   [31:0] rg_NVDLA_SDP_D_PERF_LUT_UFLOW_LUT_UFLOW;
  reg   [31:0] l2d_NVDLA_SDP_D_PERF_LUT_UFLOW_r;
  reg   [31:0] rg_NVDLA_SDP_D_PERF_LUT_OFLOW_LUT_OFLOW;
  reg   [31:0] l2d_NVDLA_SDP_D_PERF_LUT_OFLOW_r;
  reg   [31:0] rg_NVDLA_SDP_D_PERF_OUT_SATURATION_OUT_SATURATION;
  reg   [31:0] l2d_NVDLA_SDP_D_PERF_OUT_SATURATION_r;
  reg   [31:0] rg_NVDLA_SDP_D_PERF_LUT_HYBRID_LUT_HYBRID;
  reg   [31:0] l2d_NVDLA_SDP_D_PERF_LUT_HYBRID_r;
  reg   [31:0] rg_NVDLA_SDP_D_PERF_LUT_LE_HIT_LUT_LE_HIT;
  reg   [31:0] l2d_NVDLA_SDP_D_PERF_LUT_LE_HIT_r;
  reg   [31:0] rg_NVDLA_SDP_D_PERF_LUT_LO_HIT_LUT_LO_HIT;
  reg   [31:0] l2d_NVDLA_SDP_D_PERF_LUT_LO_HIT_r;
  
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_LO_SLOPE_SCALE (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_r [15:0]  = rg_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_UFLOW_SCALE;
    l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_r [31:16]  = rg_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_OFLOW_SCALE;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_PERF_ENABLE (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_PERF_ENABLE_r = 32'b0;
    l2d_NVDLA_SDP_D_PERF_ENABLE_r [0]  = rg_NVDLA_SDP_D_PERF_ENABLE_PERF_DMA_EN;
    l2d_NVDLA_SDP_D_PERF_ENABLE_r [1]  = rg_NVDLA_SDP_D_PERF_ENABLE_PERF_LUT_EN;
    l2d_NVDLA_SDP_D_PERF_ENABLE_r [2]  = rg_NVDLA_SDP_D_PERF_ENABLE_PERF_SAT_EN;
    l2d_NVDLA_SDP_D_PERF_ENABLE_r [3]  = rg_NVDLA_SDP_D_PERF_ENABLE_PERF_NAN_INF_COUNT_EN;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_BN_MUL_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DP_BN_MUL_CFG_r = 32'b0;
    l2d_NVDLA_SDP_D_DP_BN_MUL_CFG_r [0]  = rg_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SRC;
    l2d_NVDLA_SDP_D_DP_BN_MUL_CFG_r [15:8]  = rg_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SHIFT_VALUE;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_PERF_LUT_LE_HIT (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_PERF_LUT_LE_HIT_r = rg_NVDLA_SDP_D_PERF_LUT_LE_HIT_LUT_LE_HIT;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_r = 32'b0;
    l2d_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_r [15:0]  = rg_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_BS_MUL_OPERAND;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_PERF_LUT_HYBRID
  always @ (*) begin
    rg_NVDLA_SDP_D_PERF_LUT_HYBRID_LUT_HYBRID =  h2l_NVDLA_SDP_D_PERF_LUT_HYBRID_LUT_HYBRID_w;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_PERF_LUT_LO_HIT (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_PERF_LUT_LO_HIT_r = rg_NVDLA_SDP_D_PERF_LUT_LO_HIT_LUT_LO_HIT;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_ACCESS_CFG
  always @ (*) begin
    reg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ADDR_next = rg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ADDR;
    l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ADDR_r = rg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ADDR;
    reg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_TABLE_ID_next = rg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_TABLE_ID;
    l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_TABLE_ID_r = rg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_TABLE_ID;
    reg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ACCESS_TYPE_next = rg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ACCESS_TYPE;
    l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ACCESS_TYPE_r = rg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ACCESS_TYPE;
    if (d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_we) reg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ADDR_next = d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_w [9:0] ;
    if (d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_we) reg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_TABLE_ID_next = d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_w [16] ;
    if (d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_we) reg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ACCESS_TYPE_next = d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_w [17] ;
  end
  
  //------- reg assigns for NVDLA_SDP_S_LUT_ACCESS_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ADDR <= #1 10'h0;
      rg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_TABLE_ID <= #1 1'h0;
      rg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ACCESS_TYPE <= #1 1'h0;
    end
    else begin
      rg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ADDR <= #1  reg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ADDR_next;
      rg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_TABLE_ID <= #1  reg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_TABLE_ID_next;
      rg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ACCESS_TYPE <= #1  reg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ACCESS_TYPE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_PERF_LUT_LE_HIT
  always @ (*) begin
    rg_NVDLA_SDP_D_PERF_LUT_LE_HIT_LUT_LE_HIT =  h2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_LUT_LE_HIT_w;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DATA_CUBE_HEIGHT (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DATA_CUBE_HEIGHT_r = 32'b0;
    l2d_NVDLA_SDP_D_DATA_CUBE_HEIGHT_r [12:0]  = rg_NVDLA_SDP_D_DATA_CUBE_HEIGHT_HEIGHT;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE
  always @ (*) begin
    reg_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_EW_MUL_OPERAND_next = rg_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_EW_MUL_OPERAND;
    l2h_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_EW_MUL_OPERAND_r = rg_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_EW_MUL_OPERAND;
    if (d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_we) reg_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_EW_MUL_OPERAND_next = d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_w;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_EW_MUL_OPERAND <= #1 32'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_EW_MUL_OPERAND <= #1  reg_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_EW_MUL_OPERAND_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_BS_ALU_CFG
  always @ (*) begin
    reg_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SRC_next = rg_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SRC;
    l2h_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SRC_r = rg_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SRC;
    reg_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SHIFT_VALUE_next = rg_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SHIFT_VALUE;
    l2h_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SHIFT_VALUE_r = rg_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SHIFT_VALUE;
    if (d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_we) reg_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SRC_next = d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_w [0] ;
    if (d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_we) reg_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SHIFT_VALUE_next = d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_w [13:8] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DP_BS_ALU_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SRC <= #1 1'h0;
      rg_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SHIFT_VALUE <= #1 6'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SRC <= #1  reg_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SRC_next;
      rg_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SHIFT_VALUE <= #1  reg_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SHIFT_VALUE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_LO_END
  always @ (*) begin
    reg_NVDLA_SDP_S_LUT_LO_END_LUT_LO_END_next = rg_NVDLA_SDP_S_LUT_LO_END_LUT_LO_END;
    l2h_NVDLA_SDP_S_LUT_LO_END_LUT_LO_END_r = rg_NVDLA_SDP_S_LUT_LO_END_LUT_LO_END;
    if (d2l_NVDLA_SDP_S_LUT_LO_END_we) reg_NVDLA_SDP_S_LUT_LO_END_LUT_LO_END_next = d2l_NVDLA_SDP_S_LUT_LO_END_w;
  end
  
  //------- reg assigns for NVDLA_SDP_S_LUT_LO_END
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_S_LUT_LO_END_LUT_LO_END <= #1 32'h0;
    end
    else begin
      rg_NVDLA_SDP_S_LUT_LO_END_LUT_LO_END <= #1  reg_NVDLA_SDP_S_LUT_LO_END_LUT_LO_END_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_POINTER
  always @ (*) begin
    reg_NVDLA_SDP_S_POINTER_PRODUCER_next = rg_NVDLA_SDP_S_POINTER_PRODUCER;
    l2h_NVDLA_SDP_S_POINTER_PRODUCER_r = rg_NVDLA_SDP_S_POINTER_PRODUCER;
    rg_NVDLA_SDP_S_POINTER_CONSUMER =  h2l_NVDLA_SDP_S_POINTER_CONSUMER_w;
    if (d2l_NVDLA_SDP_S_POINTER_we) reg_NVDLA_SDP_S_POINTER_PRODUCER_next = d2l_NVDLA_SDP_S_POINTER_w [0] ;
  end
  
  //------- reg assigns for NVDLA_SDP_S_POINTER
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_S_POINTER_PRODUCER <= #1 1'h0;
    end
    else begin
      rg_NVDLA_SDP_S_POINTER_PRODUCER <= #1  reg_NVDLA_SDP_S_POINTER_PRODUCER_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_LE_SLOPE_SCALE (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_r [15:0]  = rg_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_UFLOW_SCALE;
    l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_r [31:16]  = rg_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_OFLOW_SCALE;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_CVT_SCALE (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_CVT_SCALE_r = 32'b0;
    l2d_NVDLA_SDP_D_CVT_SCALE_r [15:0]  = rg_NVDLA_SDP_D_CVT_SCALE_CVT_SCALE;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DATA_FORMAT
  always @ (*) begin
    reg_NVDLA_SDP_D_DATA_FORMAT_PROC_PRECISION_next = rg_NVDLA_SDP_D_DATA_FORMAT_PROC_PRECISION;
    l2h_NVDLA_SDP_D_DATA_FORMAT_PROC_PRECISION_r = rg_NVDLA_SDP_D_DATA_FORMAT_PROC_PRECISION;
    reg_NVDLA_SDP_D_DATA_FORMAT_OUT_PRECISION_next = rg_NVDLA_SDP_D_DATA_FORMAT_OUT_PRECISION;
    l2h_NVDLA_SDP_D_DATA_FORMAT_OUT_PRECISION_r = rg_NVDLA_SDP_D_DATA_FORMAT_OUT_PRECISION;
    if (d2l_NVDLA_SDP_D_DATA_FORMAT_we) reg_NVDLA_SDP_D_DATA_FORMAT_PROC_PRECISION_next = d2l_NVDLA_SDP_D_DATA_FORMAT_w [1:0] ;
    if (d2l_NVDLA_SDP_D_DATA_FORMAT_we) reg_NVDLA_SDP_D_DATA_FORMAT_OUT_PRECISION_next = d2l_NVDLA_SDP_D_DATA_FORMAT_w [3:2] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DATA_FORMAT
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DATA_FORMAT_PROC_PRECISION <= #1 2'h0;
      rg_NVDLA_SDP_D_DATA_FORMAT_OUT_PRECISION <= #1 2'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DATA_FORMAT_PROC_PRECISION <= #1  reg_NVDLA_SDP_D_DATA_FORMAT_PROC_PRECISION_next;
      rg_NVDLA_SDP_D_DATA_FORMAT_OUT_PRECISION <= #1  reg_NVDLA_SDP_D_DATA_FORMAT_OUT_PRECISION_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DST_SURFACE_STRIDE (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DST_SURFACE_STRIDE_r = rg_NVDLA_SDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_CVT_OFFSET (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_CVT_OFFSET_r = rg_NVDLA_SDP_D_CVT_OFFSET_CVT_OFFSET;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_OP_ENABLE
  always @ (*) begin
    reg_NVDLA_SDP_D_OP_ENABLE_OP_EN_next = rg_NVDLA_SDP_D_OP_ENABLE_OP_EN;
    l2h_NVDLA_SDP_D_OP_ENABLE_OP_EN_r = rg_NVDLA_SDP_D_OP_ENABLE_OP_EN;
    if (d2l_NVDLA_SDP_D_OP_ENABLE_we) reg_NVDLA_SDP_D_OP_ENABLE_OP_EN_next = d2l_NVDLA_SDP_D_OP_ENABLE_w [0] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_OP_ENABLE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_OP_ENABLE_OP_EN <= #1 1'h0;
    end
    else begin
      rg_NVDLA_SDP_D_OP_ENABLE_OP_EN <= #1  reg_NVDLA_SDP_D_OP_ENABLE_OP_EN_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_r = 32'b0;
    l2d_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_r [15:0]  = rg_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_BN_ALU_OPERAND;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_LO_SLOPE_SCALE
  always @ (*) begin
    reg_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_UFLOW_SCALE_next = rg_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_UFLOW_SCALE;
    l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_UFLOW_SCALE_r = rg_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_UFLOW_SCALE;
    reg_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_OFLOW_SCALE_next = rg_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_OFLOW_SCALE;
    l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_OFLOW_SCALE_r = rg_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_OFLOW_SCALE;
    if (d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_we) reg_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_UFLOW_SCALE_next = d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_w [15:0] ;
    if (d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_we) reg_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_OFLOW_SCALE_next = d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_w [31:16] ;
  end
  
  //------- reg assigns for NVDLA_SDP_S_LUT_LO_SLOPE_SCALE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_UFLOW_SCALE <= #1 16'h0;
      rg_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_OFLOW_SCALE <= #1 16'h0;
    end
    else begin
      rg_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_UFLOW_SCALE <= #1  reg_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_UFLOW_SCALE_next;
      rg_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_OFLOW_SCALE <= #1  reg_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_OFLOW_SCALE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_BS_MUL_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DP_BS_MUL_CFG_r = 32'b0;
    l2d_NVDLA_SDP_D_DP_BS_MUL_CFG_r [0]  = rg_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SRC;
    l2d_NVDLA_SDP_D_DP_BS_MUL_CFG_r [15:8]  = rg_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SHIFT_VALUE;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_PERF_LUT_OFLOW (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_PERF_LUT_OFLOW_r = rg_NVDLA_SDP_D_PERF_LUT_OFLOW_LUT_OFLOW;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DST_DMA_CFG
  always @ (*) begin
    reg_NVDLA_SDP_D_DST_DMA_CFG_DST_RAM_TYPE_next = rg_NVDLA_SDP_D_DST_DMA_CFG_DST_RAM_TYPE;
    l2h_NVDLA_SDP_D_DST_DMA_CFG_DST_RAM_TYPE_r = rg_NVDLA_SDP_D_DST_DMA_CFG_DST_RAM_TYPE;
    if (d2l_NVDLA_SDP_D_DST_DMA_CFG_we) reg_NVDLA_SDP_D_DST_DMA_CFG_DST_RAM_TYPE_next = d2l_NVDLA_SDP_D_DST_DMA_CFG_w [0] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DST_DMA_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DST_DMA_CFG_DST_RAM_TYPE <= #1 1'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DST_DMA_CFG_DST_RAM_TYPE <= #1  reg_NVDLA_SDP_D_DST_DMA_CFG_DST_RAM_TYPE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DATA_CUBE_CHANNEL
  always @ (*) begin
    reg_NVDLA_SDP_D_DATA_CUBE_CHANNEL_CHANNEL_next = rg_NVDLA_SDP_D_DATA_CUBE_CHANNEL_CHANNEL;
    l2h_NVDLA_SDP_D_DATA_CUBE_CHANNEL_CHANNEL_r = rg_NVDLA_SDP_D_DATA_CUBE_CHANNEL_CHANNEL;
    if (d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_we) reg_NVDLA_SDP_D_DATA_CUBE_CHANNEL_CHANNEL_next = d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_w [12:0] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DATA_CUBE_CHANNEL
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DATA_CUBE_CHANNEL_CHANNEL <= #1 13'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DATA_CUBE_CHANNEL_CHANNEL <= #1  reg_NVDLA_SDP_D_DATA_CUBE_CHANNEL_CHANNEL_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_STATUS (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_STATUS_r = 32'b0;
    l2d_NVDLA_SDP_D_STATUS_r [0]  = rg_NVDLA_SDP_D_STATUS_STATUS_UNEQUAL;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_STATUS (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_S_STATUS_r = 32'b0;
    l2d_NVDLA_SDP_S_STATUS_r [1:0]  = rg_NVDLA_SDP_S_STATUS_STATUS_0;
    l2d_NVDLA_SDP_S_STATUS_r [17:16]  = rg_NVDLA_SDP_S_STATUS_STATUS_1;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_r = 32'b0;
    l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_r [15:0]  = rg_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_EW_ALU_CVT_SCALE;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_PERF_LUT_HYBRID (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_PERF_LUT_HYBRID_r = rg_NVDLA_SDP_D_PERF_LUT_HYBRID_LUT_HYBRID;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_MUL_CFG
  always @ (*) begin
    reg_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_SRC_next = rg_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_SRC;
    l2h_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_SRC_r = rg_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_SRC;
    reg_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_CVT_BYPASS_next = rg_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_CVT_BYPASS;
    l2h_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_CVT_BYPASS_r = rg_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_CVT_BYPASS;
    if (d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_we) reg_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_SRC_next = d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_w [0] ;
    if (d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_we) reg_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_CVT_BYPASS_next = d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_w [1] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DP_EW_MUL_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_SRC <= #1 1'h0;
      rg_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_CVT_BYPASS <= #1 1'h1;
    end
    else begin
      rg_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_SRC <= #1  reg_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_SRC_next;
      rg_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_CVT_BYPASS <= #1  reg_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_CVT_BYPASS_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_r = 32'b0;
    l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_r [4:0]  = rg_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_UFLOW_SHIFT;
    l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_r [9:5]  = rg_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_OFLOW_SHIFT;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_PERF_WDMA_WRITE_STALL (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_r = rg_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_WDMA_STALL;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_PERF_LUT_UFLOW
  always @ (*) begin
    rg_NVDLA_SDP_D_PERF_LUT_UFLOW_LUT_UFLOW =  h2l_NVDLA_SDP_D_PERF_LUT_UFLOW_LUT_UFLOW_w;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE
  always @ (*) begin
    reg_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_EW_MUL_CVT_OFFSET_next = rg_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_EW_MUL_CVT_OFFSET;
    l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_EW_MUL_CVT_OFFSET_r = rg_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_EW_MUL_CVT_OFFSET;
    if (d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_we) reg_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_EW_MUL_CVT_OFFSET_next = d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_w;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_EW_MUL_CVT_OFFSET <= #1 32'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_EW_MUL_CVT_OFFSET <= #1  reg_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_EW_MUL_CVT_OFFSET_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_LE_START (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_S_LUT_LE_START_r = rg_NVDLA_SDP_S_LUT_LE_START_LUT_LE_START;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_FEATURE_MODE_CFG
  always @ (*) begin
    reg_NVDLA_SDP_D_FEATURE_MODE_CFG_FLYING_MODE_next = rg_NVDLA_SDP_D_FEATURE_MODE_CFG_FLYING_MODE;
    l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_FLYING_MODE_r = rg_NVDLA_SDP_D_FEATURE_MODE_CFG_FLYING_MODE;
    reg_NVDLA_SDP_D_FEATURE_MODE_CFG_OUTPUT_DST_next = rg_NVDLA_SDP_D_FEATURE_MODE_CFG_OUTPUT_DST;
    l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_OUTPUT_DST_r = rg_NVDLA_SDP_D_FEATURE_MODE_CFG_OUTPUT_DST;
    reg_NVDLA_SDP_D_FEATURE_MODE_CFG_WINOGRAD_next = rg_NVDLA_SDP_D_FEATURE_MODE_CFG_WINOGRAD;
    l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_WINOGRAD_r = rg_NVDLA_SDP_D_FEATURE_MODE_CFG_WINOGRAD;
    reg_NVDLA_SDP_D_FEATURE_MODE_CFG_NAN_TO_ZERO_next = rg_NVDLA_SDP_D_FEATURE_MODE_CFG_NAN_TO_ZERO;
    l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_NAN_TO_ZERO_r = rg_NVDLA_SDP_D_FEATURE_MODE_CFG_NAN_TO_ZERO;
    reg_NVDLA_SDP_D_FEATURE_MODE_CFG_BATCH_NUMBER_next = rg_NVDLA_SDP_D_FEATURE_MODE_CFG_BATCH_NUMBER;
    l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_BATCH_NUMBER_r = rg_NVDLA_SDP_D_FEATURE_MODE_CFG_BATCH_NUMBER;
    if (d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_we) reg_NVDLA_SDP_D_FEATURE_MODE_CFG_FLYING_MODE_next = d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_w [0] ;
    if (d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_we) reg_NVDLA_SDP_D_FEATURE_MODE_CFG_OUTPUT_DST_next = d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_w [1] ;
    if (d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_we) reg_NVDLA_SDP_D_FEATURE_MODE_CFG_WINOGRAD_next = d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_w [2] ;
    if (d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_we) reg_NVDLA_SDP_D_FEATURE_MODE_CFG_NAN_TO_ZERO_next = d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_w [3] ;
    if (d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_we) reg_NVDLA_SDP_D_FEATURE_MODE_CFG_BATCH_NUMBER_next = d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_w [12:8] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_FEATURE_MODE_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_FEATURE_MODE_CFG_FLYING_MODE <= #1 1'h0;
      rg_NVDLA_SDP_D_FEATURE_MODE_CFG_OUTPUT_DST <= #1 1'h0;
      rg_NVDLA_SDP_D_FEATURE_MODE_CFG_WINOGRAD <= #1 1'h0;
      rg_NVDLA_SDP_D_FEATURE_MODE_CFG_NAN_TO_ZERO <= #1 1'h0;
      rg_NVDLA_SDP_D_FEATURE_MODE_CFG_BATCH_NUMBER <= #1 5'h0;
    end
    else begin
      rg_NVDLA_SDP_D_FEATURE_MODE_CFG_FLYING_MODE <= #1  reg_NVDLA_SDP_D_FEATURE_MODE_CFG_FLYING_MODE_next;
      rg_NVDLA_SDP_D_FEATURE_MODE_CFG_OUTPUT_DST <= #1  reg_NVDLA_SDP_D_FEATURE_MODE_CFG_OUTPUT_DST_next;
      rg_NVDLA_SDP_D_FEATURE_MODE_CFG_WINOGRAD <= #1  reg_NVDLA_SDP_D_FEATURE_MODE_CFG_WINOGRAD_next;
      rg_NVDLA_SDP_D_FEATURE_MODE_CFG_NAN_TO_ZERO <= #1  reg_NVDLA_SDP_D_FEATURE_MODE_CFG_NAN_TO_ZERO_next;
      rg_NVDLA_SDP_D_FEATURE_MODE_CFG_BATCH_NUMBER <= #1  reg_NVDLA_SDP_D_FEATURE_MODE_CFG_BATCH_NUMBER_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_r = 32'b0;
    l2d_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_r [15:0]  = rg_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_BS_ALU_OPERAND;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_r = 32'b0;
    l2d_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_r [15:0]  = rg_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_BN_MUL_OPERAND;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_r = 32'b0;
    l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_r [4:0]  = rg_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_UFLOW_SHIFT;
    l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_r [9:5]  = rg_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_OFLOW_SHIFT;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_LE_START
  always @ (*) begin
    reg_NVDLA_SDP_S_LUT_LE_START_LUT_LE_START_next = rg_NVDLA_SDP_S_LUT_LE_START_LUT_LE_START;
    l2h_NVDLA_SDP_S_LUT_LE_START_LUT_LE_START_r = rg_NVDLA_SDP_S_LUT_LE_START_LUT_LE_START;
    if (d2l_NVDLA_SDP_S_LUT_LE_START_we) reg_NVDLA_SDP_S_LUT_LE_START_LUT_LE_START_next = d2l_NVDLA_SDP_S_LUT_LE_START_w;
  end
  
  //------- reg assigns for NVDLA_SDP_S_LUT_LE_START
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_S_LUT_LE_START_LUT_LE_START <= #1 32'h0;
    end
    else begin
      rg_NVDLA_SDP_S_LUT_LE_START_LUT_LE_START <= #1  reg_NVDLA_SDP_S_LUT_LE_START_LUT_LE_START_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_ACCESS_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_S_LUT_ACCESS_CFG_r = 32'b0;
    l2d_NVDLA_SDP_S_LUT_ACCESS_CFG_r [9:0]  = rg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ADDR;
    l2d_NVDLA_SDP_S_LUT_ACCESS_CFG_r [16]  = rg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_TABLE_ID;
    l2d_NVDLA_SDP_S_LUT_ACCESS_CFG_r [17]  = rg_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ACCESS_TYPE;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_STATUS_INF_INPUT_NUM
  always @ (*) begin
    rg_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_STATUS_INF_INPUT_NUM =  h2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_STATUS_INF_INPUT_NUM_w;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_BN_MUL_CFG
  always @ (*) begin
    reg_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SRC_next = rg_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SRC;
    l2h_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SRC_r = rg_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SRC;
    reg_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SHIFT_VALUE_next = rg_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SHIFT_VALUE;
    l2h_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SHIFT_VALUE_r = rg_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SHIFT_VALUE;
    if (d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_we) reg_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SRC_next = d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_w [0] ;
    if (d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_we) reg_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SHIFT_VALUE_next = d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_w [15:8] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DP_BN_MUL_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SRC <= #1 1'h0;
      rg_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SHIFT_VALUE <= #1 8'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SRC <= #1  reg_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SRC_next;
      rg_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SHIFT_VALUE <= #1  reg_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SHIFT_VALUE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_r = 32'b0;
    l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_r [15:0]  = rg_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_EW_MUL_CVT_SCALE;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_STATUS
  always @ (*) begin
    rg_NVDLA_SDP_D_STATUS_STATUS_UNEQUAL =  h2l_NVDLA_SDP_D_STATUS_STATUS_UNEQUAL_w;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_r = rg_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_EW_ALU_CVT_OFFSET;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE
  always @ (*) begin
    reg_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_EW_MUL_CVT_SCALE_next = rg_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_EW_MUL_CVT_SCALE;
    l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_EW_MUL_CVT_SCALE_r = rg_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_EW_MUL_CVT_SCALE;
    if (d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_we) reg_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_EW_MUL_CVT_SCALE_next = d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_w [15:0] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_EW_MUL_CVT_SCALE <= #1 16'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_EW_MUL_CVT_SCALE <= #1  reg_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_EW_MUL_CVT_SCALE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_INFO
  always @ (*) begin
    reg_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_OFFSET_next = rg_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_OFFSET;
    l2h_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_OFFSET_r = rg_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_OFFSET;
    reg_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_SELECT_next = rg_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_SELECT;
    l2h_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_SELECT_r = rg_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_SELECT;
    reg_NVDLA_SDP_S_LUT_INFO_LUT_LO_INDEX_SELECT_next = rg_NVDLA_SDP_S_LUT_INFO_LUT_LO_INDEX_SELECT;
    l2h_NVDLA_SDP_S_LUT_INFO_LUT_LO_INDEX_SELECT_r = rg_NVDLA_SDP_S_LUT_INFO_LUT_LO_INDEX_SELECT;
    if (d2l_NVDLA_SDP_S_LUT_INFO_we) reg_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_OFFSET_next = d2l_NVDLA_SDP_S_LUT_INFO_w [7:0] ;
    if (d2l_NVDLA_SDP_S_LUT_INFO_we) reg_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_SELECT_next = d2l_NVDLA_SDP_S_LUT_INFO_w [15:8] ;
    if (d2l_NVDLA_SDP_S_LUT_INFO_we) reg_NVDLA_SDP_S_LUT_INFO_LUT_LO_INDEX_SELECT_next = d2l_NVDLA_SDP_S_LUT_INFO_w [23:16] ;
  end
  
  //------- reg assigns for NVDLA_SDP_S_LUT_INFO
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_OFFSET <= #1 8'h0;
      rg_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_SELECT <= #1 8'h0;
      rg_NVDLA_SDP_S_LUT_INFO_LUT_LO_INDEX_SELECT <= #1 8'h0;
    end
    else begin
      rg_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_OFFSET <= #1  reg_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_OFFSET_next;
      rg_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_SELECT <= #1  reg_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_SELECT_next;
      rg_NVDLA_SDP_S_LUT_INFO_LUT_LO_INDEX_SELECT <= #1  reg_NVDLA_SDP_S_LUT_INFO_LUT_LO_INDEX_SELECT_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_CVT_SHIFT (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_CVT_SHIFT_r = 32'b0;
    l2d_NVDLA_SDP_D_CVT_SHIFT_r [5:0]  = rg_NVDLA_SDP_D_CVT_SHIFT_CVT_SHIFT;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE
  always @ (*) begin
    reg_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_BN_ALU_OPERAND_next = rg_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_BN_ALU_OPERAND;
    l2h_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_BN_ALU_OPERAND_r = rg_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_BN_ALU_OPERAND;
    if (d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_we) reg_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_BN_ALU_OPERAND_next = d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_w [15:0] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_BN_ALU_OPERAND <= #1 16'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_BN_ALU_OPERAND <= #1  reg_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_BN_ALU_OPERAND_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_POINTER (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_S_POINTER_r = 32'b0;
    l2d_NVDLA_SDP_S_POINTER_r [0]  = rg_NVDLA_SDP_S_POINTER_PRODUCER;
    l2d_NVDLA_SDP_S_POINTER_r [16]  = rg_NVDLA_SDP_S_POINTER_CONSUMER;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_r = rg_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_EW_ALU_OPERAND;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DATA_CUBE_CHANNEL (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DATA_CUBE_CHANNEL_r = 32'b0;
    l2d_NVDLA_SDP_D_DATA_CUBE_CHANNEL_r [12:0]  = rg_NVDLA_SDP_D_DATA_CUBE_CHANNEL_CHANNEL;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_BN_ALU_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DP_BN_ALU_CFG_r = 32'b0;
    l2d_NVDLA_SDP_D_DP_BN_ALU_CFG_r [0]  = rg_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SRC;
    l2d_NVDLA_SDP_D_DP_BN_ALU_CFG_r [13:8]  = rg_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SHIFT_VALUE;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT
  always @ (*) begin
    reg_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_UFLOW_SHIFT_next = rg_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_UFLOW_SHIFT;
    l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_UFLOW_SHIFT_r = rg_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_UFLOW_SHIFT;
    reg_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_OFLOW_SHIFT_next = rg_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_OFLOW_SHIFT;
    l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_OFLOW_SHIFT_r = rg_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_OFLOW_SHIFT;
    if (d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_we) reg_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_UFLOW_SHIFT_next = d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_w [4:0] ;
    if (d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_we) reg_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_OFLOW_SHIFT_next = d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_w [9:5] ;
  end
  
  //------- reg assigns for NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_UFLOW_SHIFT <= #1 5'h0;
      rg_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_OFLOW_SHIFT <= #1 5'h0;
    end
    else begin
      rg_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_UFLOW_SHIFT <= #1  reg_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_UFLOW_SHIFT_next;
      rg_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_OFLOW_SHIFT <= #1  reg_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_OFLOW_SHIFT_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DST_BATCH_STRIDE
  always @ (*) begin
    reg_NVDLA_SDP_D_DST_BATCH_STRIDE_DST_BATCH_STRIDE_next = rg_NVDLA_SDP_D_DST_BATCH_STRIDE_DST_BATCH_STRIDE;
    l2h_NVDLA_SDP_D_DST_BATCH_STRIDE_DST_BATCH_STRIDE_r = rg_NVDLA_SDP_D_DST_BATCH_STRIDE_DST_BATCH_STRIDE;
    if (d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_we) reg_NVDLA_SDP_D_DST_BATCH_STRIDE_DST_BATCH_STRIDE_next = d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_w;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DST_BATCH_STRIDE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DST_BATCH_STRIDE_DST_BATCH_STRIDE <= #1 32'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DST_BATCH_STRIDE_DST_BATCH_STRIDE <= #1  reg_NVDLA_SDP_D_DST_BATCH_STRIDE_DST_BATCH_STRIDE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_CVT_OFFSET
  always @ (*) begin
    reg_NVDLA_SDP_D_CVT_OFFSET_CVT_OFFSET_next = rg_NVDLA_SDP_D_CVT_OFFSET_CVT_OFFSET;
    l2h_NVDLA_SDP_D_CVT_OFFSET_CVT_OFFSET_r = rg_NVDLA_SDP_D_CVT_OFFSET_CVT_OFFSET;
    if (d2l_NVDLA_SDP_D_CVT_OFFSET_we) reg_NVDLA_SDP_D_CVT_OFFSET_CVT_OFFSET_next = d2l_NVDLA_SDP_D_CVT_OFFSET_w;
  end
  
  //------- reg assigns for NVDLA_SDP_D_CVT_OFFSET
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_CVT_OFFSET_CVT_OFFSET <= #1 32'h0;
    end
    else begin
      rg_NVDLA_SDP_D_CVT_OFFSET_CVT_OFFSET <= #1  reg_NVDLA_SDP_D_CVT_OFFSET_CVT_OFFSET_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_PERF_OUT_SATURATION (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_PERF_OUT_SATURATION_r = rg_NVDLA_SDP_D_PERF_OUT_SATURATION_OUT_SATURATION;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_ALU_CFG
  always @ (*) begin
    reg_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_SRC_next = rg_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_SRC;
    l2h_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_SRC_r = rg_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_SRC;
    reg_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_CVT_BYPASS_next = rg_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_CVT_BYPASS;
    l2h_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_CVT_BYPASS_r = rg_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_CVT_BYPASS;
    if (d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_we) reg_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_SRC_next = d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_w [0] ;
    if (d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_we) reg_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_CVT_BYPASS_next = d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_w [1] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DP_EW_ALU_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_SRC <= #1 1'h0;
      rg_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_CVT_BYPASS <= #1 1'h1;
    end
    else begin
      rg_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_SRC <= #1  reg_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_SRC_next;
      rg_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_CVT_BYPASS <= #1  reg_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_CVT_BYPASS_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_BN_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DP_BN_CFG_r = 32'b0;
    l2d_NVDLA_SDP_D_DP_BN_CFG_r [0]  = rg_NVDLA_SDP_D_DP_BN_CFG_BN_BYPASS;
    l2d_NVDLA_SDP_D_DP_BN_CFG_r [1]  = rg_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_BYPASS;
    l2d_NVDLA_SDP_D_DP_BN_CFG_r [3:2]  = rg_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_ALGO;
    l2d_NVDLA_SDP_D_DP_BN_CFG_r [4]  = rg_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_BYPASS;
    l2d_NVDLA_SDP_D_DP_BN_CFG_r [5]  = rg_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_PRELU;
    l2d_NVDLA_SDP_D_DP_BN_CFG_r [6]  = rg_NVDLA_SDP_D_DP_BN_CFG_BN_RELU_BYPASS;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_BS_ALU_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DP_BS_ALU_CFG_r = 32'b0;
    l2d_NVDLA_SDP_D_DP_BS_ALU_CFG_r [0]  = rg_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SRC;
    l2d_NVDLA_SDP_D_DP_BS_ALU_CFG_r [13:8]  = rg_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SHIFT_VALUE;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE
  always @ (*) begin
    reg_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_BN_MUL_OPERAND_next = rg_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_BN_MUL_OPERAND;
    l2h_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_BN_MUL_OPERAND_r = rg_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_BN_MUL_OPERAND;
    if (d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_we) reg_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_BN_MUL_OPERAND_next = d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_w [15:0] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_BN_MUL_OPERAND <= #1 16'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_BN_MUL_OPERAND <= #1  reg_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_BN_MUL_OPERAND_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DP_EW_CFG_r = 32'b0;
    l2d_NVDLA_SDP_D_DP_EW_CFG_r [0]  = rg_NVDLA_SDP_D_DP_EW_CFG_EW_BYPASS;
    l2d_NVDLA_SDP_D_DP_EW_CFG_r [1]  = rg_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_BYPASS;
    l2d_NVDLA_SDP_D_DP_EW_CFG_r [3:2]  = rg_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_ALGO;
    l2d_NVDLA_SDP_D_DP_EW_CFG_r [4]  = rg_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_BYPASS;
    l2d_NVDLA_SDP_D_DP_EW_CFG_r [5]  = rg_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_PRELU;
    l2d_NVDLA_SDP_D_DP_EW_CFG_r [6]  = rg_NVDLA_SDP_D_DP_EW_CFG_EW_LUT_BYPASS;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DST_BASE_ADDR_HIGH (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_r = rg_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE
  always @ (*) begin
    reg_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_EW_MUL_CVT_TRUNCATE_next = rg_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_EW_MUL_CVT_TRUNCATE;
    l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_EW_MUL_CVT_TRUNCATE_r = rg_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_EW_MUL_CVT_TRUNCATE;
    if (d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_we) reg_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_EW_MUL_CVT_TRUNCATE_next = d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_w [5:0] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_EW_MUL_CVT_TRUNCATE <= #1 6'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_EW_MUL_CVT_TRUNCATE <= #1  reg_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_EW_MUL_CVT_TRUNCATE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DST_LINE_STRIDE (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DST_LINE_STRIDE_r = rg_NVDLA_SDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_PERF_LUT_OFLOW
  always @ (*) begin
    rg_NVDLA_SDP_D_PERF_LUT_OFLOW_LUT_OFLOW =  h2l_NVDLA_SDP_D_PERF_LUT_OFLOW_LUT_OFLOW_w;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE
  always @ (*) begin
    reg_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_EW_ALU_CVT_OFFSET_next = rg_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_EW_ALU_CVT_OFFSET;
    l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_EW_ALU_CVT_OFFSET_r = rg_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_EW_ALU_CVT_OFFSET;
    if (d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_we) reg_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_EW_ALU_CVT_OFFSET_next = d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_w;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_EW_ALU_CVT_OFFSET <= #1 32'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_EW_ALU_CVT_OFFSET <= #1  reg_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_EW_ALU_CVT_OFFSET_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM
  always @ (*) begin
    rg_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_STATUS_NAN_OUTPUT_NUM =  h2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_STATUS_NAN_OUTPUT_NUM_w;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_PERF_LUT_UFLOW (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_PERF_LUT_UFLOW_r = rg_NVDLA_SDP_D_PERF_LUT_UFLOW_LUT_UFLOW;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_PERF_LUT_LO_HIT
  always @ (*) begin
    rg_NVDLA_SDP_D_PERF_LUT_LO_HIT_LUT_LO_HIT =  h2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_LUT_LO_HIT_w;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DST_SURFACE_STRIDE
  always @ (*) begin
    reg_NVDLA_SDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_next = rg_NVDLA_SDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE;
    l2h_NVDLA_SDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_r = rg_NVDLA_SDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE;
    if (d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_we) reg_NVDLA_SDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_next = d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_w;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DST_SURFACE_STRIDE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE <= #1 32'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE <= #1  reg_NVDLA_SDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE
  always @ (*) begin
    reg_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_EW_TRUNCATE_next = rg_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_EW_TRUNCATE;
    l2h_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_EW_TRUNCATE_r = rg_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_EW_TRUNCATE;
    if (d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_we) reg_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_EW_TRUNCATE_next = d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_w [9:0] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_EW_TRUNCATE <= #1 10'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_EW_TRUNCATE <= #1  reg_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_EW_TRUNCATE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_CVT_SHIFT
  always @ (*) begin
    reg_NVDLA_SDP_D_CVT_SHIFT_CVT_SHIFT_next = rg_NVDLA_SDP_D_CVT_SHIFT_CVT_SHIFT;
    l2h_NVDLA_SDP_D_CVT_SHIFT_CVT_SHIFT_r = rg_NVDLA_SDP_D_CVT_SHIFT_CVT_SHIFT;
    if (d2l_NVDLA_SDP_D_CVT_SHIFT_we) reg_NVDLA_SDP_D_CVT_SHIFT_CVT_SHIFT_next = d2l_NVDLA_SDP_D_CVT_SHIFT_w [5:0] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_CVT_SHIFT
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_CVT_SHIFT_CVT_SHIFT <= #1 6'h0;
    end
    else begin
      rg_NVDLA_SDP_D_CVT_SHIFT_CVT_SHIFT <= #1  reg_NVDLA_SDP_D_CVT_SHIFT_CVT_SHIFT_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_CVT_SCALE
  always @ (*) begin
    reg_NVDLA_SDP_D_CVT_SCALE_CVT_SCALE_next = rg_NVDLA_SDP_D_CVT_SCALE_CVT_SCALE;
    l2h_NVDLA_SDP_D_CVT_SCALE_CVT_SCALE_r = rg_NVDLA_SDP_D_CVT_SCALE_CVT_SCALE;
    if (d2l_NVDLA_SDP_D_CVT_SCALE_we) reg_NVDLA_SDP_D_CVT_SCALE_CVT_SCALE_next = d2l_NVDLA_SDP_D_CVT_SCALE_w [15:0] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_CVT_SCALE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_CVT_SCALE_CVT_SCALE <= #1 16'h0;
    end
    else begin
      rg_NVDLA_SDP_D_CVT_SCALE_CVT_SCALE <= #1  reg_NVDLA_SDP_D_CVT_SCALE_CVT_SCALE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DST_BASE_ADDR_LOW
  always @ (*) begin
    reg_NVDLA_SDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_next = rg_NVDLA_SDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW;
    l2h_NVDLA_SDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_r = rg_NVDLA_SDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW;
    if (d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_we) reg_NVDLA_SDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_next = d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_w;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DST_BASE_ADDR_LOW
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW <= #1 32'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW <= #1  reg_NVDLA_SDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE
  always @ (*) begin
    reg_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_EW_ALU_OPERAND_next = rg_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_EW_ALU_OPERAND;
    l2h_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_EW_ALU_OPERAND_r = rg_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_EW_ALU_OPERAND;
    if (d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_we) reg_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_EW_ALU_OPERAND_next = d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_w;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_EW_ALU_OPERAND <= #1 32'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_EW_ALU_OPERAND <= #1  reg_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_EW_ALU_OPERAND_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_LE_END
  always @ (*) begin
    reg_NVDLA_SDP_S_LUT_LE_END_LUT_LE_END_next = rg_NVDLA_SDP_S_LUT_LE_END_LUT_LE_END;
    l2h_NVDLA_SDP_S_LUT_LE_END_LUT_LE_END_r = rg_NVDLA_SDP_S_LUT_LE_END_LUT_LE_END;
    if (d2l_NVDLA_SDP_S_LUT_LE_END_we) reg_NVDLA_SDP_S_LUT_LE_END_LUT_LE_END_next = d2l_NVDLA_SDP_S_LUT_LE_END_w;
  end
  
  //------- reg assigns for NVDLA_SDP_S_LUT_LE_END
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_S_LUT_LE_END_LUT_LE_END <= #1 32'h0;
    end
    else begin
      rg_NVDLA_SDP_S_LUT_LE_END_LUT_LE_END <= #1  reg_NVDLA_SDP_S_LUT_LE_END_LUT_LE_END_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT
  always @ (*) begin
    reg_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_UFLOW_SHIFT_next = rg_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_UFLOW_SHIFT;
    l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_UFLOW_SHIFT_r = rg_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_UFLOW_SHIFT;
    reg_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_OFLOW_SHIFT_next = rg_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_OFLOW_SHIFT;
    l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_OFLOW_SHIFT_r = rg_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_OFLOW_SHIFT;
    if (d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_we) reg_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_UFLOW_SHIFT_next = d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_w [4:0] ;
    if (d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_we) reg_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_OFLOW_SHIFT_next = d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_w [9:5] ;
  end
  
  //------- reg assigns for NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_UFLOW_SHIFT <= #1 5'h0;
      rg_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_OFLOW_SHIFT <= #1 5'h0;
    end
    else begin
      rg_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_UFLOW_SHIFT <= #1  reg_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_UFLOW_SHIFT_next;
      rg_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_OFLOW_SHIFT <= #1  reg_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_OFLOW_SHIFT_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_CFG
  always @ (*) begin
    reg_NVDLA_SDP_S_LUT_CFG_LUT_LE_FUNCTION_next = rg_NVDLA_SDP_S_LUT_CFG_LUT_LE_FUNCTION;
    l2h_NVDLA_SDP_S_LUT_CFG_LUT_LE_FUNCTION_r = rg_NVDLA_SDP_S_LUT_CFG_LUT_LE_FUNCTION;
    reg_NVDLA_SDP_S_LUT_CFG_LUT_UFLOW_PRIORITY_next = rg_NVDLA_SDP_S_LUT_CFG_LUT_UFLOW_PRIORITY;
    l2h_NVDLA_SDP_S_LUT_CFG_LUT_UFLOW_PRIORITY_r = rg_NVDLA_SDP_S_LUT_CFG_LUT_UFLOW_PRIORITY;
    reg_NVDLA_SDP_S_LUT_CFG_LUT_OFLOW_PRIORITY_next = rg_NVDLA_SDP_S_LUT_CFG_LUT_OFLOW_PRIORITY;
    l2h_NVDLA_SDP_S_LUT_CFG_LUT_OFLOW_PRIORITY_r = rg_NVDLA_SDP_S_LUT_CFG_LUT_OFLOW_PRIORITY;
    reg_NVDLA_SDP_S_LUT_CFG_LUT_HYBRID_PRIORITY_next = rg_NVDLA_SDP_S_LUT_CFG_LUT_HYBRID_PRIORITY;
    l2h_NVDLA_SDP_S_LUT_CFG_LUT_HYBRID_PRIORITY_r = rg_NVDLA_SDP_S_LUT_CFG_LUT_HYBRID_PRIORITY;
    if (d2l_NVDLA_SDP_S_LUT_CFG_we) reg_NVDLA_SDP_S_LUT_CFG_LUT_LE_FUNCTION_next = d2l_NVDLA_SDP_S_LUT_CFG_w [0] ;
    if (d2l_NVDLA_SDP_S_LUT_CFG_we) reg_NVDLA_SDP_S_LUT_CFG_LUT_UFLOW_PRIORITY_next = d2l_NVDLA_SDP_S_LUT_CFG_w [4] ;
    if (d2l_NVDLA_SDP_S_LUT_CFG_we) reg_NVDLA_SDP_S_LUT_CFG_LUT_OFLOW_PRIORITY_next = d2l_NVDLA_SDP_S_LUT_CFG_w [5] ;
    if (d2l_NVDLA_SDP_S_LUT_CFG_we) reg_NVDLA_SDP_S_LUT_CFG_LUT_HYBRID_PRIORITY_next = d2l_NVDLA_SDP_S_LUT_CFG_w [6] ;
  end
  
  //------- reg assigns for NVDLA_SDP_S_LUT_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_S_LUT_CFG_LUT_LE_FUNCTION <= #1 1'h0;
      rg_NVDLA_SDP_S_LUT_CFG_LUT_UFLOW_PRIORITY <= #1 1'h0;
      rg_NVDLA_SDP_S_LUT_CFG_LUT_OFLOW_PRIORITY <= #1 1'h0;
      rg_NVDLA_SDP_S_LUT_CFG_LUT_HYBRID_PRIORITY <= #1 1'h0;
    end
    else begin
      rg_NVDLA_SDP_S_LUT_CFG_LUT_LE_FUNCTION <= #1  reg_NVDLA_SDP_S_LUT_CFG_LUT_LE_FUNCTION_next;
      rg_NVDLA_SDP_S_LUT_CFG_LUT_UFLOW_PRIORITY <= #1  reg_NVDLA_SDP_S_LUT_CFG_LUT_UFLOW_PRIORITY_next;
      rg_NVDLA_SDP_S_LUT_CFG_LUT_OFLOW_PRIORITY <= #1  reg_NVDLA_SDP_S_LUT_CFG_LUT_OFLOW_PRIORITY_next;
      rg_NVDLA_SDP_S_LUT_CFG_LUT_HYBRID_PRIORITY <= #1  reg_NVDLA_SDP_S_LUT_CFG_LUT_HYBRID_PRIORITY_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_LO_END (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_S_LUT_LO_END_r = rg_NVDLA_SDP_S_LUT_LO_END_LUT_LO_END;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_OP_ENABLE (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_OP_ENABLE_r = 32'b0;
    l2d_NVDLA_SDP_D_OP_ENABLE_r [0]  = rg_NVDLA_SDP_D_OP_ENABLE_OP_EN;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_LE_END (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_S_LUT_LE_END_r = rg_NVDLA_SDP_S_LUT_LE_END_LUT_LE_END;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DST_BATCH_STRIDE (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DST_BATCH_STRIDE_r = rg_NVDLA_SDP_D_DST_BATCH_STRIDE_DST_BATCH_STRIDE;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_r = rg_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_EW_MUL_OPERAND;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_STATUS_INF_INPUT_NUM (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_r = rg_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_STATUS_INF_INPUT_NUM;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DATA_CUBE_HEIGHT
  always @ (*) begin
    reg_NVDLA_SDP_D_DATA_CUBE_HEIGHT_HEIGHT_next = rg_NVDLA_SDP_D_DATA_CUBE_HEIGHT_HEIGHT;
    l2h_NVDLA_SDP_D_DATA_CUBE_HEIGHT_HEIGHT_r = rg_NVDLA_SDP_D_DATA_CUBE_HEIGHT_HEIGHT;
    if (d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_we) reg_NVDLA_SDP_D_DATA_CUBE_HEIGHT_HEIGHT_next = d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_w [12:0] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DATA_CUBE_HEIGHT
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DATA_CUBE_HEIGHT_HEIGHT <= #1 13'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DATA_CUBE_HEIGHT_HEIGHT <= #1  reg_NVDLA_SDP_D_DATA_CUBE_HEIGHT_HEIGHT_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DST_LINE_STRIDE
  always @ (*) begin
    reg_NVDLA_SDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_next = rg_NVDLA_SDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE;
    l2h_NVDLA_SDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_r = rg_NVDLA_SDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE;
    if (d2l_NVDLA_SDP_D_DST_LINE_STRIDE_we) reg_NVDLA_SDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_next = d2l_NVDLA_SDP_D_DST_LINE_STRIDE_w;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DST_LINE_STRIDE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE <= #1 32'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE <= #1  reg_NVDLA_SDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_r = rg_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_STATUS_NAN_OUTPUT_NUM;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DST_BASE_ADDR_LOW (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DST_BASE_ADDR_LOW_r = rg_NVDLA_SDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_LO_START
  always @ (*) begin
    reg_NVDLA_SDP_S_LUT_LO_START_LUT_LO_START_next = rg_NVDLA_SDP_S_LUT_LO_START_LUT_LO_START;
    l2h_NVDLA_SDP_S_LUT_LO_START_LUT_LO_START_r = rg_NVDLA_SDP_S_LUT_LO_START_LUT_LO_START;
    if (d2l_NVDLA_SDP_S_LUT_LO_START_we) reg_NVDLA_SDP_S_LUT_LO_START_LUT_LO_START_next = d2l_NVDLA_SDP_S_LUT_LO_START_w;
  end
  
  //------- reg assigns for NVDLA_SDP_S_LUT_LO_START
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_S_LUT_LO_START_LUT_LO_START <= #1 32'h0;
    end
    else begin
      rg_NVDLA_SDP_S_LUT_LO_START_LUT_LO_START <= #1  reg_NVDLA_SDP_S_LUT_LO_START_LUT_LO_START_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_CFG
  always @ (*) begin
    reg_NVDLA_SDP_D_DP_EW_CFG_EW_BYPASS_next = rg_NVDLA_SDP_D_DP_EW_CFG_EW_BYPASS;
    l2h_NVDLA_SDP_D_DP_EW_CFG_EW_BYPASS_r = rg_NVDLA_SDP_D_DP_EW_CFG_EW_BYPASS;
    reg_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_BYPASS_next = rg_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_BYPASS;
    l2h_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_BYPASS_r = rg_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_BYPASS;
    reg_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_ALGO_next = rg_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_ALGO;
    l2h_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_ALGO_r = rg_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_ALGO;
    reg_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_BYPASS_next = rg_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_BYPASS;
    l2h_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_BYPASS_r = rg_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_BYPASS;
    reg_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_PRELU_next = rg_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_PRELU;
    l2h_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_PRELU_r = rg_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_PRELU;
    reg_NVDLA_SDP_D_DP_EW_CFG_EW_LUT_BYPASS_next = rg_NVDLA_SDP_D_DP_EW_CFG_EW_LUT_BYPASS;
    l2h_NVDLA_SDP_D_DP_EW_CFG_EW_LUT_BYPASS_r = rg_NVDLA_SDP_D_DP_EW_CFG_EW_LUT_BYPASS;
    if (d2l_NVDLA_SDP_D_DP_EW_CFG_we) reg_NVDLA_SDP_D_DP_EW_CFG_EW_BYPASS_next = d2l_NVDLA_SDP_D_DP_EW_CFG_w [0] ;
    if (d2l_NVDLA_SDP_D_DP_EW_CFG_we) reg_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_BYPASS_next = d2l_NVDLA_SDP_D_DP_EW_CFG_w [1] ;
    if (d2l_NVDLA_SDP_D_DP_EW_CFG_we) reg_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_ALGO_next = d2l_NVDLA_SDP_D_DP_EW_CFG_w [3:2] ;
    if (d2l_NVDLA_SDP_D_DP_EW_CFG_we) reg_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_BYPASS_next = d2l_NVDLA_SDP_D_DP_EW_CFG_w [4] ;
    if (d2l_NVDLA_SDP_D_DP_EW_CFG_we) reg_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_PRELU_next = d2l_NVDLA_SDP_D_DP_EW_CFG_w [5] ;
    if (d2l_NVDLA_SDP_D_DP_EW_CFG_we) reg_NVDLA_SDP_D_DP_EW_CFG_EW_LUT_BYPASS_next = d2l_NVDLA_SDP_D_DP_EW_CFG_w [6] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DP_EW_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DP_EW_CFG_EW_BYPASS <= #1 1'h1;
      rg_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_BYPASS <= #1 1'h1;
      rg_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_ALGO <= #1 2'h0;
      rg_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_BYPASS <= #1 1'h1;
      rg_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_PRELU <= #1 1'h0;
      rg_NVDLA_SDP_D_DP_EW_CFG_EW_LUT_BYPASS <= #1 1'h1;
    end
    else begin
      rg_NVDLA_SDP_D_DP_EW_CFG_EW_BYPASS <= #1  reg_NVDLA_SDP_D_DP_EW_CFG_EW_BYPASS_next;
      rg_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_BYPASS <= #1  reg_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_BYPASS_next;
      rg_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_ALGO <= #1  reg_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_ALGO_next;
      rg_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_BYPASS <= #1  reg_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_BYPASS_next;
      rg_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_PRELU <= #1  reg_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_PRELU_next;
      rg_NVDLA_SDP_D_DP_EW_CFG_EW_LUT_BYPASS <= #1  reg_NVDLA_SDP_D_DP_EW_CFG_EW_LUT_BYPASS_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_r = 32'b0;
    l2d_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_r [9:0]  = rg_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_EW_TRUNCATE;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_STATUS_NAN_INPUT_NUM
  always @ (*) begin
    rg_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_STATUS_NAN_INPUT_NUM =  h2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_STATUS_NAN_INPUT_NUM_w;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_ACCESS_DATA (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_S_LUT_ACCESS_DATA_r = 32'b0;
    l2d_NVDLA_SDP_S_LUT_ACCESS_DATA_r [15:0]  = rg_NVDLA_SDP_S_LUT_ACCESS_DATA_LUT_DATA;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_ALU_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DP_EW_ALU_CFG_r = 32'b0;
    l2d_NVDLA_SDP_D_DP_EW_ALU_CFG_r [0]  = rg_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_SRC;
    l2d_NVDLA_SDP_D_DP_EW_ALU_CFG_r [1]  = rg_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_CVT_BYPASS;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE
  always @ (*) begin
    reg_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_EW_ALU_CVT_TRUNCATE_next = rg_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_EW_ALU_CVT_TRUNCATE;
    l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_EW_ALU_CVT_TRUNCATE_r = rg_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_EW_ALU_CVT_TRUNCATE;
    if (d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_we) reg_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_EW_ALU_CVT_TRUNCATE_next = d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_w [5:0] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_EW_ALU_CVT_TRUNCATE <= #1 6'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_EW_ALU_CVT_TRUNCATE <= #1  reg_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_EW_ALU_CVT_TRUNCATE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DATA_CUBE_WIDTH (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DATA_CUBE_WIDTH_r = 32'b0;
    l2d_NVDLA_SDP_D_DATA_CUBE_WIDTH_r [12:0]  = rg_NVDLA_SDP_D_DATA_CUBE_WIDTH_WIDTH;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_PERF_ENABLE
  always @ (*) begin
    reg_NVDLA_SDP_D_PERF_ENABLE_PERF_DMA_EN_next = rg_NVDLA_SDP_D_PERF_ENABLE_PERF_DMA_EN;
    l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_DMA_EN_r = rg_NVDLA_SDP_D_PERF_ENABLE_PERF_DMA_EN;
    reg_NVDLA_SDP_D_PERF_ENABLE_PERF_LUT_EN_next = rg_NVDLA_SDP_D_PERF_ENABLE_PERF_LUT_EN;
    l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_LUT_EN_r = rg_NVDLA_SDP_D_PERF_ENABLE_PERF_LUT_EN;
    reg_NVDLA_SDP_D_PERF_ENABLE_PERF_SAT_EN_next = rg_NVDLA_SDP_D_PERF_ENABLE_PERF_SAT_EN;
    l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_SAT_EN_r = rg_NVDLA_SDP_D_PERF_ENABLE_PERF_SAT_EN;
    reg_NVDLA_SDP_D_PERF_ENABLE_PERF_NAN_INF_COUNT_EN_next = rg_NVDLA_SDP_D_PERF_ENABLE_PERF_NAN_INF_COUNT_EN;
    l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_NAN_INF_COUNT_EN_r = rg_NVDLA_SDP_D_PERF_ENABLE_PERF_NAN_INF_COUNT_EN;
    if (d2l_NVDLA_SDP_D_PERF_ENABLE_we) reg_NVDLA_SDP_D_PERF_ENABLE_PERF_DMA_EN_next = d2l_NVDLA_SDP_D_PERF_ENABLE_w [0] ;
    if (d2l_NVDLA_SDP_D_PERF_ENABLE_we) reg_NVDLA_SDP_D_PERF_ENABLE_PERF_LUT_EN_next = d2l_NVDLA_SDP_D_PERF_ENABLE_w [1] ;
    if (d2l_NVDLA_SDP_D_PERF_ENABLE_we) reg_NVDLA_SDP_D_PERF_ENABLE_PERF_SAT_EN_next = d2l_NVDLA_SDP_D_PERF_ENABLE_w [2] ;
    if (d2l_NVDLA_SDP_D_PERF_ENABLE_we) reg_NVDLA_SDP_D_PERF_ENABLE_PERF_NAN_INF_COUNT_EN_next = d2l_NVDLA_SDP_D_PERF_ENABLE_w [3] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_PERF_ENABLE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_PERF_ENABLE_PERF_DMA_EN <= #1 1'h0;
      rg_NVDLA_SDP_D_PERF_ENABLE_PERF_LUT_EN <= #1 1'h0;
      rg_NVDLA_SDP_D_PERF_ENABLE_PERF_SAT_EN <= #1 1'h0;
      rg_NVDLA_SDP_D_PERF_ENABLE_PERF_NAN_INF_COUNT_EN <= #1 1'h0;
    end
    else begin
      rg_NVDLA_SDP_D_PERF_ENABLE_PERF_DMA_EN <= #1  reg_NVDLA_SDP_D_PERF_ENABLE_PERF_DMA_EN_next;
      rg_NVDLA_SDP_D_PERF_ENABLE_PERF_LUT_EN <= #1  reg_NVDLA_SDP_D_PERF_ENABLE_PERF_LUT_EN_next;
      rg_NVDLA_SDP_D_PERF_ENABLE_PERF_SAT_EN <= #1  reg_NVDLA_SDP_D_PERF_ENABLE_PERF_SAT_EN_next;
      rg_NVDLA_SDP_D_PERF_ENABLE_PERF_NAN_INF_COUNT_EN <= #1  reg_NVDLA_SDP_D_PERF_ENABLE_PERF_NAN_INF_COUNT_EN_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_BS_CFG
  always @ (*) begin
    reg_NVDLA_SDP_D_DP_BS_CFG_BS_BYPASS_next = rg_NVDLA_SDP_D_DP_BS_CFG_BS_BYPASS;
    l2h_NVDLA_SDP_D_DP_BS_CFG_BS_BYPASS_r = rg_NVDLA_SDP_D_DP_BS_CFG_BS_BYPASS;
    reg_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_BYPASS_next = rg_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_BYPASS;
    l2h_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_BYPASS_r = rg_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_BYPASS;
    reg_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_ALGO_next = rg_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_ALGO;
    l2h_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_ALGO_r = rg_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_ALGO;
    reg_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_BYPASS_next = rg_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_BYPASS;
    l2h_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_BYPASS_r = rg_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_BYPASS;
    reg_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_PRELU_next = rg_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_PRELU;
    l2h_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_PRELU_r = rg_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_PRELU;
    reg_NVDLA_SDP_D_DP_BS_CFG_BS_RELU_BYPASS_next = rg_NVDLA_SDP_D_DP_BS_CFG_BS_RELU_BYPASS;
    l2h_NVDLA_SDP_D_DP_BS_CFG_BS_RELU_BYPASS_r = rg_NVDLA_SDP_D_DP_BS_CFG_BS_RELU_BYPASS;
    if (d2l_NVDLA_SDP_D_DP_BS_CFG_we) reg_NVDLA_SDP_D_DP_BS_CFG_BS_BYPASS_next = d2l_NVDLA_SDP_D_DP_BS_CFG_w [0] ;
    if (d2l_NVDLA_SDP_D_DP_BS_CFG_we) reg_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_BYPASS_next = d2l_NVDLA_SDP_D_DP_BS_CFG_w [1] ;
    if (d2l_NVDLA_SDP_D_DP_BS_CFG_we) reg_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_ALGO_next = d2l_NVDLA_SDP_D_DP_BS_CFG_w [3:2] ;
    if (d2l_NVDLA_SDP_D_DP_BS_CFG_we) reg_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_BYPASS_next = d2l_NVDLA_SDP_D_DP_BS_CFG_w [4] ;
    if (d2l_NVDLA_SDP_D_DP_BS_CFG_we) reg_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_PRELU_next = d2l_NVDLA_SDP_D_DP_BS_CFG_w [5] ;
    if (d2l_NVDLA_SDP_D_DP_BS_CFG_we) reg_NVDLA_SDP_D_DP_BS_CFG_BS_RELU_BYPASS_next = d2l_NVDLA_SDP_D_DP_BS_CFG_w [6] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DP_BS_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DP_BS_CFG_BS_BYPASS <= #1 1'h1;
      rg_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_BYPASS <= #1 1'h1;
      rg_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_ALGO <= #1 2'h0;
      rg_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_BYPASS <= #1 1'h1;
      rg_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_PRELU <= #1 1'h1;
      rg_NVDLA_SDP_D_DP_BS_CFG_BS_RELU_BYPASS <= #1 1'h1;
    end
    else begin
      rg_NVDLA_SDP_D_DP_BS_CFG_BS_BYPASS <= #1  reg_NVDLA_SDP_D_DP_BS_CFG_BS_BYPASS_next;
      rg_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_BYPASS <= #1  reg_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_BYPASS_next;
      rg_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_ALGO <= #1  reg_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_ALGO_next;
      rg_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_BYPASS <= #1  reg_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_BYPASS_next;
      rg_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_PRELU <= #1  reg_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_PRELU_next;
      rg_NVDLA_SDP_D_DP_BS_CFG_BS_RELU_BYPASS <= #1  reg_NVDLA_SDP_D_DP_BS_CFG_BS_RELU_BYPASS_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_BN_ALU_CFG
  always @ (*) begin
    reg_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SRC_next = rg_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SRC;
    l2h_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SRC_r = rg_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SRC;
    reg_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SHIFT_VALUE_next = rg_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SHIFT_VALUE;
    l2h_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SHIFT_VALUE_r = rg_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SHIFT_VALUE;
    if (d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_we) reg_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SRC_next = d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_w [0] ;
    if (d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_we) reg_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SHIFT_VALUE_next = d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_w [13:8] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DP_BN_ALU_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SRC <= #1 1'h0;
      rg_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SHIFT_VALUE <= #1 6'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SRC <= #1  reg_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SRC_next;
      rg_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SHIFT_VALUE <= #1  reg_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SHIFT_VALUE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_STATUS
  always @ (*) begin
    rg_NVDLA_SDP_S_STATUS_STATUS_0 =  h2l_NVDLA_SDP_S_STATUS_STATUS_0_w;
    rg_NVDLA_SDP_S_STATUS_STATUS_1 =  h2l_NVDLA_SDP_S_STATUS_STATUS_1_w;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_S_LUT_CFG_r = 32'b0;
    l2d_NVDLA_SDP_S_LUT_CFG_r [0]  = rg_NVDLA_SDP_S_LUT_CFG_LUT_LE_FUNCTION;
    l2d_NVDLA_SDP_S_LUT_CFG_r [4]  = rg_NVDLA_SDP_S_LUT_CFG_LUT_UFLOW_PRIORITY;
    l2d_NVDLA_SDP_S_LUT_CFG_r [5]  = rg_NVDLA_SDP_S_LUT_CFG_LUT_OFLOW_PRIORITY;
    l2d_NVDLA_SDP_S_LUT_CFG_r [6]  = rg_NVDLA_SDP_S_LUT_CFG_LUT_HYBRID_PRIORITY;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_PERF_OUT_SATURATION
  always @ (*) begin
    rg_NVDLA_SDP_D_PERF_OUT_SATURATION_OUT_SATURATION =  h2l_NVDLA_SDP_D_PERF_OUT_SATURATION_OUT_SATURATION_w;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_r = 32'b0;
    l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_r [5:0]  = rg_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_EW_ALU_CVT_TRUNCATE;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_PERF_WDMA_WRITE_STALL
  always @ (*) begin
    rg_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_WDMA_STALL =  h2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_WDMA_STALL_w;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE
  always @ (*) begin
    reg_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_EW_ALU_CVT_SCALE_next = rg_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_EW_ALU_CVT_SCALE;
    l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_EW_ALU_CVT_SCALE_r = rg_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_EW_ALU_CVT_SCALE;
    if (d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_we) reg_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_EW_ALU_CVT_SCALE_next = d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_w [15:0] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_EW_ALU_CVT_SCALE <= #1 16'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_EW_ALU_CVT_SCALE <= #1  reg_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_EW_ALU_CVT_SCALE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DST_BASE_ADDR_HIGH
  always @ (*) begin
    reg_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_next = rg_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH;
    l2h_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_r = rg_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH;
    if (d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_we) reg_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_next = d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_w;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DST_BASE_ADDR_HIGH
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH <= #1 32'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH <= #1  reg_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE
  always @ (*) begin
    reg_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_BS_ALU_OPERAND_next = rg_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_BS_ALU_OPERAND;
    l2h_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_BS_ALU_OPERAND_r = rg_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_BS_ALU_OPERAND;
    if (d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_we) reg_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_BS_ALU_OPERAND_next = d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_w [15:0] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_BS_ALU_OPERAND <= #1 16'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_BS_ALU_OPERAND <= #1  reg_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_BS_ALU_OPERAND_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE
  always @ (*) begin
    reg_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_BS_MUL_OPERAND_next = rg_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_BS_MUL_OPERAND;
    l2h_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_BS_MUL_OPERAND_r = rg_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_BS_MUL_OPERAND;
    if (d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_we) reg_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_BS_MUL_OPERAND_next = d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_w [15:0] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_BS_MUL_OPERAND <= #1 16'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_BS_MUL_OPERAND <= #1  reg_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_BS_MUL_OPERAND_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_FEATURE_MODE_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_FEATURE_MODE_CFG_r = 32'b0;
    l2d_NVDLA_SDP_D_FEATURE_MODE_CFG_r [0]  = rg_NVDLA_SDP_D_FEATURE_MODE_CFG_FLYING_MODE;
    l2d_NVDLA_SDP_D_FEATURE_MODE_CFG_r [1]  = rg_NVDLA_SDP_D_FEATURE_MODE_CFG_OUTPUT_DST;
    l2d_NVDLA_SDP_D_FEATURE_MODE_CFG_r [2]  = rg_NVDLA_SDP_D_FEATURE_MODE_CFG_WINOGRAD;
    l2d_NVDLA_SDP_D_FEATURE_MODE_CFG_r [3]  = rg_NVDLA_SDP_D_FEATURE_MODE_CFG_NAN_TO_ZERO;
    l2d_NVDLA_SDP_D_FEATURE_MODE_CFG_r [12:8]  = rg_NVDLA_SDP_D_FEATURE_MODE_CFG_BATCH_NUMBER;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_LO_START (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_S_LUT_LO_START_r = rg_NVDLA_SDP_S_LUT_LO_START_LUT_LO_START;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_INFO (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_S_LUT_INFO_r = 32'b0;
    l2d_NVDLA_SDP_S_LUT_INFO_r [7:0]  = rg_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_OFFSET;
    l2d_NVDLA_SDP_S_LUT_INFO_r [15:8]  = rg_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_SELECT;
    l2d_NVDLA_SDP_S_LUT_INFO_r [23:16]  = rg_NVDLA_SDP_S_LUT_INFO_LUT_LO_INDEX_SELECT;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_r = 32'b0;
    l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_r [5:0]  = rg_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_EW_MUL_CVT_TRUNCATE;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_LE_SLOPE_SCALE
  always @ (*) begin
    reg_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_UFLOW_SCALE_next = rg_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_UFLOW_SCALE;
    l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_UFLOW_SCALE_r = rg_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_UFLOW_SCALE;
    reg_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_OFLOW_SCALE_next = rg_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_OFLOW_SCALE;
    l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_OFLOW_SCALE_r = rg_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_OFLOW_SCALE;
    if (d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_we) reg_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_UFLOW_SCALE_next = d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_w [15:0] ;
    if (d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_we) reg_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_OFLOW_SCALE_next = d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_w [31:16] ;
  end
  
  //------- reg assigns for NVDLA_SDP_S_LUT_LE_SLOPE_SCALE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_UFLOW_SCALE <= #1 16'h0;
      rg_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_OFLOW_SCALE <= #1 16'h0;
    end
    else begin
      rg_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_UFLOW_SCALE <= #1  reg_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_UFLOW_SCALE_next;
      rg_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_OFLOW_SCALE <= #1  reg_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_OFLOW_SCALE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_S_LUT_ACCESS_DATA
  always @ (*) begin
    reg_NVDLA_SDP_S_LUT_ACCESS_DATA_LUT_DATA_next = rg_NVDLA_SDP_S_LUT_ACCESS_DATA_LUT_DATA;
    l2h_NVDLA_SDP_S_LUT_ACCESS_DATA_LUT_DATA_r = rg_NVDLA_SDP_S_LUT_ACCESS_DATA_LUT_DATA;
    if (d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_we) reg_NVDLA_SDP_S_LUT_ACCESS_DATA_LUT_DATA_next = d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_w [15:0] ;
  end
  
  //------- reg assigns for NVDLA_SDP_S_LUT_ACCESS_DATA
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_S_LUT_ACCESS_DATA_LUT_DATA <= #1 16'h0;
    end
    else begin
      rg_NVDLA_SDP_S_LUT_ACCESS_DATA_LUT_DATA <= #1  reg_NVDLA_SDP_S_LUT_ACCESS_DATA_LUT_DATA_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DST_DMA_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DST_DMA_CFG_r = 32'b0;
    l2d_NVDLA_SDP_D_DST_DMA_CFG_r [0]  = rg_NVDLA_SDP_D_DST_DMA_CFG_DST_RAM_TYPE;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_MUL_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DP_EW_MUL_CFG_r = 32'b0;
    l2d_NVDLA_SDP_D_DP_EW_MUL_CFG_r [0]  = rg_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_SRC;
    l2d_NVDLA_SDP_D_DP_EW_MUL_CFG_r [1]  = rg_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_CVT_BYPASS;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_BN_CFG
  always @ (*) begin
    reg_NVDLA_SDP_D_DP_BN_CFG_BN_BYPASS_next = rg_NVDLA_SDP_D_DP_BN_CFG_BN_BYPASS;
    l2h_NVDLA_SDP_D_DP_BN_CFG_BN_BYPASS_r = rg_NVDLA_SDP_D_DP_BN_CFG_BN_BYPASS;
    reg_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_BYPASS_next = rg_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_BYPASS;
    l2h_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_BYPASS_r = rg_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_BYPASS;
    reg_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_ALGO_next = rg_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_ALGO;
    l2h_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_ALGO_r = rg_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_ALGO;
    reg_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_BYPASS_next = rg_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_BYPASS;
    l2h_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_BYPASS_r = rg_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_BYPASS;
    reg_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_PRELU_next = rg_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_PRELU;
    l2h_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_PRELU_r = rg_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_PRELU;
    reg_NVDLA_SDP_D_DP_BN_CFG_BN_RELU_BYPASS_next = rg_NVDLA_SDP_D_DP_BN_CFG_BN_RELU_BYPASS;
    l2h_NVDLA_SDP_D_DP_BN_CFG_BN_RELU_BYPASS_r = rg_NVDLA_SDP_D_DP_BN_CFG_BN_RELU_BYPASS;
    if (d2l_NVDLA_SDP_D_DP_BN_CFG_we) reg_NVDLA_SDP_D_DP_BN_CFG_BN_BYPASS_next = d2l_NVDLA_SDP_D_DP_BN_CFG_w [0] ;
    if (d2l_NVDLA_SDP_D_DP_BN_CFG_we) reg_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_BYPASS_next = d2l_NVDLA_SDP_D_DP_BN_CFG_w [1] ;
    if (d2l_NVDLA_SDP_D_DP_BN_CFG_we) reg_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_ALGO_next = d2l_NVDLA_SDP_D_DP_BN_CFG_w [3:2] ;
    if (d2l_NVDLA_SDP_D_DP_BN_CFG_we) reg_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_BYPASS_next = d2l_NVDLA_SDP_D_DP_BN_CFG_w [4] ;
    if (d2l_NVDLA_SDP_D_DP_BN_CFG_we) reg_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_PRELU_next = d2l_NVDLA_SDP_D_DP_BN_CFG_w [5] ;
    if (d2l_NVDLA_SDP_D_DP_BN_CFG_we) reg_NVDLA_SDP_D_DP_BN_CFG_BN_RELU_BYPASS_next = d2l_NVDLA_SDP_D_DP_BN_CFG_w [6] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DP_BN_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DP_BN_CFG_BN_BYPASS <= #1 1'h1;
      rg_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_BYPASS <= #1 1'h1;
      rg_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_ALGO <= #1 2'h0;
      rg_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_BYPASS <= #1 1'h1;
      rg_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_PRELU <= #1 1'h0;
      rg_NVDLA_SDP_D_DP_BN_CFG_BN_RELU_BYPASS <= #1 1'h1;
    end
    else begin
      rg_NVDLA_SDP_D_DP_BN_CFG_BN_BYPASS <= #1  reg_NVDLA_SDP_D_DP_BN_CFG_BN_BYPASS_next;
      rg_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_BYPASS <= #1  reg_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_BYPASS_next;
      rg_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_ALGO <= #1  reg_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_ALGO_next;
      rg_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_BYPASS <= #1  reg_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_BYPASS_next;
      rg_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_PRELU <= #1  reg_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_PRELU_next;
      rg_NVDLA_SDP_D_DP_BN_CFG_BN_RELU_BYPASS <= #1  reg_NVDLA_SDP_D_DP_BN_CFG_BN_RELU_BYPASS_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_BS_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DP_BS_CFG_r = 32'b0;
    l2d_NVDLA_SDP_D_DP_BS_CFG_r [0]  = rg_NVDLA_SDP_D_DP_BS_CFG_BS_BYPASS;
    l2d_NVDLA_SDP_D_DP_BS_CFG_r [1]  = rg_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_BYPASS;
    l2d_NVDLA_SDP_D_DP_BS_CFG_r [3:2]  = rg_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_ALGO;
    l2d_NVDLA_SDP_D_DP_BS_CFG_r [4]  = rg_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_BYPASS;
    l2d_NVDLA_SDP_D_DP_BS_CFG_r [5]  = rg_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_PRELU;
    l2d_NVDLA_SDP_D_DP_BS_CFG_r [6]  = rg_NVDLA_SDP_D_DP_BS_CFG_BS_RELU_BYPASS;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DATA_FORMAT (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DATA_FORMAT_r = 32'b0;
    l2d_NVDLA_SDP_D_DATA_FORMAT_r [1:0]  = rg_NVDLA_SDP_D_DATA_FORMAT_PROC_PRECISION;
    l2d_NVDLA_SDP_D_DATA_FORMAT_r [3:2]  = rg_NVDLA_SDP_D_DATA_FORMAT_OUT_PRECISION;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_BS_MUL_CFG
  always @ (*) begin
    reg_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SRC_next = rg_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SRC;
    l2h_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SRC_r = rg_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SRC;
    reg_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SHIFT_VALUE_next = rg_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SHIFT_VALUE;
    l2h_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SHIFT_VALUE_r = rg_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SHIFT_VALUE;
    if (d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_we) reg_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SRC_next = d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_w [0] ;
    if (d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_we) reg_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SHIFT_VALUE_next = d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_w [15:8] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DP_BS_MUL_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SRC <= #1 1'h0;
      rg_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SHIFT_VALUE <= #1 8'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SRC <= #1  reg_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SRC_next;
      rg_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SHIFT_VALUE <= #1  reg_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SHIFT_VALUE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_STATUS_NAN_INPUT_NUM (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_r = rg_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_STATUS_NAN_INPUT_NUM;
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DATA_CUBE_WIDTH
  always @ (*) begin
    reg_NVDLA_SDP_D_DATA_CUBE_WIDTH_WIDTH_next = rg_NVDLA_SDP_D_DATA_CUBE_WIDTH_WIDTH;
    l2h_NVDLA_SDP_D_DATA_CUBE_WIDTH_WIDTH_r = rg_NVDLA_SDP_D_DATA_CUBE_WIDTH_WIDTH;
    if (d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_we) reg_NVDLA_SDP_D_DATA_CUBE_WIDTH_WIDTH_next = d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_w [12:0] ;
  end
  
  //------- reg assigns for NVDLA_SDP_D_DATA_CUBE_WIDTH
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_SDP_D_DATA_CUBE_WIDTH_WIDTH <= #1 13'h0;
    end
    else begin
      rg_NVDLA_SDP_D_DATA_CUBE_WIDTH_WIDTH <= #1  reg_NVDLA_SDP_D_DATA_CUBE_WIDTH_WIDTH_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE (pio read data)
  always @ (*) begin
    l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_r = rg_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_EW_MUL_CVT_OFFSET;
  end
  
endmodule

//
//---------- module addrmap_NVDLA_jrdl_decode
//
module addrmap_NVDLA_jrdl_decode
(
  clk,
  reset,
  leaf_dec_wr_data,
  leaf_dec_addr,
  leaf_dec_block_sel,
  leaf_dec_valid,
  leaf_dec_wr_dvld,
  leaf_dec_cycle,
  leaf_dec_wr_width,
  l2d_NVDLA_SDP_S_STATUS_r,
  l2d_NVDLA_SDP_S_POINTER_r,
  l2d_NVDLA_SDP_S_LUT_ACCESS_CFG_r,
  l2d_NVDLA_SDP_S_LUT_ACCESS_DATA_r,
  l2d_NVDLA_SDP_S_LUT_CFG_r,
  l2d_NVDLA_SDP_S_LUT_INFO_r,
  l2d_NVDLA_SDP_S_LUT_LE_START_r,
  l2d_NVDLA_SDP_S_LUT_LE_END_r,
  l2d_NVDLA_SDP_S_LUT_LO_START_r,
  l2d_NVDLA_SDP_S_LUT_LO_END_r,
  l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_r,
  l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_r,
  l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_r,
  l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_r,
  l2d_NVDLA_SDP_D_OP_ENABLE_r,
  l2d_NVDLA_SDP_D_DATA_CUBE_WIDTH_r,
  l2d_NVDLA_SDP_D_DATA_CUBE_HEIGHT_r,
  l2d_NVDLA_SDP_D_DATA_CUBE_CHANNEL_r,
  l2d_NVDLA_SDP_D_DST_BASE_ADDR_LOW_r,
  l2d_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_r,
  l2d_NVDLA_SDP_D_DST_LINE_STRIDE_r,
  l2d_NVDLA_SDP_D_DST_SURFACE_STRIDE_r,
  l2d_NVDLA_SDP_D_DP_BS_CFG_r,
  l2d_NVDLA_SDP_D_DP_BS_ALU_CFG_r,
  l2d_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_r,
  l2d_NVDLA_SDP_D_DP_BS_MUL_CFG_r,
  l2d_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_r,
  l2d_NVDLA_SDP_D_DP_BN_CFG_r,
  l2d_NVDLA_SDP_D_DP_BN_ALU_CFG_r,
  l2d_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_r,
  l2d_NVDLA_SDP_D_DP_BN_MUL_CFG_r,
  l2d_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_r,
  l2d_NVDLA_SDP_D_DP_EW_CFG_r,
  l2d_NVDLA_SDP_D_DP_EW_ALU_CFG_r,
  l2d_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_r,
  l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_r,
  l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_r,
  l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_r,
  l2d_NVDLA_SDP_D_DP_EW_MUL_CFG_r,
  l2d_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_r,
  l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_r,
  l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_r,
  l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_r,
  l2d_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_r,
  l2d_NVDLA_SDP_D_FEATURE_MODE_CFG_r,
  l2d_NVDLA_SDP_D_DST_DMA_CFG_r,
  l2d_NVDLA_SDP_D_DST_BATCH_STRIDE_r,
  l2d_NVDLA_SDP_D_DATA_FORMAT_r,
  l2d_NVDLA_SDP_D_CVT_OFFSET_r,
  l2d_NVDLA_SDP_D_CVT_SCALE_r,
  l2d_NVDLA_SDP_D_CVT_SHIFT_r,
  l2d_NVDLA_SDP_D_STATUS_r,
  l2d_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_r,
  l2d_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_r,
  l2d_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_r,
  l2d_NVDLA_SDP_D_PERF_ENABLE_r,
  l2d_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_r,
  l2d_NVDLA_SDP_D_PERF_LUT_UFLOW_r,
  l2d_NVDLA_SDP_D_PERF_LUT_OFLOW_r,
  l2d_NVDLA_SDP_D_PERF_OUT_SATURATION_r,
  l2d_NVDLA_SDP_D_PERF_LUT_HYBRID_r,
  l2d_NVDLA_SDP_D_PERF_LUT_LE_HIT_r,
  l2d_NVDLA_SDP_D_PERF_LUT_LO_HIT_r,

  dec_leaf_rd_data,
  dec_leaf_ack,
  dec_leaf_nack,
  dec_leaf_accept,
  dec_leaf_reject,
  dec_leaf_retry_atomic,
  dec_leaf_data_width,
  d2l_NVDLA_SDP_S_STATUS_w,
  d2l_NVDLA_SDP_S_STATUS_we,
  d2l_NVDLA_SDP_S_STATUS_re,
  d2l_NVDLA_SDP_S_POINTER_w,
  d2l_NVDLA_SDP_S_POINTER_we,
  d2l_NVDLA_SDP_S_POINTER_re,
  d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_w,
  d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_we,
  d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_re,
  d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_w,
  d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_we,
  d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_re,
  d2l_NVDLA_SDP_S_LUT_CFG_w,
  d2l_NVDLA_SDP_S_LUT_CFG_we,
  d2l_NVDLA_SDP_S_LUT_CFG_re,
  d2l_NVDLA_SDP_S_LUT_INFO_w,
  d2l_NVDLA_SDP_S_LUT_INFO_we,
  d2l_NVDLA_SDP_S_LUT_INFO_re,
  d2l_NVDLA_SDP_S_LUT_LE_START_w,
  d2l_NVDLA_SDP_S_LUT_LE_START_we,
  d2l_NVDLA_SDP_S_LUT_LE_START_re,
  d2l_NVDLA_SDP_S_LUT_LE_END_w,
  d2l_NVDLA_SDP_S_LUT_LE_END_we,
  d2l_NVDLA_SDP_S_LUT_LE_END_re,
  d2l_NVDLA_SDP_S_LUT_LO_START_w,
  d2l_NVDLA_SDP_S_LUT_LO_START_we,
  d2l_NVDLA_SDP_S_LUT_LO_START_re,
  d2l_NVDLA_SDP_S_LUT_LO_END_w,
  d2l_NVDLA_SDP_S_LUT_LO_END_we,
  d2l_NVDLA_SDP_S_LUT_LO_END_re,
  d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_w,
  d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_we,
  d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_re,
  d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_w,
  d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_we,
  d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_re,
  d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_w,
  d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_we,
  d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_re,
  d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_w,
  d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_we,
  d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_re,
  d2l_NVDLA_SDP_D_OP_ENABLE_w,
  d2l_NVDLA_SDP_D_OP_ENABLE_we,
  d2l_NVDLA_SDP_D_OP_ENABLE_re,
  d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_w,
  d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_we,
  d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_re,
  d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_w,
  d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_we,
  d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_re,
  d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_w,
  d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_we,
  d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_re,
  d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_w,
  d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_we,
  d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_re,
  d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_w,
  d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_we,
  d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_re,
  d2l_NVDLA_SDP_D_DST_LINE_STRIDE_w,
  d2l_NVDLA_SDP_D_DST_LINE_STRIDE_we,
  d2l_NVDLA_SDP_D_DST_LINE_STRIDE_re,
  d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_w,
  d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_we,
  d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_re,
  d2l_NVDLA_SDP_D_DP_BS_CFG_w,
  d2l_NVDLA_SDP_D_DP_BS_CFG_we,
  d2l_NVDLA_SDP_D_DP_BS_CFG_re,
  d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_w,
  d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_we,
  d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_re,
  d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_w,
  d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_we,
  d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_re,
  d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_w,
  d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_we,
  d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_re,
  d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_w,
  d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_we,
  d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_re,
  d2l_NVDLA_SDP_D_DP_BN_CFG_w,
  d2l_NVDLA_SDP_D_DP_BN_CFG_we,
  d2l_NVDLA_SDP_D_DP_BN_CFG_re,
  d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_w,
  d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_we,
  d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_re,
  d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_w,
  d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_we,
  d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_re,
  d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_w,
  d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_we,
  d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_re,
  d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_w,
  d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_we,
  d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_re,
  d2l_NVDLA_SDP_D_DP_EW_CFG_w,
  d2l_NVDLA_SDP_D_DP_EW_CFG_we,
  d2l_NVDLA_SDP_D_DP_EW_CFG_re,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_w,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_we,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_re,
  d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_w,
  d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_we,
  d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_re,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_w,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_we,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_re,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_w,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_we,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_re,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_w,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_we,
  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_re,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_w,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_we,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_re,
  d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_w,
  d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_we,
  d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_re,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_w,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_we,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_re,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_w,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_we,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_re,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_w,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_we,
  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_re,
  d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_w,
  d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_we,
  d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_re,
  d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_w,
  d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_we,
  d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_re,
  d2l_NVDLA_SDP_D_DST_DMA_CFG_w,
  d2l_NVDLA_SDP_D_DST_DMA_CFG_we,
  d2l_NVDLA_SDP_D_DST_DMA_CFG_re,
  d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_w,
  d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_we,
  d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_re,
  d2l_NVDLA_SDP_D_DATA_FORMAT_w,
  d2l_NVDLA_SDP_D_DATA_FORMAT_we,
  d2l_NVDLA_SDP_D_DATA_FORMAT_re,
  d2l_NVDLA_SDP_D_CVT_OFFSET_w,
  d2l_NVDLA_SDP_D_CVT_OFFSET_we,
  d2l_NVDLA_SDP_D_CVT_OFFSET_re,
  d2l_NVDLA_SDP_D_CVT_SCALE_w,
  d2l_NVDLA_SDP_D_CVT_SCALE_we,
  d2l_NVDLA_SDP_D_CVT_SCALE_re,
  d2l_NVDLA_SDP_D_CVT_SHIFT_w,
  d2l_NVDLA_SDP_D_CVT_SHIFT_we,
  d2l_NVDLA_SDP_D_CVT_SHIFT_re,
  d2l_NVDLA_SDP_D_STATUS_w,
  d2l_NVDLA_SDP_D_STATUS_we,
  d2l_NVDLA_SDP_D_STATUS_re,
  d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_w,
  d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_we,
  d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_re,
  d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_w,
  d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_we,
  d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_re,
  d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_w,
  d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_we,
  d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_re,
  d2l_NVDLA_SDP_D_PERF_ENABLE_w,
  d2l_NVDLA_SDP_D_PERF_ENABLE_we,
  d2l_NVDLA_SDP_D_PERF_ENABLE_re,
  d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_w,
  d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_we,
  d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_re,
  d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_w,
  d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_we,
  d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_re,
  d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_w,
  d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_we,
  d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_re,
  d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_w,
  d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_we,
  d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_re,
  d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_w,
  d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_we,
  d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_re,
  d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_w,
  d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_we,
  d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_re,
  d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_w,
  d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_we,
  d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_re );

  //------- inputs
  input    clk;
  input    reset;
  input     [31:0] leaf_dec_wr_data;
  input     [39:0] leaf_dec_addr;
  input    leaf_dec_block_sel;
  input    leaf_dec_valid;
  input    leaf_dec_wr_dvld;
  input     [1:0] leaf_dec_cycle;
  input     [2:0] leaf_dec_wr_width;
  input     [31:0] l2d_NVDLA_SDP_S_STATUS_r;
  input     [31:0] l2d_NVDLA_SDP_S_POINTER_r;
  input     [31:0] l2d_NVDLA_SDP_S_LUT_ACCESS_CFG_r;
  input     [31:0] l2d_NVDLA_SDP_S_LUT_ACCESS_DATA_r;
  input     [31:0] l2d_NVDLA_SDP_S_LUT_CFG_r;
  input     [31:0] l2d_NVDLA_SDP_S_LUT_INFO_r;
  input     [31:0] l2d_NVDLA_SDP_S_LUT_LE_START_r;
  input     [31:0] l2d_NVDLA_SDP_S_LUT_LE_END_r;
  input     [31:0] l2d_NVDLA_SDP_S_LUT_LO_START_r;
  input     [31:0] l2d_NVDLA_SDP_S_LUT_LO_END_r;
  input     [31:0] l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_r;
  input     [31:0] l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_r;
  input     [31:0] l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_r;
  input     [31:0] l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_r;
  input     [31:0] l2d_NVDLA_SDP_D_OP_ENABLE_r;
  input     [31:0] l2d_NVDLA_SDP_D_DATA_CUBE_WIDTH_r;
  input     [31:0] l2d_NVDLA_SDP_D_DATA_CUBE_HEIGHT_r;
  input     [31:0] l2d_NVDLA_SDP_D_DATA_CUBE_CHANNEL_r;
  input     [31:0] l2d_NVDLA_SDP_D_DST_BASE_ADDR_LOW_r;
  input     [31:0] l2d_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_r;
  input     [31:0] l2d_NVDLA_SDP_D_DST_LINE_STRIDE_r;
  input     [31:0] l2d_NVDLA_SDP_D_DST_SURFACE_STRIDE_r;
  input     [31:0] l2d_NVDLA_SDP_D_DP_BS_CFG_r;
  input     [31:0] l2d_NVDLA_SDP_D_DP_BS_ALU_CFG_r;
  input     [31:0] l2d_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_r;
  input     [31:0] l2d_NVDLA_SDP_D_DP_BS_MUL_CFG_r;
  input     [31:0] l2d_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_r;
  input     [31:0] l2d_NVDLA_SDP_D_DP_BN_CFG_r;
  input     [31:0] l2d_NVDLA_SDP_D_DP_BN_ALU_CFG_r;
  input     [31:0] l2d_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_r;
  input     [31:0] l2d_NVDLA_SDP_D_DP_BN_MUL_CFG_r;
  input     [31:0] l2d_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_r;
  input     [31:0] l2d_NVDLA_SDP_D_DP_EW_CFG_r;
  input     [31:0] l2d_NVDLA_SDP_D_DP_EW_ALU_CFG_r;
  input     [31:0] l2d_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_r;
  input     [31:0] l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_r;
  input     [31:0] l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_r;
  input     [31:0] l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_r;
  input     [31:0] l2d_NVDLA_SDP_D_DP_EW_MUL_CFG_r;
  input     [31:0] l2d_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_r;
  input     [31:0] l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_r;
  input     [31:0] l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_r;
  input     [31:0] l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_r;
  input     [31:0] l2d_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_r;
  input     [31:0] l2d_NVDLA_SDP_D_FEATURE_MODE_CFG_r;
  input     [31:0] l2d_NVDLA_SDP_D_DST_DMA_CFG_r;
  input     [31:0] l2d_NVDLA_SDP_D_DST_BATCH_STRIDE_r;
  input     [31:0] l2d_NVDLA_SDP_D_DATA_FORMAT_r;
  input     [31:0] l2d_NVDLA_SDP_D_CVT_OFFSET_r;
  input     [31:0] l2d_NVDLA_SDP_D_CVT_SCALE_r;
  input     [31:0] l2d_NVDLA_SDP_D_CVT_SHIFT_r;
  input     [31:0] l2d_NVDLA_SDP_D_STATUS_r;
  input     [31:0] l2d_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_r;
  input     [31:0] l2d_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_r;
  input     [31:0] l2d_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_r;
  input     [31:0] l2d_NVDLA_SDP_D_PERF_ENABLE_r;
  input     [31:0] l2d_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_r;
  input     [31:0] l2d_NVDLA_SDP_D_PERF_LUT_UFLOW_r;
  input     [31:0] l2d_NVDLA_SDP_D_PERF_LUT_OFLOW_r;
  input     [31:0] l2d_NVDLA_SDP_D_PERF_OUT_SATURATION_r;
  input     [31:0] l2d_NVDLA_SDP_D_PERF_LUT_HYBRID_r;
  input     [31:0] l2d_NVDLA_SDP_D_PERF_LUT_LE_HIT_r;
  input     [31:0] l2d_NVDLA_SDP_D_PERF_LUT_LO_HIT_r;

  //------- outputs
  output     [31:0] dec_leaf_rd_data;
  output    dec_leaf_ack;
  output    dec_leaf_nack;
  output    dec_leaf_accept;
  output    dec_leaf_reject;
  output    dec_leaf_retry_atomic;
  output     [2:0] dec_leaf_data_width;
  output     [31:0] d2l_NVDLA_SDP_S_STATUS_w;
  output    d2l_NVDLA_SDP_S_STATUS_we;
  output    d2l_NVDLA_SDP_S_STATUS_re;
  output     [31:0] d2l_NVDLA_SDP_S_POINTER_w;
  output    d2l_NVDLA_SDP_S_POINTER_we;
  output    d2l_NVDLA_SDP_S_POINTER_re;
  output     [31:0] d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_w;
  output    d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_we;
  output    d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_re;
  output     [31:0] d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_w;
  output    d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_we;
  output    d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_re;
  output     [31:0] d2l_NVDLA_SDP_S_LUT_CFG_w;
  output    d2l_NVDLA_SDP_S_LUT_CFG_we;
  output    d2l_NVDLA_SDP_S_LUT_CFG_re;
  output     [31:0] d2l_NVDLA_SDP_S_LUT_INFO_w;
  output    d2l_NVDLA_SDP_S_LUT_INFO_we;
  output    d2l_NVDLA_SDP_S_LUT_INFO_re;
  output     [31:0] d2l_NVDLA_SDP_S_LUT_LE_START_w;
  output    d2l_NVDLA_SDP_S_LUT_LE_START_we;
  output    d2l_NVDLA_SDP_S_LUT_LE_START_re;
  output     [31:0] d2l_NVDLA_SDP_S_LUT_LE_END_w;
  output    d2l_NVDLA_SDP_S_LUT_LE_END_we;
  output    d2l_NVDLA_SDP_S_LUT_LE_END_re;
  output     [31:0] d2l_NVDLA_SDP_S_LUT_LO_START_w;
  output    d2l_NVDLA_SDP_S_LUT_LO_START_we;
  output    d2l_NVDLA_SDP_S_LUT_LO_START_re;
  output     [31:0] d2l_NVDLA_SDP_S_LUT_LO_END_w;
  output    d2l_NVDLA_SDP_S_LUT_LO_END_we;
  output    d2l_NVDLA_SDP_S_LUT_LO_END_re;
  output     [31:0] d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_w;
  output    d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_we;
  output    d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_re;
  output     [31:0] d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_w;
  output    d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_we;
  output    d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_re;
  output     [31:0] d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_w;
  output    d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_we;
  output    d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_re;
  output     [31:0] d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_w;
  output    d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_we;
  output    d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_re;
  output     [31:0] d2l_NVDLA_SDP_D_OP_ENABLE_w;
  output    d2l_NVDLA_SDP_D_OP_ENABLE_we;
  output    d2l_NVDLA_SDP_D_OP_ENABLE_re;
  output     [31:0] d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_w;
  output    d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_we;
  output    d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_re;
  output     [31:0] d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_w;
  output    d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_we;
  output    d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_re;
  output     [31:0] d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_w;
  output    d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_we;
  output    d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_re;
  output     [31:0] d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_w;
  output    d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_we;
  output    d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_re;
  output     [31:0] d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_w;
  output    d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_we;
  output    d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_re;
  output     [31:0] d2l_NVDLA_SDP_D_DST_LINE_STRIDE_w;
  output    d2l_NVDLA_SDP_D_DST_LINE_STRIDE_we;
  output    d2l_NVDLA_SDP_D_DST_LINE_STRIDE_re;
  output     [31:0] d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_w;
  output    d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_we;
  output    d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_re;
  output     [31:0] d2l_NVDLA_SDP_D_DP_BS_CFG_w;
  output    d2l_NVDLA_SDP_D_DP_BS_CFG_we;
  output    d2l_NVDLA_SDP_D_DP_BS_CFG_re;
  output     [31:0] d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_w;
  output    d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_we;
  output    d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_re;
  output     [31:0] d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_w;
  output    d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_we;
  output    d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_re;
  output     [31:0] d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_w;
  output    d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_we;
  output    d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_re;
  output     [31:0] d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_w;
  output    d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_we;
  output    d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_re;
  output     [31:0] d2l_NVDLA_SDP_D_DP_BN_CFG_w;
  output    d2l_NVDLA_SDP_D_DP_BN_CFG_we;
  output    d2l_NVDLA_SDP_D_DP_BN_CFG_re;
  output     [31:0] d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_w;
  output    d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_we;
  output    d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_re;
  output     [31:0] d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_w;
  output    d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_we;
  output    d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_re;
  output     [31:0] d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_w;
  output    d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_we;
  output    d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_re;
  output     [31:0] d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_w;
  output    d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_we;
  output    d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_re;
  output     [31:0] d2l_NVDLA_SDP_D_DP_EW_CFG_w;
  output    d2l_NVDLA_SDP_D_DP_EW_CFG_we;
  output    d2l_NVDLA_SDP_D_DP_EW_CFG_re;
  output     [31:0] d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_w;
  output    d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_we;
  output    d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_re;
  output     [31:0] d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_w;
  output    d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_we;
  output    d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_re;
  output     [31:0] d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_w;
  output    d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_we;
  output    d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_re;
  output     [31:0] d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_w;
  output    d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_we;
  output    d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_re;
  output     [31:0] d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_w;
  output    d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_we;
  output    d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_re;
  output     [31:0] d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_w;
  output    d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_we;
  output    d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_re;
  output     [31:0] d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_w;
  output    d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_we;
  output    d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_re;
  output     [31:0] d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_w;
  output    d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_we;
  output    d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_re;
  output     [31:0] d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_w;
  output    d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_we;
  output    d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_re;
  output     [31:0] d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_w;
  output    d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_we;
  output    d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_re;
  output     [31:0] d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_w;
  output    d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_we;
  output    d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_re;
  output     [31:0] d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_w;
  output    d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_we;
  output    d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_re;
  output     [31:0] d2l_NVDLA_SDP_D_DST_DMA_CFG_w;
  output    d2l_NVDLA_SDP_D_DST_DMA_CFG_we;
  output    d2l_NVDLA_SDP_D_DST_DMA_CFG_re;
  output     [31:0] d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_w;
  output    d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_we;
  output    d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_re;
  output     [31:0] d2l_NVDLA_SDP_D_DATA_FORMAT_w;
  output    d2l_NVDLA_SDP_D_DATA_FORMAT_we;
  output    d2l_NVDLA_SDP_D_DATA_FORMAT_re;
  output     [31:0] d2l_NVDLA_SDP_D_CVT_OFFSET_w;
  output    d2l_NVDLA_SDP_D_CVT_OFFSET_we;
  output    d2l_NVDLA_SDP_D_CVT_OFFSET_re;
  output     [31:0] d2l_NVDLA_SDP_D_CVT_SCALE_w;
  output    d2l_NVDLA_SDP_D_CVT_SCALE_we;
  output    d2l_NVDLA_SDP_D_CVT_SCALE_re;
  output     [31:0] d2l_NVDLA_SDP_D_CVT_SHIFT_w;
  output    d2l_NVDLA_SDP_D_CVT_SHIFT_we;
  output    d2l_NVDLA_SDP_D_CVT_SHIFT_re;
  output     [31:0] d2l_NVDLA_SDP_D_STATUS_w;
  output    d2l_NVDLA_SDP_D_STATUS_we;
  output    d2l_NVDLA_SDP_D_STATUS_re;
  output     [31:0] d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_w;
  output    d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_we;
  output    d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_re;
  output     [31:0] d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_w;
  output    d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_we;
  output    d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_re;
  output     [31:0] d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_w;
  output    d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_we;
  output    d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_re;
  output     [31:0] d2l_NVDLA_SDP_D_PERF_ENABLE_w;
  output    d2l_NVDLA_SDP_D_PERF_ENABLE_we;
  output    d2l_NVDLA_SDP_D_PERF_ENABLE_re;
  output     [31:0] d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_w;
  output    d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_we;
  output    d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_re;
  output     [31:0] d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_w;
  output    d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_we;
  output    d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_re;
  output     [31:0] d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_w;
  output    d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_we;
  output    d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_re;
  output     [31:0] d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_w;
  output    d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_we;
  output    d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_re;
  output     [31:0] d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_w;
  output    d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_we;
  output    d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_re;
  output     [31:0] d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_w;
  output    d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_we;
  output    d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_re;
  output     [31:0] d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_w;
  output    d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_we;
  output    d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_re;


  //------- wire defines
  wire   [31:0] pio_dec_write_data;
  wire   [15:2] pio_dec_address;
  wire  pio_dec_read;
  wire  pio_dec_write;
  wire   [39:0] block_sel_addr;
  wire  block_sel;
  wire  leaf_dec_valid_active;
  wire  leaf_dec_wr_dvld_active;
  
  //------- reg defines
  reg   [31:0] d2l_NVDLA_SDP_S_STATUS_w;
  reg  d2l_NVDLA_SDP_S_STATUS_we;
  reg  d2l_NVDLA_SDP_S_STATUS_re;
  reg   [31:0] d2l_NVDLA_SDP_S_POINTER_w;
  reg  d2l_NVDLA_SDP_S_POINTER_we;
  reg  d2l_NVDLA_SDP_S_POINTER_re;
  reg   [31:0] d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_w;
  reg  d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_we;
  reg  d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_re;
  reg   [31:0] d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_w;
  reg  d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_we;
  reg  d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_re;
  reg   [31:0] d2l_NVDLA_SDP_S_LUT_CFG_w;
  reg  d2l_NVDLA_SDP_S_LUT_CFG_we;
  reg  d2l_NVDLA_SDP_S_LUT_CFG_re;
  reg   [31:0] d2l_NVDLA_SDP_S_LUT_INFO_w;
  reg  d2l_NVDLA_SDP_S_LUT_INFO_we;
  reg  d2l_NVDLA_SDP_S_LUT_INFO_re;
  reg   [31:0] d2l_NVDLA_SDP_S_LUT_LE_START_w;
  reg  d2l_NVDLA_SDP_S_LUT_LE_START_we;
  reg  d2l_NVDLA_SDP_S_LUT_LE_START_re;
  reg   [31:0] d2l_NVDLA_SDP_S_LUT_LE_END_w;
  reg  d2l_NVDLA_SDP_S_LUT_LE_END_we;
  reg  d2l_NVDLA_SDP_S_LUT_LE_END_re;
  reg   [31:0] d2l_NVDLA_SDP_S_LUT_LO_START_w;
  reg  d2l_NVDLA_SDP_S_LUT_LO_START_we;
  reg  d2l_NVDLA_SDP_S_LUT_LO_START_re;
  reg   [31:0] d2l_NVDLA_SDP_S_LUT_LO_END_w;
  reg  d2l_NVDLA_SDP_S_LUT_LO_END_we;
  reg  d2l_NVDLA_SDP_S_LUT_LO_END_re;
  reg   [31:0] d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_w;
  reg  d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_we;
  reg  d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_re;
  reg   [31:0] d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_w;
  reg  d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_we;
  reg  d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_re;
  reg   [31:0] d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_w;
  reg  d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_we;
  reg  d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_re;
  reg   [31:0] d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_w;
  reg  d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_we;
  reg  d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_re;
  reg   [31:0] d2l_NVDLA_SDP_D_OP_ENABLE_w;
  reg  d2l_NVDLA_SDP_D_OP_ENABLE_we;
  reg  d2l_NVDLA_SDP_D_OP_ENABLE_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_w;
  reg  d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_we;
  reg  d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_w;
  reg  d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_we;
  reg  d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_w;
  reg  d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_we;
  reg  d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_w;
  reg  d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_we;
  reg  d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_w;
  reg  d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_we;
  reg  d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DST_LINE_STRIDE_w;
  reg  d2l_NVDLA_SDP_D_DST_LINE_STRIDE_we;
  reg  d2l_NVDLA_SDP_D_DST_LINE_STRIDE_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_w;
  reg  d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_we;
  reg  d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DP_BS_CFG_w;
  reg  d2l_NVDLA_SDP_D_DP_BS_CFG_we;
  reg  d2l_NVDLA_SDP_D_DP_BS_CFG_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_w;
  reg  d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_we;
  reg  d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_w;
  reg  d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_we;
  reg  d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_w;
  reg  d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_we;
  reg  d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_w;
  reg  d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_we;
  reg  d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DP_BN_CFG_w;
  reg  d2l_NVDLA_SDP_D_DP_BN_CFG_we;
  reg  d2l_NVDLA_SDP_D_DP_BN_CFG_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_w;
  reg  d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_we;
  reg  d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_w;
  reg  d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_we;
  reg  d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_w;
  reg  d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_we;
  reg  d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_w;
  reg  d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_we;
  reg  d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DP_EW_CFG_w;
  reg  d2l_NVDLA_SDP_D_DP_EW_CFG_we;
  reg  d2l_NVDLA_SDP_D_DP_EW_CFG_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_w;
  reg  d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_we;
  reg  d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_w;
  reg  d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_we;
  reg  d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_w;
  reg  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_we;
  reg  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_w;
  reg  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_we;
  reg  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_w;
  reg  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_we;
  reg  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_w;
  reg  d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_we;
  reg  d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_w;
  reg  d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_we;
  reg  d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_w;
  reg  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_we;
  reg  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_w;
  reg  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_we;
  reg  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_w;
  reg  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_we;
  reg  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_w;
  reg  d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_we;
  reg  d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_re;
  reg   [31:0] d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_w;
  reg  d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_we;
  reg  d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DST_DMA_CFG_w;
  reg  d2l_NVDLA_SDP_D_DST_DMA_CFG_we;
  reg  d2l_NVDLA_SDP_D_DST_DMA_CFG_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_w;
  reg  d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_we;
  reg  d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_re;
  reg   [31:0] d2l_NVDLA_SDP_D_DATA_FORMAT_w;
  reg  d2l_NVDLA_SDP_D_DATA_FORMAT_we;
  reg  d2l_NVDLA_SDP_D_DATA_FORMAT_re;
  reg   [31:0] d2l_NVDLA_SDP_D_CVT_OFFSET_w;
  reg  d2l_NVDLA_SDP_D_CVT_OFFSET_we;
  reg  d2l_NVDLA_SDP_D_CVT_OFFSET_re;
  reg   [31:0] d2l_NVDLA_SDP_D_CVT_SCALE_w;
  reg  d2l_NVDLA_SDP_D_CVT_SCALE_we;
  reg  d2l_NVDLA_SDP_D_CVT_SCALE_re;
  reg   [31:0] d2l_NVDLA_SDP_D_CVT_SHIFT_w;
  reg  d2l_NVDLA_SDP_D_CVT_SHIFT_we;
  reg  d2l_NVDLA_SDP_D_CVT_SHIFT_re;
  reg   [31:0] d2l_NVDLA_SDP_D_STATUS_w;
  reg  d2l_NVDLA_SDP_D_STATUS_we;
  reg  d2l_NVDLA_SDP_D_STATUS_re;
  reg   [31:0] d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_w;
  reg  d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_we;
  reg  d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_re;
  reg   [31:0] d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_w;
  reg  d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_we;
  reg  d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_re;
  reg   [31:0] d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_w;
  reg  d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_we;
  reg  d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_re;
  reg   [31:0] d2l_NVDLA_SDP_D_PERF_ENABLE_w;
  reg  d2l_NVDLA_SDP_D_PERF_ENABLE_we;
  reg  d2l_NVDLA_SDP_D_PERF_ENABLE_re;
  reg   [31:0] d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_w;
  reg  d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_we;
  reg  d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_re;
  reg   [31:0] d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_w;
  reg  d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_we;
  reg  d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_re;
  reg   [31:0] d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_w;
  reg  d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_we;
  reg  d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_re;
  reg   [31:0] d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_w;
  reg  d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_we;
  reg  d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_re;
  reg   [31:0] d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_w;
  reg  d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_we;
  reg  d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_re;
  reg   [31:0] d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_w;
  reg  d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_we;
  reg  d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_re;
  reg   [31:0] d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_w;
  reg  d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_we;
  reg  d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_re;
  reg  leaf_dec_valid_hld1;
  reg  leaf_dec_valid_hld1_next;
  reg  leaf_dec_wr_dvld_hld1;
  reg  leaf_dec_wr_dvld_hld1_next;
  reg  pio_write_active;
  reg  pio_read_active;
  reg   [15:2] pio_dec_address_d1;
  reg   [31:0] pio_dec_write_data_d1;
  reg   [31:0] dec_pio_read_data;
  reg   [31:0] dec_pio_read_data_d1;
  reg  dec_pio_ack;
  reg  dec_pio_nack;
  reg  dec_pio_ack_next;
  reg  dec_pio_nack_next;
  reg  pio_internal_ack;
  reg  pio_internal_nack;
  reg  pio_external_ack;
  reg  pio_external_nack;
  reg  pio_external_ack_next;
  reg  pio_external_nack_next;
  reg  pio_no_acks;
  reg  pio_activate_write;
  reg  pio_activate_read;
  reg   [31:0] dec_pio_read_data_next;
  reg  external_transaction_active;
  
  
  //------- assigns
  assign  pio_dec_write_data = leaf_dec_wr_data;
  assign  dec_leaf_rd_data = dec_pio_read_data;
  assign  dec_leaf_ack = dec_pio_ack;
  assign  dec_leaf_nack = dec_pio_nack;
  assign  pio_dec_address = leaf_dec_addr [15:2] ;
  assign  block_sel_addr = 40'h0;
  assign  block_sel = leaf_dec_block_sel;
  assign  leaf_dec_wr_dvld_active = leaf_dec_wr_dvld | leaf_dec_wr_dvld_hld1;
  assign  leaf_dec_valid_active = leaf_dec_valid | leaf_dec_valid_hld1;
  assign  dec_leaf_accept = leaf_dec_valid & block_sel;
  assign  dec_leaf_reject = leaf_dec_valid & ~block_sel;
  assign  pio_dec_read = block_sel & leaf_dec_valid_active & (leaf_dec_cycle == 2'b10);
  assign  pio_dec_write = block_sel & leaf_dec_wr_dvld_active & (leaf_dec_cycle[1] == 1'b0);
  assign  dec_leaf_retry_atomic = 1'b0;
  assign  dec_leaf_data_width = 3'b0;
  
  //------- combinatorial assigns for pio read data
  always @ (*) begin
    dec_pio_read_data = dec_pio_read_data_d1;
  end
  
  //------- reg assigns for pio read data
  always @ (posedge clk) begin
    if (reset) begin
      dec_pio_read_data_d1 <= #1  32'b0;
    end
    else begin
      dec_pio_read_data_d1 <= #1 dec_pio_read_data_next;
    end
  end
  
  //------- reg assigns for pio i/f
  always @ (posedge clk) begin
    if (reset) begin
      pio_write_active <= #1  1'b0;
      pio_read_active <= #1  1'b0;
    end
    else begin
      pio_write_active <= #1  pio_write_active ? pio_no_acks : pio_activate_write;
      pio_read_active <= #1  pio_read_active ? pio_no_acks : pio_activate_read;
      pio_dec_address_d1 <= #1   pio_dec_address;
      pio_dec_write_data_d1 <= #1  pio_dec_write_data;
    end
  end
  
  //------- combinatorial assigns for leaf i/f
  always @ (*) begin
    leaf_dec_valid_hld1_next = leaf_dec_valid | leaf_dec_valid_hld1;
    if (dec_pio_ack_next | dec_pio_nack_next) leaf_dec_valid_hld1_next = 1'b0;
    leaf_dec_wr_dvld_hld1_next = leaf_dec_wr_dvld | leaf_dec_wr_dvld_hld1;
    if (dec_pio_ack_next | dec_pio_nack_next | leaf_dec_valid) leaf_dec_wr_dvld_hld1_next = 1'b0;
  end
  
  //------- reg assigns for leaf i/f
  always @ (posedge clk) begin
    if (reset) begin
      leaf_dec_valid_hld1 <= #1  1'b0;
      leaf_dec_wr_dvld_hld1 <= #1  1'b0;
    end
    else begin
      leaf_dec_valid_hld1 <= #1 leaf_dec_valid_hld1_next;
      leaf_dec_wr_dvld_hld1 <= #1 leaf_dec_wr_dvld_hld1_next;
    end
  end
  
  //------- combinatorial assigns for pio ack/nack
  always @ (*) begin
    pio_internal_nack = (pio_read_active | pio_write_active) & ~pio_internal_ack & ~external_transaction_active;
    dec_pio_ack_next = (pio_internal_ack | (pio_external_ack_next & external_transaction_active));
    dec_pio_nack_next = (pio_internal_nack | (pio_external_nack_next & external_transaction_active));
    pio_no_acks = ~(dec_pio_ack | dec_pio_nack | pio_external_ack | pio_external_nack);
    pio_activate_write = (pio_dec_write & ~(dec_pio_ack | dec_pio_nack));
    pio_activate_read = (pio_dec_read & ~(dec_pio_ack | dec_pio_nack));
  end
  
  //------- reg assigns for pio ack/nack
  always @ (posedge clk) begin
    if (reset) begin
      dec_pio_ack <= #1 1'b0;
      dec_pio_nack <= #1 1'b0;
      pio_external_ack <= #1  1'b0;
      pio_external_nack <= #1  1'b0;
    end
    else begin
      dec_pio_ack <= #1 dec_pio_ack ? 1'b0 : dec_pio_ack_next;
      dec_pio_nack <= #1 dec_pio_nack ? 1'b0 : dec_pio_nack_next;
      pio_external_ack <= #1 pio_external_ack_next;
      pio_external_nack <= #1 pio_external_nack_next;
    end
  end
  
  
  //------- address decode
  always @ (*) begin
    pio_internal_ack = 1'b0;
    external_transaction_active = 1'b0;
    pio_external_ack_next = 1'b0;
    pio_external_nack_next = 1'b0;
    dec_pio_read_data_next = 32'b0;
    
    d2l_NVDLA_SDP_S_STATUS_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_S_STATUS_we = 1'b0;
    d2l_NVDLA_SDP_S_STATUS_re = 1'b0;
    d2l_NVDLA_SDP_S_POINTER_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_S_POINTER_we = 1'b0;
    d2l_NVDLA_SDP_S_POINTER_re = 1'b0;
    d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_we = 1'b0;
    d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_re = 1'b0;
    d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_we = 1'b0;
    d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_re = 1'b0;
    d2l_NVDLA_SDP_S_LUT_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_S_LUT_CFG_we = 1'b0;
    d2l_NVDLA_SDP_S_LUT_CFG_re = 1'b0;
    d2l_NVDLA_SDP_S_LUT_INFO_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_S_LUT_INFO_we = 1'b0;
    d2l_NVDLA_SDP_S_LUT_INFO_re = 1'b0;
    d2l_NVDLA_SDP_S_LUT_LE_START_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_S_LUT_LE_START_we = 1'b0;
    d2l_NVDLA_SDP_S_LUT_LE_START_re = 1'b0;
    d2l_NVDLA_SDP_S_LUT_LE_END_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_S_LUT_LE_END_we = 1'b0;
    d2l_NVDLA_SDP_S_LUT_LE_END_re = 1'b0;
    d2l_NVDLA_SDP_S_LUT_LO_START_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_S_LUT_LO_START_we = 1'b0;
    d2l_NVDLA_SDP_S_LUT_LO_START_re = 1'b0;
    d2l_NVDLA_SDP_S_LUT_LO_END_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_S_LUT_LO_END_we = 1'b0;
    d2l_NVDLA_SDP_S_LUT_LO_END_re = 1'b0;
    d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_we = 1'b0;
    d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_re = 1'b0;
    d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_we = 1'b0;
    d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_re = 1'b0;
    d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_we = 1'b0;
    d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_re = 1'b0;
    d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_we = 1'b0;
    d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_re = 1'b0;
    d2l_NVDLA_SDP_D_OP_ENABLE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_OP_ENABLE_we = 1'b0;
    d2l_NVDLA_SDP_D_OP_ENABLE_re = 1'b0;
    d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_we = 1'b0;
    d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_re = 1'b0;
    d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_we = 1'b0;
    d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_re = 1'b0;
    d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_we = 1'b0;
    d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_re = 1'b0;
    d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_we = 1'b0;
    d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_re = 1'b0;
    d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_we = 1'b0;
    d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_re = 1'b0;
    d2l_NVDLA_SDP_D_DST_LINE_STRIDE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DST_LINE_STRIDE_we = 1'b0;
    d2l_NVDLA_SDP_D_DST_LINE_STRIDE_re = 1'b0;
    d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_we = 1'b0;
    d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_re = 1'b0;
    d2l_NVDLA_SDP_D_DP_BS_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DP_BS_CFG_we = 1'b0;
    d2l_NVDLA_SDP_D_DP_BS_CFG_re = 1'b0;
    d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_we = 1'b0;
    d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_re = 1'b0;
    d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_we = 1'b0;
    d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_re = 1'b0;
    d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_we = 1'b0;
    d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_re = 1'b0;
    d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_we = 1'b0;
    d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_re = 1'b0;
    d2l_NVDLA_SDP_D_DP_BN_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DP_BN_CFG_we = 1'b0;
    d2l_NVDLA_SDP_D_DP_BN_CFG_re = 1'b0;
    d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_we = 1'b0;
    d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_re = 1'b0;
    d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_we = 1'b0;
    d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_re = 1'b0;
    d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_we = 1'b0;
    d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_re = 1'b0;
    d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_we = 1'b0;
    d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_re = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DP_EW_CFG_we = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_CFG_re = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_we = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_re = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_we = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_re = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_we = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_re = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_we = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_re = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_we = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_re = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_we = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_re = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_we = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_re = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_we = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_re = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_we = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_re = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_we = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_re = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_we = 1'b0;
    d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_re = 1'b0;
    d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_we = 1'b0;
    d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_re = 1'b0;
    d2l_NVDLA_SDP_D_DST_DMA_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DST_DMA_CFG_we = 1'b0;
    d2l_NVDLA_SDP_D_DST_DMA_CFG_re = 1'b0;
    d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_we = 1'b0;
    d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_re = 1'b0;
    d2l_NVDLA_SDP_D_DATA_FORMAT_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_DATA_FORMAT_we = 1'b0;
    d2l_NVDLA_SDP_D_DATA_FORMAT_re = 1'b0;
    d2l_NVDLA_SDP_D_CVT_OFFSET_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_CVT_OFFSET_we = 1'b0;
    d2l_NVDLA_SDP_D_CVT_OFFSET_re = 1'b0;
    d2l_NVDLA_SDP_D_CVT_SCALE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_CVT_SCALE_we = 1'b0;
    d2l_NVDLA_SDP_D_CVT_SCALE_re = 1'b0;
    d2l_NVDLA_SDP_D_CVT_SHIFT_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_CVT_SHIFT_we = 1'b0;
    d2l_NVDLA_SDP_D_CVT_SHIFT_re = 1'b0;
    d2l_NVDLA_SDP_D_STATUS_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_STATUS_we = 1'b0;
    d2l_NVDLA_SDP_D_STATUS_re = 1'b0;
    d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_we = 1'b0;
    d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_re = 1'b0;
    d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_we = 1'b0;
    d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_re = 1'b0;
    d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_we = 1'b0;
    d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_re = 1'b0;
    d2l_NVDLA_SDP_D_PERF_ENABLE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_PERF_ENABLE_we = 1'b0;
    d2l_NVDLA_SDP_D_PERF_ENABLE_re = 1'b0;
    d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_we = 1'b0;
    d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_re = 1'b0;
    d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_we = 1'b0;
    d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_re = 1'b0;
    d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_we = 1'b0;
    d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_re = 1'b0;
    d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_we = 1'b0;
    d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_re = 1'b0;
    d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_we = 1'b0;
    d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_re = 1'b0;
    d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_we = 1'b0;
    d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_re = 1'b0;
    d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_we = 1'b0;
    d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_re = 1'b0;
    
    casez(pio_dec_address_d1)
    //  Register: NVDLA_SDP.S_STATUS     Address: 0x9000     External: false
    14'b10010000000000:
      begin
        d2l_NVDLA_SDP_S_STATUS_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_S_STATUS_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_S_STATUS_r;
      end
    //  Register: NVDLA_SDP.S_POINTER     Address: 0x9004     External: false
    14'b10010000000001:
      begin
        d2l_NVDLA_SDP_S_POINTER_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_S_POINTER_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_S_POINTER_r;
      end
    //  Register: NVDLA_SDP.S_LUT_ACCESS_CFG     Address: 0x9008     External: false
    14'b10010000000010:
      begin
        d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_S_LUT_ACCESS_CFG_r;
      end
    //  Register: NVDLA_SDP.S_LUT_ACCESS_DATA     Address: 0x900c     External: false
    14'b10010000000011:
      begin
        d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_S_LUT_ACCESS_DATA_r;
      end
    //  Register: NVDLA_SDP.S_LUT_CFG     Address: 0x9010     External: false
    14'b10010000000100:
      begin
        d2l_NVDLA_SDP_S_LUT_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_S_LUT_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_S_LUT_CFG_r;
      end
    //  Register: NVDLA_SDP.S_LUT_INFO     Address: 0x9014     External: false
    14'b10010000000101:
      begin
        d2l_NVDLA_SDP_S_LUT_INFO_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_S_LUT_INFO_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_S_LUT_INFO_r;
      end
    //  Register: NVDLA_SDP.S_LUT_LE_START     Address: 0x9018     External: false
    14'b10010000000110:
      begin
        d2l_NVDLA_SDP_S_LUT_LE_START_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_S_LUT_LE_START_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_S_LUT_LE_START_r;
      end
    //  Register: NVDLA_SDP.S_LUT_LE_END     Address: 0x901c     External: false
    14'b10010000000111:
      begin
        d2l_NVDLA_SDP_S_LUT_LE_END_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_S_LUT_LE_END_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_S_LUT_LE_END_r;
      end
    //  Register: NVDLA_SDP.S_LUT_LO_START     Address: 0x9020     External: false
    14'b10010000001000:
      begin
        d2l_NVDLA_SDP_S_LUT_LO_START_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_S_LUT_LO_START_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_S_LUT_LO_START_r;
      end
    //  Register: NVDLA_SDP.S_LUT_LO_END     Address: 0x9024     External: false
    14'b10010000001001:
      begin
        d2l_NVDLA_SDP_S_LUT_LO_END_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_S_LUT_LO_END_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_S_LUT_LO_END_r;
      end
    //  Register: NVDLA_SDP.S_LUT_LE_SLOPE_SCALE     Address: 0x9028     External: false
    14'b10010000001010:
      begin
        d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_r;
      end
    //  Register: NVDLA_SDP.S_LUT_LE_SLOPE_SHIFT     Address: 0x902c     External: false
    14'b10010000001011:
      begin
        d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_r;
      end
    //  Register: NVDLA_SDP.S_LUT_LO_SLOPE_SCALE     Address: 0x9030     External: false
    14'b10010000001100:
      begin
        d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_r;
      end
    //  Register: NVDLA_SDP.S_LUT_LO_SLOPE_SHIFT     Address: 0x9034     External: false
    14'b10010000001101:
      begin
        d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_r;
      end
    //  Register: NVDLA_SDP.D_OP_ENABLE     Address: 0x9038     External: false
    14'b10010000001110:
      begin
        d2l_NVDLA_SDP_D_OP_ENABLE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_OP_ENABLE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_OP_ENABLE_r;
      end
    //  Register: NVDLA_SDP.D_DATA_CUBE_WIDTH     Address: 0x903c     External: false
    14'b10010000001111:
      begin
        d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DATA_CUBE_WIDTH_r;
      end
    //  Register: NVDLA_SDP.D_DATA_CUBE_HEIGHT     Address: 0x9040     External: false
    14'b10010000010000:
      begin
        d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DATA_CUBE_HEIGHT_r;
      end
    //  Register: NVDLA_SDP.D_DATA_CUBE_CHANNEL     Address: 0x9044     External: false
    14'b10010000010001:
      begin
        d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DATA_CUBE_CHANNEL_r;
      end
    //  Register: NVDLA_SDP.D_DST_BASE_ADDR_LOW     Address: 0x9048     External: false
    14'b10010000010010:
      begin
        d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DST_BASE_ADDR_LOW_r;
      end
    //  Register: NVDLA_SDP.D_DST_BASE_ADDR_HIGH     Address: 0x904c     External: false
    14'b10010000010011:
      begin
        d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_r;
      end
    //  Register: NVDLA_SDP.D_DST_LINE_STRIDE     Address: 0x9050     External: false
    14'b10010000010100:
      begin
        d2l_NVDLA_SDP_D_DST_LINE_STRIDE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DST_LINE_STRIDE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DST_LINE_STRIDE_r;
      end
    //  Register: NVDLA_SDP.D_DST_SURFACE_STRIDE     Address: 0x9054     External: false
    14'b10010000010101:
      begin
        d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DST_SURFACE_STRIDE_r;
      end
    //  Register: NVDLA_SDP.D_DP_BS_CFG     Address: 0x9058     External: false
    14'b10010000010110:
      begin
        d2l_NVDLA_SDP_D_DP_BS_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DP_BS_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DP_BS_CFG_r;
      end
    //  Register: NVDLA_SDP.D_DP_BS_ALU_CFG     Address: 0x905c     External: false
    14'b10010000010111:
      begin
        d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DP_BS_ALU_CFG_r;
      end
    //  Register: NVDLA_SDP.D_DP_BS_ALU_SRC_VALUE     Address: 0x9060     External: false
    14'b10010000011000:
      begin
        d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_r;
      end
    //  Register: NVDLA_SDP.D_DP_BS_MUL_CFG     Address: 0x9064     External: false
    14'b10010000011001:
      begin
        d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DP_BS_MUL_CFG_r;
      end
    //  Register: NVDLA_SDP.D_DP_BS_MUL_SRC_VALUE     Address: 0x9068     External: false
    14'b10010000011010:
      begin
        d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_r;
      end
    //  Register: NVDLA_SDP.D_DP_BN_CFG     Address: 0x906c     External: false
    14'b10010000011011:
      begin
        d2l_NVDLA_SDP_D_DP_BN_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DP_BN_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DP_BN_CFG_r;
      end
    //  Register: NVDLA_SDP.D_DP_BN_ALU_CFG     Address: 0x9070     External: false
    14'b10010000011100:
      begin
        d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DP_BN_ALU_CFG_r;
      end
    //  Register: NVDLA_SDP.D_DP_BN_ALU_SRC_VALUE     Address: 0x9074     External: false
    14'b10010000011101:
      begin
        d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_r;
      end
    //  Register: NVDLA_SDP.D_DP_BN_MUL_CFG     Address: 0x9078     External: false
    14'b10010000011110:
      begin
        d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DP_BN_MUL_CFG_r;
      end
    //  Register: NVDLA_SDP.D_DP_BN_MUL_SRC_VALUE     Address: 0x907c     External: false
    14'b10010000011111:
      begin
        d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_r;
      end
    //  Register: NVDLA_SDP.D_DP_EW_CFG     Address: 0x9080     External: false
    14'b10010000100000:
      begin
        d2l_NVDLA_SDP_D_DP_EW_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DP_EW_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DP_EW_CFG_r;
      end
    //  Register: NVDLA_SDP.D_DP_EW_ALU_CFG     Address: 0x9084     External: false
    14'b10010000100001:
      begin
        d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DP_EW_ALU_CFG_r;
      end
    //  Register: NVDLA_SDP.D_DP_EW_ALU_SRC_VALUE     Address: 0x9088     External: false
    14'b10010000100010:
      begin
        d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_r;
      end
    //  Register: NVDLA_SDP.D_DP_EW_ALU_CVT_OFFSET_VALUE     Address: 0x908c     External: false
    14'b10010000100011:
      begin
        d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_r;
      end
    //  Register: NVDLA_SDP.D_DP_EW_ALU_CVT_SCALE_VALUE     Address: 0x9090     External: false
    14'b10010000100100:
      begin
        d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_r;
      end
    //  Register: NVDLA_SDP.D_DP_EW_ALU_CVT_TRUNCATE_VALUE     Address: 0x9094     External: false
    14'b10010000100101:
      begin
        d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_r;
      end
    //  Register: NVDLA_SDP.D_DP_EW_MUL_CFG     Address: 0x9098     External: false
    14'b10010000100110:
      begin
        d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DP_EW_MUL_CFG_r;
      end
    //  Register: NVDLA_SDP.D_DP_EW_MUL_SRC_VALUE     Address: 0x909c     External: false
    14'b10010000100111:
      begin
        d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_r;
      end
    //  Register: NVDLA_SDP.D_DP_EW_MUL_CVT_OFFSET_VALUE     Address: 0x90a0     External: false
    14'b10010000101000:
      begin
        d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_r;
      end
    //  Register: NVDLA_SDP.D_DP_EW_MUL_CVT_SCALE_VALUE     Address: 0x90a4     External: false
    14'b10010000101001:
      begin
        d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_r;
      end
    //  Register: NVDLA_SDP.D_DP_EW_MUL_CVT_TRUNCATE_VALUE     Address: 0x90a8     External: false
    14'b10010000101010:
      begin
        d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_r;
      end
    //  Register: NVDLA_SDP.D_DP_EW_TRUNCATE_VALUE     Address: 0x90ac     External: false
    14'b10010000101011:
      begin
        d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_r;
      end
    //  Register: NVDLA_SDP.D_FEATURE_MODE_CFG     Address: 0x90b0     External: false
    14'b10010000101100:
      begin
        d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_FEATURE_MODE_CFG_r;
      end
    //  Register: NVDLA_SDP.D_DST_DMA_CFG     Address: 0x90b4     External: false
    14'b10010000101101:
      begin
        d2l_NVDLA_SDP_D_DST_DMA_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DST_DMA_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DST_DMA_CFG_r;
      end
    //  Register: NVDLA_SDP.D_DST_BATCH_STRIDE     Address: 0x90b8     External: false
    14'b10010000101110:
      begin
        d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DST_BATCH_STRIDE_r;
      end
    //  Register: NVDLA_SDP.D_DATA_FORMAT     Address: 0x90bc     External: false
    14'b10010000101111:
      begin
        d2l_NVDLA_SDP_D_DATA_FORMAT_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_DATA_FORMAT_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_DATA_FORMAT_r;
      end
    //  Register: NVDLA_SDP.D_CVT_OFFSET     Address: 0x90c0     External: false
    14'b10010000110000:
      begin
        d2l_NVDLA_SDP_D_CVT_OFFSET_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_CVT_OFFSET_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_CVT_OFFSET_r;
      end
    //  Register: NVDLA_SDP.D_CVT_SCALE     Address: 0x90c4     External: false
    14'b10010000110001:
      begin
        d2l_NVDLA_SDP_D_CVT_SCALE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_CVT_SCALE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_CVT_SCALE_r;
      end
    //  Register: NVDLA_SDP.D_CVT_SHIFT     Address: 0x90c8     External: false
    14'b10010000110010:
      begin
        d2l_NVDLA_SDP_D_CVT_SHIFT_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_CVT_SHIFT_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_CVT_SHIFT_r;
      end
    //  Register: NVDLA_SDP.D_STATUS     Address: 0x90cc     External: false
    14'b10010000110011:
      begin
        d2l_NVDLA_SDP_D_STATUS_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_STATUS_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_STATUS_r;
      end
    //  Register: NVDLA_SDP.D_STATUS_NAN_INPUT_NUM     Address: 0x90d0     External: false
    14'b10010000110100:
      begin
        d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_r;
      end
    //  Register: NVDLA_SDP.D_STATUS_INF_INPUT_NUM     Address: 0x90d4     External: false
    14'b10010000110101:
      begin
        d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_r;
      end
    //  Register: NVDLA_SDP.D_STATUS_NAN_OUTPUT_NUM     Address: 0x90d8     External: false
    14'b10010000110110:
      begin
        d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_r;
      end
    //  Register: NVDLA_SDP.D_PERF_ENABLE     Address: 0x90dc     External: false
    14'b10010000110111:
      begin
        d2l_NVDLA_SDP_D_PERF_ENABLE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_PERF_ENABLE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_PERF_ENABLE_r;
      end
    //  Register: NVDLA_SDP.D_PERF_WDMA_WRITE_STALL     Address: 0x90e0     External: false
    14'b10010000111000:
      begin
        d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_r;
      end
    //  Register: NVDLA_SDP.D_PERF_LUT_UFLOW     Address: 0x90e4     External: false
    14'b10010000111001:
      begin
        d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_PERF_LUT_UFLOW_r;
      end
    //  Register: NVDLA_SDP.D_PERF_LUT_OFLOW     Address: 0x90e8     External: false
    14'b10010000111010:
      begin
        d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_PERF_LUT_OFLOW_r;
      end
    //  Register: NVDLA_SDP.D_PERF_OUT_SATURATION     Address: 0x90ec     External: false
    14'b10010000111011:
      begin
        d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_PERF_OUT_SATURATION_r;
      end
    //  Register: NVDLA_SDP.D_PERF_LUT_HYBRID     Address: 0x90f0     External: false
    14'b10010000111100:
      begin
        d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_PERF_LUT_HYBRID_r;
      end
    //  Register: NVDLA_SDP.D_PERF_LUT_LE_HIT     Address: 0x90f4     External: false
    14'b10010000111101:
      begin
        d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_PERF_LUT_LE_HIT_r;
      end
    //  Register: NVDLA_SDP.D_PERF_LUT_LO_HIT     Address: 0x90f8     External: false
    14'b10010000111110:
      begin
        d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_SDP_D_PERF_LUT_LO_HIT_r;
      end
    endcase
  end
  
endmodule

//
//---------- module addrmap_NVDLA_pio
//
module addrmap_NVDLA_pio
(
  clk,
  reset,
  h2l_NVDLA_SDP_S_STATUS_STATUS_0_w,
  h2l_NVDLA_SDP_S_STATUS_STATUS_1_w,
  h2l_NVDLA_SDP_S_POINTER_CONSUMER_w,
  h2l_NVDLA_SDP_D_STATUS_STATUS_UNEQUAL_w,
  h2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_STATUS_NAN_INPUT_NUM_w,
  h2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_STATUS_INF_INPUT_NUM_w,
  h2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_STATUS_NAN_OUTPUT_NUM_w,
  h2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_WDMA_STALL_w,
  h2l_NVDLA_SDP_D_PERF_LUT_UFLOW_LUT_UFLOW_w,
  h2l_NVDLA_SDP_D_PERF_LUT_OFLOW_LUT_OFLOW_w,
  h2l_NVDLA_SDP_D_PERF_OUT_SATURATION_OUT_SATURATION_w,
  h2l_NVDLA_SDP_D_PERF_LUT_HYBRID_LUT_HYBRID_w,
  h2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_LUT_LE_HIT_w,
  h2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_LUT_LO_HIT_w,
  leaf_dec_wr_data,
  leaf_dec_addr,
  leaf_dec_block_sel,
  leaf_dec_valid,
  leaf_dec_wr_dvld,
  leaf_dec_cycle,
  leaf_dec_wr_width,

  l2h_NVDLA_SDP_S_POINTER_PRODUCER_r,
  l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ADDR_r,
  l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_TABLE_ID_r,
  l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ACCESS_TYPE_r,
  l2h_NVDLA_SDP_S_LUT_ACCESS_DATA_LUT_DATA_r,
  l2h_NVDLA_SDP_S_LUT_CFG_LUT_LE_FUNCTION_r,
  l2h_NVDLA_SDP_S_LUT_CFG_LUT_UFLOW_PRIORITY_r,
  l2h_NVDLA_SDP_S_LUT_CFG_LUT_OFLOW_PRIORITY_r,
  l2h_NVDLA_SDP_S_LUT_CFG_LUT_HYBRID_PRIORITY_r,
  l2h_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_OFFSET_r,
  l2h_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_SELECT_r,
  l2h_NVDLA_SDP_S_LUT_INFO_LUT_LO_INDEX_SELECT_r,
  l2h_NVDLA_SDP_S_LUT_LE_START_LUT_LE_START_r,
  l2h_NVDLA_SDP_S_LUT_LE_END_LUT_LE_END_r,
  l2h_NVDLA_SDP_S_LUT_LO_START_LUT_LO_START_r,
  l2h_NVDLA_SDP_S_LUT_LO_END_LUT_LO_END_r,
  l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_UFLOW_SCALE_r,
  l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_OFLOW_SCALE_r,
  l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_UFLOW_SHIFT_r,
  l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_OFLOW_SHIFT_r,
  l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_UFLOW_SCALE_r,
  l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_OFLOW_SCALE_r,
  l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_UFLOW_SHIFT_r,
  l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_OFLOW_SHIFT_r,
  l2h_NVDLA_SDP_D_OP_ENABLE_OP_EN_r,
  l2h_NVDLA_SDP_D_DATA_CUBE_WIDTH_WIDTH_r,
  l2h_NVDLA_SDP_D_DATA_CUBE_HEIGHT_HEIGHT_r,
  l2h_NVDLA_SDP_D_DATA_CUBE_CHANNEL_CHANNEL_r,
  l2h_NVDLA_SDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_r,
  l2h_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_r,
  l2h_NVDLA_SDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_r,
  l2h_NVDLA_SDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_r,
  l2h_NVDLA_SDP_D_DP_BS_CFG_BS_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_ALGO_r,
  l2h_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_PRELU_r,
  l2h_NVDLA_SDP_D_DP_BS_CFG_BS_RELU_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SRC_r,
  l2h_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SHIFT_VALUE_r,
  l2h_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_BS_ALU_OPERAND_r,
  l2h_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SRC_r,
  l2h_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SHIFT_VALUE_r,
  l2h_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_BS_MUL_OPERAND_r,
  l2h_NVDLA_SDP_D_DP_BN_CFG_BN_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_ALGO_r,
  l2h_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_PRELU_r,
  l2h_NVDLA_SDP_D_DP_BN_CFG_BN_RELU_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SRC_r,
  l2h_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SHIFT_VALUE_r,
  l2h_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_BN_ALU_OPERAND_r,
  l2h_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SRC_r,
  l2h_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SHIFT_VALUE_r,
  l2h_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_BN_MUL_OPERAND_r,
  l2h_NVDLA_SDP_D_DP_EW_CFG_EW_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_ALGO_r,
  l2h_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_PRELU_r,
  l2h_NVDLA_SDP_D_DP_EW_CFG_EW_LUT_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_SRC_r,
  l2h_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_CVT_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_EW_ALU_OPERAND_r,
  l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_EW_ALU_CVT_OFFSET_r,
  l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_EW_ALU_CVT_SCALE_r,
  l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_EW_ALU_CVT_TRUNCATE_r,
  l2h_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_SRC_r,
  l2h_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_CVT_BYPASS_r,
  l2h_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_EW_MUL_OPERAND_r,
  l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_EW_MUL_CVT_OFFSET_r,
  l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_EW_MUL_CVT_SCALE_r,
  l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_EW_MUL_CVT_TRUNCATE_r,
  l2h_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_EW_TRUNCATE_r,
  l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_FLYING_MODE_r,
  l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_OUTPUT_DST_r,
  l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_WINOGRAD_r,
  l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_NAN_TO_ZERO_r,
  l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_BATCH_NUMBER_r,
  l2h_NVDLA_SDP_D_DST_DMA_CFG_DST_RAM_TYPE_r,
  l2h_NVDLA_SDP_D_DST_BATCH_STRIDE_DST_BATCH_STRIDE_r,
  l2h_NVDLA_SDP_D_DATA_FORMAT_PROC_PRECISION_r,
  l2h_NVDLA_SDP_D_DATA_FORMAT_OUT_PRECISION_r,
  l2h_NVDLA_SDP_D_CVT_OFFSET_CVT_OFFSET_r,
  l2h_NVDLA_SDP_D_CVT_SCALE_CVT_SCALE_r,
  l2h_NVDLA_SDP_D_CVT_SHIFT_CVT_SHIFT_r,
  l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_DMA_EN_r,
  l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_LUT_EN_r,
  l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_SAT_EN_r,
  l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_NAN_INF_COUNT_EN_r,
  dec_leaf_rd_data,
  dec_leaf_ack,
  dec_leaf_nack,
  dec_leaf_accept,
  dec_leaf_reject,
  dec_leaf_retry_atomic,
  dec_leaf_data_width );

  //------- inputs
  input    clk;
  input    reset;
  input     [1:0] h2l_NVDLA_SDP_S_STATUS_STATUS_0_w;
  input     [1:0] h2l_NVDLA_SDP_S_STATUS_STATUS_1_w;
  input    h2l_NVDLA_SDP_S_POINTER_CONSUMER_w;
  input    h2l_NVDLA_SDP_D_STATUS_STATUS_UNEQUAL_w;
  input     [31:0] h2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_STATUS_NAN_INPUT_NUM_w;
  input     [31:0] h2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_STATUS_INF_INPUT_NUM_w;
  input     [31:0] h2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_STATUS_NAN_OUTPUT_NUM_w;
  input     [31:0] h2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_WDMA_STALL_w;
  input     [31:0] h2l_NVDLA_SDP_D_PERF_LUT_UFLOW_LUT_UFLOW_w;
  input     [31:0] h2l_NVDLA_SDP_D_PERF_LUT_OFLOW_LUT_OFLOW_w;
  input     [31:0] h2l_NVDLA_SDP_D_PERF_OUT_SATURATION_OUT_SATURATION_w;
  input     [31:0] h2l_NVDLA_SDP_D_PERF_LUT_HYBRID_LUT_HYBRID_w;
  input     [31:0] h2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_LUT_LE_HIT_w;
  input     [31:0] h2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_LUT_LO_HIT_w;
  input     [31:0] leaf_dec_wr_data;
  input     [39:0] leaf_dec_addr;
  input    leaf_dec_block_sel;
  input    leaf_dec_valid;
  input    leaf_dec_wr_dvld;
  input     [1:0] leaf_dec_cycle;
  input     [2:0] leaf_dec_wr_width;

  //------- outputs
  output    l2h_NVDLA_SDP_S_POINTER_PRODUCER_r;
  output     [9:0] l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ADDR_r;
  output    l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_TABLE_ID_r;
  output    l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ACCESS_TYPE_r;
  output     [15:0] l2h_NVDLA_SDP_S_LUT_ACCESS_DATA_LUT_DATA_r;
  output    l2h_NVDLA_SDP_S_LUT_CFG_LUT_LE_FUNCTION_r;
  output    l2h_NVDLA_SDP_S_LUT_CFG_LUT_UFLOW_PRIORITY_r;
  output    l2h_NVDLA_SDP_S_LUT_CFG_LUT_OFLOW_PRIORITY_r;
  output    l2h_NVDLA_SDP_S_LUT_CFG_LUT_HYBRID_PRIORITY_r;
  output     [7:0] l2h_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_OFFSET_r;
  output     [7:0] l2h_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_SELECT_r;
  output     [7:0] l2h_NVDLA_SDP_S_LUT_INFO_LUT_LO_INDEX_SELECT_r;
  output     [31:0] l2h_NVDLA_SDP_S_LUT_LE_START_LUT_LE_START_r;
  output     [31:0] l2h_NVDLA_SDP_S_LUT_LE_END_LUT_LE_END_r;
  output     [31:0] l2h_NVDLA_SDP_S_LUT_LO_START_LUT_LO_START_r;
  output     [31:0] l2h_NVDLA_SDP_S_LUT_LO_END_LUT_LO_END_r;
  output     [15:0] l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_UFLOW_SCALE_r;
  output     [15:0] l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_OFLOW_SCALE_r;
  output     [4:0] l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_UFLOW_SHIFT_r;
  output     [4:0] l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_OFLOW_SHIFT_r;
  output     [15:0] l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_UFLOW_SCALE_r;
  output     [15:0] l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_OFLOW_SCALE_r;
  output     [4:0] l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_UFLOW_SHIFT_r;
  output     [4:0] l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_OFLOW_SHIFT_r;
  output    l2h_NVDLA_SDP_D_OP_ENABLE_OP_EN_r;
  output     [12:0] l2h_NVDLA_SDP_D_DATA_CUBE_WIDTH_WIDTH_r;
  output     [12:0] l2h_NVDLA_SDP_D_DATA_CUBE_HEIGHT_HEIGHT_r;
  output     [12:0] l2h_NVDLA_SDP_D_DATA_CUBE_CHANNEL_CHANNEL_r;
  output     [31:0] l2h_NVDLA_SDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_r;
  output     [31:0] l2h_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_r;
  output     [31:0] l2h_NVDLA_SDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_r;
  output     [31:0] l2h_NVDLA_SDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_r;
  output    l2h_NVDLA_SDP_D_DP_BS_CFG_BS_BYPASS_r;
  output    l2h_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_BYPASS_r;
  output     [1:0] l2h_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_ALGO_r;
  output    l2h_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_BYPASS_r;
  output    l2h_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_PRELU_r;
  output    l2h_NVDLA_SDP_D_DP_BS_CFG_BS_RELU_BYPASS_r;
  output    l2h_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SRC_r;
  output     [5:0] l2h_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SHIFT_VALUE_r;
  output     [15:0] l2h_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_BS_ALU_OPERAND_r;
  output    l2h_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SRC_r;
  output     [7:0] l2h_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SHIFT_VALUE_r;
  output     [15:0] l2h_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_BS_MUL_OPERAND_r;
  output    l2h_NVDLA_SDP_D_DP_BN_CFG_BN_BYPASS_r;
  output    l2h_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_BYPASS_r;
  output     [1:0] l2h_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_ALGO_r;
  output    l2h_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_BYPASS_r;
  output    l2h_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_PRELU_r;
  output    l2h_NVDLA_SDP_D_DP_BN_CFG_BN_RELU_BYPASS_r;
  output    l2h_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SRC_r;
  output     [5:0] l2h_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SHIFT_VALUE_r;
  output     [15:0] l2h_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_BN_ALU_OPERAND_r;
  output    l2h_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SRC_r;
  output     [7:0] l2h_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SHIFT_VALUE_r;
  output     [15:0] l2h_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_BN_MUL_OPERAND_r;
  output    l2h_NVDLA_SDP_D_DP_EW_CFG_EW_BYPASS_r;
  output    l2h_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_BYPASS_r;
  output     [1:0] l2h_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_ALGO_r;
  output    l2h_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_BYPASS_r;
  output    l2h_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_PRELU_r;
  output    l2h_NVDLA_SDP_D_DP_EW_CFG_EW_LUT_BYPASS_r;
  output    l2h_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_SRC_r;
  output    l2h_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_CVT_BYPASS_r;
  output     [31:0] l2h_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_EW_ALU_OPERAND_r;
  output     [31:0] l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_EW_ALU_CVT_OFFSET_r;
  output     [15:0] l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_EW_ALU_CVT_SCALE_r;
  output     [5:0] l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_EW_ALU_CVT_TRUNCATE_r;
  output    l2h_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_SRC_r;
  output    l2h_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_CVT_BYPASS_r;
  output     [31:0] l2h_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_EW_MUL_OPERAND_r;
  output     [31:0] l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_EW_MUL_CVT_OFFSET_r;
  output     [15:0] l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_EW_MUL_CVT_SCALE_r;
  output     [5:0] l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_EW_MUL_CVT_TRUNCATE_r;
  output     [9:0] l2h_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_EW_TRUNCATE_r;
  output    l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_FLYING_MODE_r;
  output    l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_OUTPUT_DST_r;
  output    l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_WINOGRAD_r;
  output    l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_NAN_TO_ZERO_r;
  output     [4:0] l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_BATCH_NUMBER_r;
  output    l2h_NVDLA_SDP_D_DST_DMA_CFG_DST_RAM_TYPE_r;
  output     [31:0] l2h_NVDLA_SDP_D_DST_BATCH_STRIDE_DST_BATCH_STRIDE_r;
  output     [1:0] l2h_NVDLA_SDP_D_DATA_FORMAT_PROC_PRECISION_r;
  output     [1:0] l2h_NVDLA_SDP_D_DATA_FORMAT_OUT_PRECISION_r;
  output     [31:0] l2h_NVDLA_SDP_D_CVT_OFFSET_CVT_OFFSET_r;
  output     [15:0] l2h_NVDLA_SDP_D_CVT_SCALE_CVT_SCALE_r;
  output     [5:0] l2h_NVDLA_SDP_D_CVT_SHIFT_CVT_SHIFT_r;
  output    l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_DMA_EN_r;
  output    l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_LUT_EN_r;
  output    l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_SAT_EN_r;
  output    l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_NAN_INF_COUNT_EN_r;
  output     [31:0] dec_leaf_rd_data;
  output    dec_leaf_ack;
  output    dec_leaf_nack;
  output    dec_leaf_accept;
  output    dec_leaf_reject;
  output    dec_leaf_retry_atomic;
  output     [2:0] dec_leaf_data_width;


  //------- wire defines
  wire   [31:0] d2l_NVDLA_SDP_S_STATUS_w;
  wire  d2l_NVDLA_SDP_S_STATUS_we;
  wire  d2l_NVDLA_SDP_S_STATUS_re;
  wire   [31:0] d2l_NVDLA_SDP_S_POINTER_w;
  wire  d2l_NVDLA_SDP_S_POINTER_we;
  wire  d2l_NVDLA_SDP_S_POINTER_re;
  wire   [31:0] d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_w;
  wire  d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_we;
  wire  d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_re;
  wire   [31:0] d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_w;
  wire  d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_we;
  wire  d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_re;
  wire   [31:0] d2l_NVDLA_SDP_S_LUT_CFG_w;
  wire  d2l_NVDLA_SDP_S_LUT_CFG_we;
  wire  d2l_NVDLA_SDP_S_LUT_CFG_re;
  wire   [31:0] d2l_NVDLA_SDP_S_LUT_INFO_w;
  wire  d2l_NVDLA_SDP_S_LUT_INFO_we;
  wire  d2l_NVDLA_SDP_S_LUT_INFO_re;
  wire   [31:0] d2l_NVDLA_SDP_S_LUT_LE_START_w;
  wire  d2l_NVDLA_SDP_S_LUT_LE_START_we;
  wire  d2l_NVDLA_SDP_S_LUT_LE_START_re;
  wire   [31:0] d2l_NVDLA_SDP_S_LUT_LE_END_w;
  wire  d2l_NVDLA_SDP_S_LUT_LE_END_we;
  wire  d2l_NVDLA_SDP_S_LUT_LE_END_re;
  wire   [31:0] d2l_NVDLA_SDP_S_LUT_LO_START_w;
  wire  d2l_NVDLA_SDP_S_LUT_LO_START_we;
  wire  d2l_NVDLA_SDP_S_LUT_LO_START_re;
  wire   [31:0] d2l_NVDLA_SDP_S_LUT_LO_END_w;
  wire  d2l_NVDLA_SDP_S_LUT_LO_END_we;
  wire  d2l_NVDLA_SDP_S_LUT_LO_END_re;
  wire   [31:0] d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_w;
  wire  d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_we;
  wire  d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_re;
  wire   [31:0] d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_w;
  wire  d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_we;
  wire  d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_re;
  wire   [31:0] d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_w;
  wire  d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_we;
  wire  d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_re;
  wire   [31:0] d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_w;
  wire  d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_we;
  wire  d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_re;
  wire   [31:0] d2l_NVDLA_SDP_D_OP_ENABLE_w;
  wire  d2l_NVDLA_SDP_D_OP_ENABLE_we;
  wire  d2l_NVDLA_SDP_D_OP_ENABLE_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_w;
  wire  d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_we;
  wire  d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_w;
  wire  d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_we;
  wire  d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_w;
  wire  d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_we;
  wire  d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_w;
  wire  d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_we;
  wire  d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_w;
  wire  d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_we;
  wire  d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DST_LINE_STRIDE_w;
  wire  d2l_NVDLA_SDP_D_DST_LINE_STRIDE_we;
  wire  d2l_NVDLA_SDP_D_DST_LINE_STRIDE_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_w;
  wire  d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_we;
  wire  d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DP_BS_CFG_w;
  wire  d2l_NVDLA_SDP_D_DP_BS_CFG_we;
  wire  d2l_NVDLA_SDP_D_DP_BS_CFG_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_w;
  wire  d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_we;
  wire  d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_w;
  wire  d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_we;
  wire  d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_w;
  wire  d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_we;
  wire  d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_w;
  wire  d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_we;
  wire  d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DP_BN_CFG_w;
  wire  d2l_NVDLA_SDP_D_DP_BN_CFG_we;
  wire  d2l_NVDLA_SDP_D_DP_BN_CFG_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_w;
  wire  d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_we;
  wire  d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_w;
  wire  d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_we;
  wire  d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_w;
  wire  d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_we;
  wire  d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_w;
  wire  d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_we;
  wire  d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DP_EW_CFG_w;
  wire  d2l_NVDLA_SDP_D_DP_EW_CFG_we;
  wire  d2l_NVDLA_SDP_D_DP_EW_CFG_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_w;
  wire  d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_we;
  wire  d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_w;
  wire  d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_we;
  wire  d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_w;
  wire  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_we;
  wire  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_w;
  wire  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_we;
  wire  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_w;
  wire  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_we;
  wire  d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_w;
  wire  d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_we;
  wire  d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_w;
  wire  d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_we;
  wire  d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_w;
  wire  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_we;
  wire  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_w;
  wire  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_we;
  wire  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_w;
  wire  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_we;
  wire  d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_w;
  wire  d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_we;
  wire  d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_re;
  wire   [31:0] d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_w;
  wire  d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_we;
  wire  d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DST_DMA_CFG_w;
  wire  d2l_NVDLA_SDP_D_DST_DMA_CFG_we;
  wire  d2l_NVDLA_SDP_D_DST_DMA_CFG_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_w;
  wire  d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_we;
  wire  d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_re;
  wire   [31:0] d2l_NVDLA_SDP_D_DATA_FORMAT_w;
  wire  d2l_NVDLA_SDP_D_DATA_FORMAT_we;
  wire  d2l_NVDLA_SDP_D_DATA_FORMAT_re;
  wire   [31:0] d2l_NVDLA_SDP_D_CVT_OFFSET_w;
  wire  d2l_NVDLA_SDP_D_CVT_OFFSET_we;
  wire  d2l_NVDLA_SDP_D_CVT_OFFSET_re;
  wire   [31:0] d2l_NVDLA_SDP_D_CVT_SCALE_w;
  wire  d2l_NVDLA_SDP_D_CVT_SCALE_we;
  wire  d2l_NVDLA_SDP_D_CVT_SCALE_re;
  wire   [31:0] d2l_NVDLA_SDP_D_CVT_SHIFT_w;
  wire  d2l_NVDLA_SDP_D_CVT_SHIFT_we;
  wire  d2l_NVDLA_SDP_D_CVT_SHIFT_re;
  wire   [31:0] d2l_NVDLA_SDP_D_STATUS_w;
  wire  d2l_NVDLA_SDP_D_STATUS_we;
  wire  d2l_NVDLA_SDP_D_STATUS_re;
  wire   [31:0] d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_w;
  wire  d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_we;
  wire  d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_re;
  wire   [31:0] d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_w;
  wire  d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_we;
  wire  d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_re;
  wire   [31:0] d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_w;
  wire  d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_we;
  wire  d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_re;
  wire   [31:0] d2l_NVDLA_SDP_D_PERF_ENABLE_w;
  wire  d2l_NVDLA_SDP_D_PERF_ENABLE_we;
  wire  d2l_NVDLA_SDP_D_PERF_ENABLE_re;
  wire   [31:0] d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_w;
  wire  d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_we;
  wire  d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_re;
  wire   [31:0] d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_w;
  wire  d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_we;
  wire  d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_re;
  wire   [31:0] d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_w;
  wire  d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_we;
  wire  d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_re;
  wire   [31:0] d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_w;
  wire  d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_we;
  wire  d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_re;
  wire   [31:0] d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_w;
  wire  d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_we;
  wire  d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_re;
  wire   [31:0] d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_w;
  wire  d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_we;
  wire  d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_re;
  wire   [31:0] d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_w;
  wire  d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_we;
  wire  d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_re;
  wire   [31:0] l2d_NVDLA_SDP_S_STATUS_r;
  wire   [31:0] l2d_NVDLA_SDP_S_POINTER_r;
  wire   [31:0] l2d_NVDLA_SDP_S_LUT_ACCESS_CFG_r;
  wire   [31:0] l2d_NVDLA_SDP_S_LUT_ACCESS_DATA_r;
  wire   [31:0] l2d_NVDLA_SDP_S_LUT_CFG_r;
  wire   [31:0] l2d_NVDLA_SDP_S_LUT_INFO_r;
  wire   [31:0] l2d_NVDLA_SDP_S_LUT_LE_START_r;
  wire   [31:0] l2d_NVDLA_SDP_S_LUT_LE_END_r;
  wire   [31:0] l2d_NVDLA_SDP_S_LUT_LO_START_r;
  wire   [31:0] l2d_NVDLA_SDP_S_LUT_LO_END_r;
  wire   [31:0] l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_r;
  wire   [31:0] l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_r;
  wire   [31:0] l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_r;
  wire   [31:0] l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_r;
  wire   [31:0] l2d_NVDLA_SDP_D_OP_ENABLE_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DATA_CUBE_WIDTH_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DATA_CUBE_HEIGHT_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DATA_CUBE_CHANNEL_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DST_BASE_ADDR_LOW_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DST_LINE_STRIDE_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DST_SURFACE_STRIDE_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DP_BS_CFG_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DP_BS_ALU_CFG_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DP_BS_MUL_CFG_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DP_BN_CFG_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DP_BN_ALU_CFG_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DP_BN_MUL_CFG_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DP_EW_CFG_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DP_EW_ALU_CFG_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DP_EW_MUL_CFG_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_r;
  wire   [31:0] l2d_NVDLA_SDP_D_FEATURE_MODE_CFG_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DST_DMA_CFG_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DST_BATCH_STRIDE_r;
  wire   [31:0] l2d_NVDLA_SDP_D_DATA_FORMAT_r;
  wire   [31:0] l2d_NVDLA_SDP_D_CVT_OFFSET_r;
  wire   [31:0] l2d_NVDLA_SDP_D_CVT_SCALE_r;
  wire   [31:0] l2d_NVDLA_SDP_D_CVT_SHIFT_r;
  wire   [31:0] l2d_NVDLA_SDP_D_STATUS_r;
  wire   [31:0] l2d_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_r;
  wire   [31:0] l2d_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_r;
  wire   [31:0] l2d_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_r;
  wire   [31:0] l2d_NVDLA_SDP_D_PERF_ENABLE_r;
  wire   [31:0] l2d_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_r;
  wire   [31:0] l2d_NVDLA_SDP_D_PERF_LUT_UFLOW_r;
  wire   [31:0] l2d_NVDLA_SDP_D_PERF_LUT_OFLOW_r;
  wire   [31:0] l2d_NVDLA_SDP_D_PERF_OUT_SATURATION_r;
  wire   [31:0] l2d_NVDLA_SDP_D_PERF_LUT_HYBRID_r;
  wire   [31:0] l2d_NVDLA_SDP_D_PERF_LUT_LE_HIT_r;
  wire   [31:0] l2d_NVDLA_SDP_D_PERF_LUT_LO_HIT_r;
  
  
  addrmap_NVDLA_jrdl_decode pio_decode (
    .clk(clk),
    .reset(reset),
    .leaf_dec_wr_data(leaf_dec_wr_data),
    .leaf_dec_addr(leaf_dec_addr),
    .leaf_dec_block_sel(leaf_dec_block_sel),
    .leaf_dec_valid(leaf_dec_valid),
    .leaf_dec_wr_dvld(leaf_dec_wr_dvld),
    .leaf_dec_cycle(leaf_dec_cycle),
    .leaf_dec_wr_width(leaf_dec_wr_width),
    .l2d_NVDLA_SDP_S_STATUS_r(l2d_NVDLA_SDP_S_STATUS_r),
    .l2d_NVDLA_SDP_S_POINTER_r(l2d_NVDLA_SDP_S_POINTER_r),
    .l2d_NVDLA_SDP_S_LUT_ACCESS_CFG_r(l2d_NVDLA_SDP_S_LUT_ACCESS_CFG_r),
    .l2d_NVDLA_SDP_S_LUT_ACCESS_DATA_r(l2d_NVDLA_SDP_S_LUT_ACCESS_DATA_r),
    .l2d_NVDLA_SDP_S_LUT_CFG_r(l2d_NVDLA_SDP_S_LUT_CFG_r),
    .l2d_NVDLA_SDP_S_LUT_INFO_r(l2d_NVDLA_SDP_S_LUT_INFO_r),
    .l2d_NVDLA_SDP_S_LUT_LE_START_r(l2d_NVDLA_SDP_S_LUT_LE_START_r),
    .l2d_NVDLA_SDP_S_LUT_LE_END_r(l2d_NVDLA_SDP_S_LUT_LE_END_r),
    .l2d_NVDLA_SDP_S_LUT_LO_START_r(l2d_NVDLA_SDP_S_LUT_LO_START_r),
    .l2d_NVDLA_SDP_S_LUT_LO_END_r(l2d_NVDLA_SDP_S_LUT_LO_END_r),
    .l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_r(l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_r),
    .l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_r(l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_r),
    .l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_r(l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_r),
    .l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_r(l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_r),
    .l2d_NVDLA_SDP_D_OP_ENABLE_r(l2d_NVDLA_SDP_D_OP_ENABLE_r),
    .l2d_NVDLA_SDP_D_DATA_CUBE_WIDTH_r(l2d_NVDLA_SDP_D_DATA_CUBE_WIDTH_r),
    .l2d_NVDLA_SDP_D_DATA_CUBE_HEIGHT_r(l2d_NVDLA_SDP_D_DATA_CUBE_HEIGHT_r),
    .l2d_NVDLA_SDP_D_DATA_CUBE_CHANNEL_r(l2d_NVDLA_SDP_D_DATA_CUBE_CHANNEL_r),
    .l2d_NVDLA_SDP_D_DST_BASE_ADDR_LOW_r(l2d_NVDLA_SDP_D_DST_BASE_ADDR_LOW_r),
    .l2d_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_r(l2d_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_r),
    .l2d_NVDLA_SDP_D_DST_LINE_STRIDE_r(l2d_NVDLA_SDP_D_DST_LINE_STRIDE_r),
    .l2d_NVDLA_SDP_D_DST_SURFACE_STRIDE_r(l2d_NVDLA_SDP_D_DST_SURFACE_STRIDE_r),
    .l2d_NVDLA_SDP_D_DP_BS_CFG_r(l2d_NVDLA_SDP_D_DP_BS_CFG_r),
    .l2d_NVDLA_SDP_D_DP_BS_ALU_CFG_r(l2d_NVDLA_SDP_D_DP_BS_ALU_CFG_r),
    .l2d_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_r(l2d_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_BS_MUL_CFG_r(l2d_NVDLA_SDP_D_DP_BS_MUL_CFG_r),
    .l2d_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_r(l2d_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_BN_CFG_r(l2d_NVDLA_SDP_D_DP_BN_CFG_r),
    .l2d_NVDLA_SDP_D_DP_BN_ALU_CFG_r(l2d_NVDLA_SDP_D_DP_BN_ALU_CFG_r),
    .l2d_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_r(l2d_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_BN_MUL_CFG_r(l2d_NVDLA_SDP_D_DP_BN_MUL_CFG_r),
    .l2d_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_r(l2d_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_EW_CFG_r(l2d_NVDLA_SDP_D_DP_EW_CFG_r),
    .l2d_NVDLA_SDP_D_DP_EW_ALU_CFG_r(l2d_NVDLA_SDP_D_DP_EW_ALU_CFG_r),
    .l2d_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_r(l2d_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_r(l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_r(l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_r(l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_EW_MUL_CFG_r(l2d_NVDLA_SDP_D_DP_EW_MUL_CFG_r),
    .l2d_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_r(l2d_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_r(l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_r(l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_r(l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_r(l2d_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_r),
    .l2d_NVDLA_SDP_D_FEATURE_MODE_CFG_r(l2d_NVDLA_SDP_D_FEATURE_MODE_CFG_r),
    .l2d_NVDLA_SDP_D_DST_DMA_CFG_r(l2d_NVDLA_SDP_D_DST_DMA_CFG_r),
    .l2d_NVDLA_SDP_D_DST_BATCH_STRIDE_r(l2d_NVDLA_SDP_D_DST_BATCH_STRIDE_r),
    .l2d_NVDLA_SDP_D_DATA_FORMAT_r(l2d_NVDLA_SDP_D_DATA_FORMAT_r),
    .l2d_NVDLA_SDP_D_CVT_OFFSET_r(l2d_NVDLA_SDP_D_CVT_OFFSET_r),
    .l2d_NVDLA_SDP_D_CVT_SCALE_r(l2d_NVDLA_SDP_D_CVT_SCALE_r),
    .l2d_NVDLA_SDP_D_CVT_SHIFT_r(l2d_NVDLA_SDP_D_CVT_SHIFT_r),
    .l2d_NVDLA_SDP_D_STATUS_r(l2d_NVDLA_SDP_D_STATUS_r),
    .l2d_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_r(l2d_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_r),
    .l2d_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_r(l2d_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_r),
    .l2d_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_r(l2d_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_r),
    .l2d_NVDLA_SDP_D_PERF_ENABLE_r(l2d_NVDLA_SDP_D_PERF_ENABLE_r),
    .l2d_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_r(l2d_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_r),
    .l2d_NVDLA_SDP_D_PERF_LUT_UFLOW_r(l2d_NVDLA_SDP_D_PERF_LUT_UFLOW_r),
    .l2d_NVDLA_SDP_D_PERF_LUT_OFLOW_r(l2d_NVDLA_SDP_D_PERF_LUT_OFLOW_r),
    .l2d_NVDLA_SDP_D_PERF_OUT_SATURATION_r(l2d_NVDLA_SDP_D_PERF_OUT_SATURATION_r),
    .l2d_NVDLA_SDP_D_PERF_LUT_HYBRID_r(l2d_NVDLA_SDP_D_PERF_LUT_HYBRID_r),
    .l2d_NVDLA_SDP_D_PERF_LUT_LE_HIT_r(l2d_NVDLA_SDP_D_PERF_LUT_LE_HIT_r),
    .l2d_NVDLA_SDP_D_PERF_LUT_LO_HIT_r(l2d_NVDLA_SDP_D_PERF_LUT_LO_HIT_r),
    .dec_leaf_rd_data(dec_leaf_rd_data),
    .dec_leaf_ack(dec_leaf_ack),
    .dec_leaf_nack(dec_leaf_nack),
    .dec_leaf_accept(dec_leaf_accept),
    .dec_leaf_reject(dec_leaf_reject),
    .dec_leaf_retry_atomic(dec_leaf_retry_atomic),
    .dec_leaf_data_width(dec_leaf_data_width),
    .d2l_NVDLA_SDP_S_STATUS_w(d2l_NVDLA_SDP_S_STATUS_w),
    .d2l_NVDLA_SDP_S_STATUS_we(d2l_NVDLA_SDP_S_STATUS_we),
    .d2l_NVDLA_SDP_S_STATUS_re(d2l_NVDLA_SDP_S_STATUS_re),
    .d2l_NVDLA_SDP_S_POINTER_w(d2l_NVDLA_SDP_S_POINTER_w),
    .d2l_NVDLA_SDP_S_POINTER_we(d2l_NVDLA_SDP_S_POINTER_we),
    .d2l_NVDLA_SDP_S_POINTER_re(d2l_NVDLA_SDP_S_POINTER_re),
    .d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_w(d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_w),
    .d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_we(d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_we),
    .d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_re(d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_re),
    .d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_w(d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_w),
    .d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_we(d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_we),
    .d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_re(d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_re),
    .d2l_NVDLA_SDP_S_LUT_CFG_w(d2l_NVDLA_SDP_S_LUT_CFG_w),
    .d2l_NVDLA_SDP_S_LUT_CFG_we(d2l_NVDLA_SDP_S_LUT_CFG_we),
    .d2l_NVDLA_SDP_S_LUT_CFG_re(d2l_NVDLA_SDP_S_LUT_CFG_re),
    .d2l_NVDLA_SDP_S_LUT_INFO_w(d2l_NVDLA_SDP_S_LUT_INFO_w),
    .d2l_NVDLA_SDP_S_LUT_INFO_we(d2l_NVDLA_SDP_S_LUT_INFO_we),
    .d2l_NVDLA_SDP_S_LUT_INFO_re(d2l_NVDLA_SDP_S_LUT_INFO_re),
    .d2l_NVDLA_SDP_S_LUT_LE_START_w(d2l_NVDLA_SDP_S_LUT_LE_START_w),
    .d2l_NVDLA_SDP_S_LUT_LE_START_we(d2l_NVDLA_SDP_S_LUT_LE_START_we),
    .d2l_NVDLA_SDP_S_LUT_LE_START_re(d2l_NVDLA_SDP_S_LUT_LE_START_re),
    .d2l_NVDLA_SDP_S_LUT_LE_END_w(d2l_NVDLA_SDP_S_LUT_LE_END_w),
    .d2l_NVDLA_SDP_S_LUT_LE_END_we(d2l_NVDLA_SDP_S_LUT_LE_END_we),
    .d2l_NVDLA_SDP_S_LUT_LE_END_re(d2l_NVDLA_SDP_S_LUT_LE_END_re),
    .d2l_NVDLA_SDP_S_LUT_LO_START_w(d2l_NVDLA_SDP_S_LUT_LO_START_w),
    .d2l_NVDLA_SDP_S_LUT_LO_START_we(d2l_NVDLA_SDP_S_LUT_LO_START_we),
    .d2l_NVDLA_SDP_S_LUT_LO_START_re(d2l_NVDLA_SDP_S_LUT_LO_START_re),
    .d2l_NVDLA_SDP_S_LUT_LO_END_w(d2l_NVDLA_SDP_S_LUT_LO_END_w),
    .d2l_NVDLA_SDP_S_LUT_LO_END_we(d2l_NVDLA_SDP_S_LUT_LO_END_we),
    .d2l_NVDLA_SDP_S_LUT_LO_END_re(d2l_NVDLA_SDP_S_LUT_LO_END_re),
    .d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_w(d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_w),
    .d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_we(d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_we),
    .d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_re(d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_re),
    .d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_w(d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_w),
    .d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_we(d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_we),
    .d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_re(d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_re),
    .d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_w(d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_w),
    .d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_we(d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_we),
    .d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_re(d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_re),
    .d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_w(d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_w),
    .d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_we(d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_we),
    .d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_re(d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_re),
    .d2l_NVDLA_SDP_D_OP_ENABLE_w(d2l_NVDLA_SDP_D_OP_ENABLE_w),
    .d2l_NVDLA_SDP_D_OP_ENABLE_we(d2l_NVDLA_SDP_D_OP_ENABLE_we),
    .d2l_NVDLA_SDP_D_OP_ENABLE_re(d2l_NVDLA_SDP_D_OP_ENABLE_re),
    .d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_w(d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_w),
    .d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_we(d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_we),
    .d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_re(d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_re),
    .d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_w(d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_w),
    .d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_we(d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_we),
    .d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_re(d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_re),
    .d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_w(d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_w),
    .d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_we(d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_we),
    .d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_re(d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_re),
    .d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_w(d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_w),
    .d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_we(d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_we),
    .d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_re(d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_re),
    .d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_w(d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_w),
    .d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_we(d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_we),
    .d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_re(d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_re),
    .d2l_NVDLA_SDP_D_DST_LINE_STRIDE_w(d2l_NVDLA_SDP_D_DST_LINE_STRIDE_w),
    .d2l_NVDLA_SDP_D_DST_LINE_STRIDE_we(d2l_NVDLA_SDP_D_DST_LINE_STRIDE_we),
    .d2l_NVDLA_SDP_D_DST_LINE_STRIDE_re(d2l_NVDLA_SDP_D_DST_LINE_STRIDE_re),
    .d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_w(d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_w),
    .d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_we(d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_we),
    .d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_re(d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_re),
    .d2l_NVDLA_SDP_D_DP_BS_CFG_w(d2l_NVDLA_SDP_D_DP_BS_CFG_w),
    .d2l_NVDLA_SDP_D_DP_BS_CFG_we(d2l_NVDLA_SDP_D_DP_BS_CFG_we),
    .d2l_NVDLA_SDP_D_DP_BS_CFG_re(d2l_NVDLA_SDP_D_DP_BS_CFG_re),
    .d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_w(d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_w),
    .d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_we(d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_we),
    .d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_re(d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_re),
    .d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_w(d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_we(d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_re(d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_w(d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_w),
    .d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_we(d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_we),
    .d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_re(d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_re),
    .d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_w(d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_we(d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_re(d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_BN_CFG_w(d2l_NVDLA_SDP_D_DP_BN_CFG_w),
    .d2l_NVDLA_SDP_D_DP_BN_CFG_we(d2l_NVDLA_SDP_D_DP_BN_CFG_we),
    .d2l_NVDLA_SDP_D_DP_BN_CFG_re(d2l_NVDLA_SDP_D_DP_BN_CFG_re),
    .d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_w(d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_w),
    .d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_we(d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_we),
    .d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_re(d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_re),
    .d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_w(d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_we(d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_re(d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_w(d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_w),
    .d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_we(d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_we),
    .d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_re(d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_re),
    .d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_w(d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_we(d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_re(d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_EW_CFG_w(d2l_NVDLA_SDP_D_DP_EW_CFG_w),
    .d2l_NVDLA_SDP_D_DP_EW_CFG_we(d2l_NVDLA_SDP_D_DP_EW_CFG_we),
    .d2l_NVDLA_SDP_D_DP_EW_CFG_re(d2l_NVDLA_SDP_D_DP_EW_CFG_re),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_w(d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_w),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_we(d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_we),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_re(d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_re),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_w(d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_we(d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_re(d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_w(d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_we(d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_re(d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_w(d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_we(d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_re(d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_w(d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_we(d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_re(d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_w(d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_w),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_we(d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_we),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_re(d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_re),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_w(d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_we(d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_re(d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_w(d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_we(d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_re(d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_w(d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_we(d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_re(d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_w(d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_we(d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_re(d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_w(d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_we(d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_re(d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_re),
    .d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_w(d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_w),
    .d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_we(d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_we),
    .d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_re(d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_re),
    .d2l_NVDLA_SDP_D_DST_DMA_CFG_w(d2l_NVDLA_SDP_D_DST_DMA_CFG_w),
    .d2l_NVDLA_SDP_D_DST_DMA_CFG_we(d2l_NVDLA_SDP_D_DST_DMA_CFG_we),
    .d2l_NVDLA_SDP_D_DST_DMA_CFG_re(d2l_NVDLA_SDP_D_DST_DMA_CFG_re),
    .d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_w(d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_w),
    .d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_we(d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_we),
    .d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_re(d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_re),
    .d2l_NVDLA_SDP_D_DATA_FORMAT_w(d2l_NVDLA_SDP_D_DATA_FORMAT_w),
    .d2l_NVDLA_SDP_D_DATA_FORMAT_we(d2l_NVDLA_SDP_D_DATA_FORMAT_we),
    .d2l_NVDLA_SDP_D_DATA_FORMAT_re(d2l_NVDLA_SDP_D_DATA_FORMAT_re),
    .d2l_NVDLA_SDP_D_CVT_OFFSET_w(d2l_NVDLA_SDP_D_CVT_OFFSET_w),
    .d2l_NVDLA_SDP_D_CVT_OFFSET_we(d2l_NVDLA_SDP_D_CVT_OFFSET_we),
    .d2l_NVDLA_SDP_D_CVT_OFFSET_re(d2l_NVDLA_SDP_D_CVT_OFFSET_re),
    .d2l_NVDLA_SDP_D_CVT_SCALE_w(d2l_NVDLA_SDP_D_CVT_SCALE_w),
    .d2l_NVDLA_SDP_D_CVT_SCALE_we(d2l_NVDLA_SDP_D_CVT_SCALE_we),
    .d2l_NVDLA_SDP_D_CVT_SCALE_re(d2l_NVDLA_SDP_D_CVT_SCALE_re),
    .d2l_NVDLA_SDP_D_CVT_SHIFT_w(d2l_NVDLA_SDP_D_CVT_SHIFT_w),
    .d2l_NVDLA_SDP_D_CVT_SHIFT_we(d2l_NVDLA_SDP_D_CVT_SHIFT_we),
    .d2l_NVDLA_SDP_D_CVT_SHIFT_re(d2l_NVDLA_SDP_D_CVT_SHIFT_re),
    .d2l_NVDLA_SDP_D_STATUS_w(d2l_NVDLA_SDP_D_STATUS_w),
    .d2l_NVDLA_SDP_D_STATUS_we(d2l_NVDLA_SDP_D_STATUS_we),
    .d2l_NVDLA_SDP_D_STATUS_re(d2l_NVDLA_SDP_D_STATUS_re),
    .d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_w(d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_w),
    .d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_we(d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_we),
    .d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_re(d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_re),
    .d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_w(d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_w),
    .d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_we(d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_we),
    .d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_re(d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_re),
    .d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_w(d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_w),
    .d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_we(d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_we),
    .d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_re(d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_re),
    .d2l_NVDLA_SDP_D_PERF_ENABLE_w(d2l_NVDLA_SDP_D_PERF_ENABLE_w),
    .d2l_NVDLA_SDP_D_PERF_ENABLE_we(d2l_NVDLA_SDP_D_PERF_ENABLE_we),
    .d2l_NVDLA_SDP_D_PERF_ENABLE_re(d2l_NVDLA_SDP_D_PERF_ENABLE_re),
    .d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_w(d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_w),
    .d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_we(d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_we),
    .d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_re(d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_re),
    .d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_w(d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_w),
    .d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_we(d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_we),
    .d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_re(d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_re),
    .d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_w(d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_w),
    .d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_we(d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_we),
    .d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_re(d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_re),
    .d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_w(d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_w),
    .d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_we(d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_we),
    .d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_re(d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_re),
    .d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_w(d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_w),
    .d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_we(d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_we),
    .d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_re(d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_re),
    .d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_w(d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_w),
    .d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_we(d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_we),
    .d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_re(d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_re),
    .d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_w(d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_w),
    .d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_we(d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_we),
    .d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_re(d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_re) );
    
  addrmap_NVDLA_jrdl_logic pio_logic (
    .clk(clk),
    .reset(reset),
    .d2l_NVDLA_SDP_S_STATUS_w(d2l_NVDLA_SDP_S_STATUS_w),
    .d2l_NVDLA_SDP_S_STATUS_we(d2l_NVDLA_SDP_S_STATUS_we),
    .d2l_NVDLA_SDP_S_STATUS_re(d2l_NVDLA_SDP_S_STATUS_re),
    .d2l_NVDLA_SDP_S_POINTER_w(d2l_NVDLA_SDP_S_POINTER_w),
    .d2l_NVDLA_SDP_S_POINTER_we(d2l_NVDLA_SDP_S_POINTER_we),
    .d2l_NVDLA_SDP_S_POINTER_re(d2l_NVDLA_SDP_S_POINTER_re),
    .d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_w(d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_w),
    .d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_we(d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_we),
    .d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_re(d2l_NVDLA_SDP_S_LUT_ACCESS_CFG_re),
    .d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_w(d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_w),
    .d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_we(d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_we),
    .d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_re(d2l_NVDLA_SDP_S_LUT_ACCESS_DATA_re),
    .d2l_NVDLA_SDP_S_LUT_CFG_w(d2l_NVDLA_SDP_S_LUT_CFG_w),
    .d2l_NVDLA_SDP_S_LUT_CFG_we(d2l_NVDLA_SDP_S_LUT_CFG_we),
    .d2l_NVDLA_SDP_S_LUT_CFG_re(d2l_NVDLA_SDP_S_LUT_CFG_re),
    .d2l_NVDLA_SDP_S_LUT_INFO_w(d2l_NVDLA_SDP_S_LUT_INFO_w),
    .d2l_NVDLA_SDP_S_LUT_INFO_we(d2l_NVDLA_SDP_S_LUT_INFO_we),
    .d2l_NVDLA_SDP_S_LUT_INFO_re(d2l_NVDLA_SDP_S_LUT_INFO_re),
    .d2l_NVDLA_SDP_S_LUT_LE_START_w(d2l_NVDLA_SDP_S_LUT_LE_START_w),
    .d2l_NVDLA_SDP_S_LUT_LE_START_we(d2l_NVDLA_SDP_S_LUT_LE_START_we),
    .d2l_NVDLA_SDP_S_LUT_LE_START_re(d2l_NVDLA_SDP_S_LUT_LE_START_re),
    .d2l_NVDLA_SDP_S_LUT_LE_END_w(d2l_NVDLA_SDP_S_LUT_LE_END_w),
    .d2l_NVDLA_SDP_S_LUT_LE_END_we(d2l_NVDLA_SDP_S_LUT_LE_END_we),
    .d2l_NVDLA_SDP_S_LUT_LE_END_re(d2l_NVDLA_SDP_S_LUT_LE_END_re),
    .d2l_NVDLA_SDP_S_LUT_LO_START_w(d2l_NVDLA_SDP_S_LUT_LO_START_w),
    .d2l_NVDLA_SDP_S_LUT_LO_START_we(d2l_NVDLA_SDP_S_LUT_LO_START_we),
    .d2l_NVDLA_SDP_S_LUT_LO_START_re(d2l_NVDLA_SDP_S_LUT_LO_START_re),
    .d2l_NVDLA_SDP_S_LUT_LO_END_w(d2l_NVDLA_SDP_S_LUT_LO_END_w),
    .d2l_NVDLA_SDP_S_LUT_LO_END_we(d2l_NVDLA_SDP_S_LUT_LO_END_we),
    .d2l_NVDLA_SDP_S_LUT_LO_END_re(d2l_NVDLA_SDP_S_LUT_LO_END_re),
    .d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_w(d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_w),
    .d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_we(d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_we),
    .d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_re(d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_re),
    .d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_w(d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_w),
    .d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_we(d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_we),
    .d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_re(d2l_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_re),
    .d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_w(d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_w),
    .d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_we(d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_we),
    .d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_re(d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_re),
    .d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_w(d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_w),
    .d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_we(d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_we),
    .d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_re(d2l_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_re),
    .d2l_NVDLA_SDP_D_OP_ENABLE_w(d2l_NVDLA_SDP_D_OP_ENABLE_w),
    .d2l_NVDLA_SDP_D_OP_ENABLE_we(d2l_NVDLA_SDP_D_OP_ENABLE_we),
    .d2l_NVDLA_SDP_D_OP_ENABLE_re(d2l_NVDLA_SDP_D_OP_ENABLE_re),
    .d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_w(d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_w),
    .d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_we(d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_we),
    .d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_re(d2l_NVDLA_SDP_D_DATA_CUBE_WIDTH_re),
    .d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_w(d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_w),
    .d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_we(d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_we),
    .d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_re(d2l_NVDLA_SDP_D_DATA_CUBE_HEIGHT_re),
    .d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_w(d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_w),
    .d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_we(d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_we),
    .d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_re(d2l_NVDLA_SDP_D_DATA_CUBE_CHANNEL_re),
    .d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_w(d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_w),
    .d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_we(d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_we),
    .d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_re(d2l_NVDLA_SDP_D_DST_BASE_ADDR_LOW_re),
    .d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_w(d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_w),
    .d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_we(d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_we),
    .d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_re(d2l_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_re),
    .d2l_NVDLA_SDP_D_DST_LINE_STRIDE_w(d2l_NVDLA_SDP_D_DST_LINE_STRIDE_w),
    .d2l_NVDLA_SDP_D_DST_LINE_STRIDE_we(d2l_NVDLA_SDP_D_DST_LINE_STRIDE_we),
    .d2l_NVDLA_SDP_D_DST_LINE_STRIDE_re(d2l_NVDLA_SDP_D_DST_LINE_STRIDE_re),
    .d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_w(d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_w),
    .d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_we(d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_we),
    .d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_re(d2l_NVDLA_SDP_D_DST_SURFACE_STRIDE_re),
    .d2l_NVDLA_SDP_D_DP_BS_CFG_w(d2l_NVDLA_SDP_D_DP_BS_CFG_w),
    .d2l_NVDLA_SDP_D_DP_BS_CFG_we(d2l_NVDLA_SDP_D_DP_BS_CFG_we),
    .d2l_NVDLA_SDP_D_DP_BS_CFG_re(d2l_NVDLA_SDP_D_DP_BS_CFG_re),
    .d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_w(d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_w),
    .d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_we(d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_we),
    .d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_re(d2l_NVDLA_SDP_D_DP_BS_ALU_CFG_re),
    .d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_w(d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_we(d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_re(d2l_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_w(d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_w),
    .d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_we(d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_we),
    .d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_re(d2l_NVDLA_SDP_D_DP_BS_MUL_CFG_re),
    .d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_w(d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_we(d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_re(d2l_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_BN_CFG_w(d2l_NVDLA_SDP_D_DP_BN_CFG_w),
    .d2l_NVDLA_SDP_D_DP_BN_CFG_we(d2l_NVDLA_SDP_D_DP_BN_CFG_we),
    .d2l_NVDLA_SDP_D_DP_BN_CFG_re(d2l_NVDLA_SDP_D_DP_BN_CFG_re),
    .d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_w(d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_w),
    .d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_we(d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_we),
    .d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_re(d2l_NVDLA_SDP_D_DP_BN_ALU_CFG_re),
    .d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_w(d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_we(d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_re(d2l_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_w(d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_w),
    .d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_we(d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_we),
    .d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_re(d2l_NVDLA_SDP_D_DP_BN_MUL_CFG_re),
    .d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_w(d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_we(d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_re(d2l_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_EW_CFG_w(d2l_NVDLA_SDP_D_DP_EW_CFG_w),
    .d2l_NVDLA_SDP_D_DP_EW_CFG_we(d2l_NVDLA_SDP_D_DP_EW_CFG_we),
    .d2l_NVDLA_SDP_D_DP_EW_CFG_re(d2l_NVDLA_SDP_D_DP_EW_CFG_re),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_w(d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_w),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_we(d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_we),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_re(d2l_NVDLA_SDP_D_DP_EW_ALU_CFG_re),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_w(d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_we(d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_re(d2l_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_w(d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_we(d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_re(d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_w(d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_we(d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_re(d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_w(d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_we(d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_re(d2l_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_w(d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_w),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_we(d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_we),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_re(d2l_NVDLA_SDP_D_DP_EW_MUL_CFG_re),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_w(d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_we(d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_re(d2l_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_w(d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_we(d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_re(d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_w(d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_we(d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_re(d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_w(d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_we(d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_re(d2l_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_re),
    .d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_w(d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_w),
    .d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_we(d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_we),
    .d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_re(d2l_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_re),
    .d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_w(d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_w),
    .d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_we(d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_we),
    .d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_re(d2l_NVDLA_SDP_D_FEATURE_MODE_CFG_re),
    .d2l_NVDLA_SDP_D_DST_DMA_CFG_w(d2l_NVDLA_SDP_D_DST_DMA_CFG_w),
    .d2l_NVDLA_SDP_D_DST_DMA_CFG_we(d2l_NVDLA_SDP_D_DST_DMA_CFG_we),
    .d2l_NVDLA_SDP_D_DST_DMA_CFG_re(d2l_NVDLA_SDP_D_DST_DMA_CFG_re),
    .d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_w(d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_w),
    .d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_we(d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_we),
    .d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_re(d2l_NVDLA_SDP_D_DST_BATCH_STRIDE_re),
    .d2l_NVDLA_SDP_D_DATA_FORMAT_w(d2l_NVDLA_SDP_D_DATA_FORMAT_w),
    .d2l_NVDLA_SDP_D_DATA_FORMAT_we(d2l_NVDLA_SDP_D_DATA_FORMAT_we),
    .d2l_NVDLA_SDP_D_DATA_FORMAT_re(d2l_NVDLA_SDP_D_DATA_FORMAT_re),
    .d2l_NVDLA_SDP_D_CVT_OFFSET_w(d2l_NVDLA_SDP_D_CVT_OFFSET_w),
    .d2l_NVDLA_SDP_D_CVT_OFFSET_we(d2l_NVDLA_SDP_D_CVT_OFFSET_we),
    .d2l_NVDLA_SDP_D_CVT_OFFSET_re(d2l_NVDLA_SDP_D_CVT_OFFSET_re),
    .d2l_NVDLA_SDP_D_CVT_SCALE_w(d2l_NVDLA_SDP_D_CVT_SCALE_w),
    .d2l_NVDLA_SDP_D_CVT_SCALE_we(d2l_NVDLA_SDP_D_CVT_SCALE_we),
    .d2l_NVDLA_SDP_D_CVT_SCALE_re(d2l_NVDLA_SDP_D_CVT_SCALE_re),
    .d2l_NVDLA_SDP_D_CVT_SHIFT_w(d2l_NVDLA_SDP_D_CVT_SHIFT_w),
    .d2l_NVDLA_SDP_D_CVT_SHIFT_we(d2l_NVDLA_SDP_D_CVT_SHIFT_we),
    .d2l_NVDLA_SDP_D_CVT_SHIFT_re(d2l_NVDLA_SDP_D_CVT_SHIFT_re),
    .d2l_NVDLA_SDP_D_STATUS_w(d2l_NVDLA_SDP_D_STATUS_w),
    .d2l_NVDLA_SDP_D_STATUS_we(d2l_NVDLA_SDP_D_STATUS_we),
    .d2l_NVDLA_SDP_D_STATUS_re(d2l_NVDLA_SDP_D_STATUS_re),
    .d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_w(d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_w),
    .d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_we(d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_we),
    .d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_re(d2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_re),
    .d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_w(d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_w),
    .d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_we(d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_we),
    .d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_re(d2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_re),
    .d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_w(d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_w),
    .d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_we(d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_we),
    .d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_re(d2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_re),
    .d2l_NVDLA_SDP_D_PERF_ENABLE_w(d2l_NVDLA_SDP_D_PERF_ENABLE_w),
    .d2l_NVDLA_SDP_D_PERF_ENABLE_we(d2l_NVDLA_SDP_D_PERF_ENABLE_we),
    .d2l_NVDLA_SDP_D_PERF_ENABLE_re(d2l_NVDLA_SDP_D_PERF_ENABLE_re),
    .d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_w(d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_w),
    .d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_we(d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_we),
    .d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_re(d2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_re),
    .d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_w(d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_w),
    .d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_we(d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_we),
    .d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_re(d2l_NVDLA_SDP_D_PERF_LUT_UFLOW_re),
    .d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_w(d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_w),
    .d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_we(d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_we),
    .d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_re(d2l_NVDLA_SDP_D_PERF_LUT_OFLOW_re),
    .d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_w(d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_w),
    .d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_we(d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_we),
    .d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_re(d2l_NVDLA_SDP_D_PERF_OUT_SATURATION_re),
    .d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_w(d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_w),
    .d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_we(d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_we),
    .d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_re(d2l_NVDLA_SDP_D_PERF_LUT_HYBRID_re),
    .d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_w(d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_w),
    .d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_we(d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_we),
    .d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_re(d2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_re),
    .d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_w(d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_w),
    .d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_we(d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_we),
    .d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_re(d2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_re),
    .h2l_NVDLA_SDP_S_STATUS_STATUS_0_w(h2l_NVDLA_SDP_S_STATUS_STATUS_0_w),
    .h2l_NVDLA_SDP_S_STATUS_STATUS_1_w(h2l_NVDLA_SDP_S_STATUS_STATUS_1_w),
    .h2l_NVDLA_SDP_S_POINTER_CONSUMER_w(h2l_NVDLA_SDP_S_POINTER_CONSUMER_w),
    .h2l_NVDLA_SDP_D_STATUS_STATUS_UNEQUAL_w(h2l_NVDLA_SDP_D_STATUS_STATUS_UNEQUAL_w),
    .h2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_STATUS_NAN_INPUT_NUM_w(h2l_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_STATUS_NAN_INPUT_NUM_w),
    .h2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_STATUS_INF_INPUT_NUM_w(h2l_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_STATUS_INF_INPUT_NUM_w),
    .h2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_STATUS_NAN_OUTPUT_NUM_w(h2l_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_STATUS_NAN_OUTPUT_NUM_w),
    .h2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_WDMA_STALL_w(h2l_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_WDMA_STALL_w),
    .h2l_NVDLA_SDP_D_PERF_LUT_UFLOW_LUT_UFLOW_w(h2l_NVDLA_SDP_D_PERF_LUT_UFLOW_LUT_UFLOW_w),
    .h2l_NVDLA_SDP_D_PERF_LUT_OFLOW_LUT_OFLOW_w(h2l_NVDLA_SDP_D_PERF_LUT_OFLOW_LUT_OFLOW_w),
    .h2l_NVDLA_SDP_D_PERF_OUT_SATURATION_OUT_SATURATION_w(h2l_NVDLA_SDP_D_PERF_OUT_SATURATION_OUT_SATURATION_w),
    .h2l_NVDLA_SDP_D_PERF_LUT_HYBRID_LUT_HYBRID_w(h2l_NVDLA_SDP_D_PERF_LUT_HYBRID_LUT_HYBRID_w),
    .h2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_LUT_LE_HIT_w(h2l_NVDLA_SDP_D_PERF_LUT_LE_HIT_LUT_LE_HIT_w),
    .h2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_LUT_LO_HIT_w(h2l_NVDLA_SDP_D_PERF_LUT_LO_HIT_LUT_LO_HIT_w),
    .l2d_NVDLA_SDP_S_STATUS_r(l2d_NVDLA_SDP_S_STATUS_r),
    .l2d_NVDLA_SDP_S_POINTER_r(l2d_NVDLA_SDP_S_POINTER_r),
    .l2d_NVDLA_SDP_S_LUT_ACCESS_CFG_r(l2d_NVDLA_SDP_S_LUT_ACCESS_CFG_r),
    .l2d_NVDLA_SDP_S_LUT_ACCESS_DATA_r(l2d_NVDLA_SDP_S_LUT_ACCESS_DATA_r),
    .l2d_NVDLA_SDP_S_LUT_CFG_r(l2d_NVDLA_SDP_S_LUT_CFG_r),
    .l2d_NVDLA_SDP_S_LUT_INFO_r(l2d_NVDLA_SDP_S_LUT_INFO_r),
    .l2d_NVDLA_SDP_S_LUT_LE_START_r(l2d_NVDLA_SDP_S_LUT_LE_START_r),
    .l2d_NVDLA_SDP_S_LUT_LE_END_r(l2d_NVDLA_SDP_S_LUT_LE_END_r),
    .l2d_NVDLA_SDP_S_LUT_LO_START_r(l2d_NVDLA_SDP_S_LUT_LO_START_r),
    .l2d_NVDLA_SDP_S_LUT_LO_END_r(l2d_NVDLA_SDP_S_LUT_LO_END_r),
    .l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_r(l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_r),
    .l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_r(l2d_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_r),
    .l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_r(l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_r),
    .l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_r(l2d_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_r),
    .l2d_NVDLA_SDP_D_OP_ENABLE_r(l2d_NVDLA_SDP_D_OP_ENABLE_r),
    .l2d_NVDLA_SDP_D_DATA_CUBE_WIDTH_r(l2d_NVDLA_SDP_D_DATA_CUBE_WIDTH_r),
    .l2d_NVDLA_SDP_D_DATA_CUBE_HEIGHT_r(l2d_NVDLA_SDP_D_DATA_CUBE_HEIGHT_r),
    .l2d_NVDLA_SDP_D_DATA_CUBE_CHANNEL_r(l2d_NVDLA_SDP_D_DATA_CUBE_CHANNEL_r),
    .l2d_NVDLA_SDP_D_DST_BASE_ADDR_LOW_r(l2d_NVDLA_SDP_D_DST_BASE_ADDR_LOW_r),
    .l2d_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_r(l2d_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_r),
    .l2d_NVDLA_SDP_D_DST_LINE_STRIDE_r(l2d_NVDLA_SDP_D_DST_LINE_STRIDE_r),
    .l2d_NVDLA_SDP_D_DST_SURFACE_STRIDE_r(l2d_NVDLA_SDP_D_DST_SURFACE_STRIDE_r),
    .l2d_NVDLA_SDP_D_DP_BS_CFG_r(l2d_NVDLA_SDP_D_DP_BS_CFG_r),
    .l2d_NVDLA_SDP_D_DP_BS_ALU_CFG_r(l2d_NVDLA_SDP_D_DP_BS_ALU_CFG_r),
    .l2d_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_r(l2d_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_BS_MUL_CFG_r(l2d_NVDLA_SDP_D_DP_BS_MUL_CFG_r),
    .l2d_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_r(l2d_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_BN_CFG_r(l2d_NVDLA_SDP_D_DP_BN_CFG_r),
    .l2d_NVDLA_SDP_D_DP_BN_ALU_CFG_r(l2d_NVDLA_SDP_D_DP_BN_ALU_CFG_r),
    .l2d_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_r(l2d_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_BN_MUL_CFG_r(l2d_NVDLA_SDP_D_DP_BN_MUL_CFG_r),
    .l2d_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_r(l2d_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_EW_CFG_r(l2d_NVDLA_SDP_D_DP_EW_CFG_r),
    .l2d_NVDLA_SDP_D_DP_EW_ALU_CFG_r(l2d_NVDLA_SDP_D_DP_EW_ALU_CFG_r),
    .l2d_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_r(l2d_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_r(l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_r(l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_r(l2d_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_EW_MUL_CFG_r(l2d_NVDLA_SDP_D_DP_EW_MUL_CFG_r),
    .l2d_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_r(l2d_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_r(l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_r(l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_r(l2d_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_r),
    .l2d_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_r(l2d_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_r),
    .l2d_NVDLA_SDP_D_FEATURE_MODE_CFG_r(l2d_NVDLA_SDP_D_FEATURE_MODE_CFG_r),
    .l2d_NVDLA_SDP_D_DST_DMA_CFG_r(l2d_NVDLA_SDP_D_DST_DMA_CFG_r),
    .l2d_NVDLA_SDP_D_DST_BATCH_STRIDE_r(l2d_NVDLA_SDP_D_DST_BATCH_STRIDE_r),
    .l2d_NVDLA_SDP_D_DATA_FORMAT_r(l2d_NVDLA_SDP_D_DATA_FORMAT_r),
    .l2d_NVDLA_SDP_D_CVT_OFFSET_r(l2d_NVDLA_SDP_D_CVT_OFFSET_r),
    .l2d_NVDLA_SDP_D_CVT_SCALE_r(l2d_NVDLA_SDP_D_CVT_SCALE_r),
    .l2d_NVDLA_SDP_D_CVT_SHIFT_r(l2d_NVDLA_SDP_D_CVT_SHIFT_r),
    .l2d_NVDLA_SDP_D_STATUS_r(l2d_NVDLA_SDP_D_STATUS_r),
    .l2d_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_r(l2d_NVDLA_SDP_D_STATUS_NAN_INPUT_NUM_r),
    .l2d_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_r(l2d_NVDLA_SDP_D_STATUS_INF_INPUT_NUM_r),
    .l2d_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_r(l2d_NVDLA_SDP_D_STATUS_NAN_OUTPUT_NUM_r),
    .l2d_NVDLA_SDP_D_PERF_ENABLE_r(l2d_NVDLA_SDP_D_PERF_ENABLE_r),
    .l2d_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_r(l2d_NVDLA_SDP_D_PERF_WDMA_WRITE_STALL_r),
    .l2d_NVDLA_SDP_D_PERF_LUT_UFLOW_r(l2d_NVDLA_SDP_D_PERF_LUT_UFLOW_r),
    .l2d_NVDLA_SDP_D_PERF_LUT_OFLOW_r(l2d_NVDLA_SDP_D_PERF_LUT_OFLOW_r),
    .l2d_NVDLA_SDP_D_PERF_OUT_SATURATION_r(l2d_NVDLA_SDP_D_PERF_OUT_SATURATION_r),
    .l2d_NVDLA_SDP_D_PERF_LUT_HYBRID_r(l2d_NVDLA_SDP_D_PERF_LUT_HYBRID_r),
    .l2d_NVDLA_SDP_D_PERF_LUT_LE_HIT_r(l2d_NVDLA_SDP_D_PERF_LUT_LE_HIT_r),
    .l2d_NVDLA_SDP_D_PERF_LUT_LO_HIT_r(l2d_NVDLA_SDP_D_PERF_LUT_LO_HIT_r),
    .l2h_NVDLA_SDP_S_POINTER_PRODUCER_r(l2h_NVDLA_SDP_S_POINTER_PRODUCER_r),
    .l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ADDR_r(l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ADDR_r),
    .l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_TABLE_ID_r(l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_TABLE_ID_r),
    .l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ACCESS_TYPE_r(l2h_NVDLA_SDP_S_LUT_ACCESS_CFG_LUT_ACCESS_TYPE_r),
    .l2h_NVDLA_SDP_S_LUT_ACCESS_DATA_LUT_DATA_r(l2h_NVDLA_SDP_S_LUT_ACCESS_DATA_LUT_DATA_r),
    .l2h_NVDLA_SDP_S_LUT_CFG_LUT_LE_FUNCTION_r(l2h_NVDLA_SDP_S_LUT_CFG_LUT_LE_FUNCTION_r),
    .l2h_NVDLA_SDP_S_LUT_CFG_LUT_UFLOW_PRIORITY_r(l2h_NVDLA_SDP_S_LUT_CFG_LUT_UFLOW_PRIORITY_r),
    .l2h_NVDLA_SDP_S_LUT_CFG_LUT_OFLOW_PRIORITY_r(l2h_NVDLA_SDP_S_LUT_CFG_LUT_OFLOW_PRIORITY_r),
    .l2h_NVDLA_SDP_S_LUT_CFG_LUT_HYBRID_PRIORITY_r(l2h_NVDLA_SDP_S_LUT_CFG_LUT_HYBRID_PRIORITY_r),
    .l2h_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_OFFSET_r(l2h_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_OFFSET_r),
    .l2h_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_SELECT_r(l2h_NVDLA_SDP_S_LUT_INFO_LUT_LE_INDEX_SELECT_r),
    .l2h_NVDLA_SDP_S_LUT_INFO_LUT_LO_INDEX_SELECT_r(l2h_NVDLA_SDP_S_LUT_INFO_LUT_LO_INDEX_SELECT_r),
    .l2h_NVDLA_SDP_S_LUT_LE_START_LUT_LE_START_r(l2h_NVDLA_SDP_S_LUT_LE_START_LUT_LE_START_r),
    .l2h_NVDLA_SDP_S_LUT_LE_END_LUT_LE_END_r(l2h_NVDLA_SDP_S_LUT_LE_END_LUT_LE_END_r),
    .l2h_NVDLA_SDP_S_LUT_LO_START_LUT_LO_START_r(l2h_NVDLA_SDP_S_LUT_LO_START_LUT_LO_START_r),
    .l2h_NVDLA_SDP_S_LUT_LO_END_LUT_LO_END_r(l2h_NVDLA_SDP_S_LUT_LO_END_LUT_LO_END_r),
    .l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_UFLOW_SCALE_r(l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_UFLOW_SCALE_r),
    .l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_OFLOW_SCALE_r(l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SCALE_LUT_LE_SLOPE_OFLOW_SCALE_r),
    .l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_UFLOW_SHIFT_r(l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_UFLOW_SHIFT_r),
    .l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_OFLOW_SHIFT_r(l2h_NVDLA_SDP_S_LUT_LE_SLOPE_SHIFT_LUT_LE_SLOPE_OFLOW_SHIFT_r),
    .l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_UFLOW_SCALE_r(l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_UFLOW_SCALE_r),
    .l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_OFLOW_SCALE_r(l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SCALE_LUT_LO_SLOPE_OFLOW_SCALE_r),
    .l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_UFLOW_SHIFT_r(l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_UFLOW_SHIFT_r),
    .l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_OFLOW_SHIFT_r(l2h_NVDLA_SDP_S_LUT_LO_SLOPE_SHIFT_LUT_LO_SLOPE_OFLOW_SHIFT_r),
    .l2h_NVDLA_SDP_D_OP_ENABLE_OP_EN_r(l2h_NVDLA_SDP_D_OP_ENABLE_OP_EN_r),
    .l2h_NVDLA_SDP_D_DATA_CUBE_WIDTH_WIDTH_r(l2h_NVDLA_SDP_D_DATA_CUBE_WIDTH_WIDTH_r),
    .l2h_NVDLA_SDP_D_DATA_CUBE_HEIGHT_HEIGHT_r(l2h_NVDLA_SDP_D_DATA_CUBE_HEIGHT_HEIGHT_r),
    .l2h_NVDLA_SDP_D_DATA_CUBE_CHANNEL_CHANNEL_r(l2h_NVDLA_SDP_D_DATA_CUBE_CHANNEL_CHANNEL_r),
    .l2h_NVDLA_SDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_r(l2h_NVDLA_SDP_D_DST_BASE_ADDR_LOW_DST_BASE_ADDR_LOW_r),
    .l2h_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_r(l2h_NVDLA_SDP_D_DST_BASE_ADDR_HIGH_DST_BASE_ADDR_HIGH_r),
    .l2h_NVDLA_SDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_r(l2h_NVDLA_SDP_D_DST_LINE_STRIDE_DST_LINE_STRIDE_r),
    .l2h_NVDLA_SDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_r(l2h_NVDLA_SDP_D_DST_SURFACE_STRIDE_DST_SURFACE_STRIDE_r),
    .l2h_NVDLA_SDP_D_DP_BS_CFG_BS_BYPASS_r(l2h_NVDLA_SDP_D_DP_BS_CFG_BS_BYPASS_r),
    .l2h_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_BYPASS_r(l2h_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_BYPASS_r),
    .l2h_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_ALGO_r(l2h_NVDLA_SDP_D_DP_BS_CFG_BS_ALU_ALGO_r),
    .l2h_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_BYPASS_r(l2h_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_BYPASS_r),
    .l2h_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_PRELU_r(l2h_NVDLA_SDP_D_DP_BS_CFG_BS_MUL_PRELU_r),
    .l2h_NVDLA_SDP_D_DP_BS_CFG_BS_RELU_BYPASS_r(l2h_NVDLA_SDP_D_DP_BS_CFG_BS_RELU_BYPASS_r),
    .l2h_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SRC_r(l2h_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SRC_r),
    .l2h_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SHIFT_VALUE_r(l2h_NVDLA_SDP_D_DP_BS_ALU_CFG_BS_ALU_SHIFT_VALUE_r),
    .l2h_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_BS_ALU_OPERAND_r(l2h_NVDLA_SDP_D_DP_BS_ALU_SRC_VALUE_BS_ALU_OPERAND_r),
    .l2h_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SRC_r(l2h_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SRC_r),
    .l2h_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SHIFT_VALUE_r(l2h_NVDLA_SDP_D_DP_BS_MUL_CFG_BS_MUL_SHIFT_VALUE_r),
    .l2h_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_BS_MUL_OPERAND_r(l2h_NVDLA_SDP_D_DP_BS_MUL_SRC_VALUE_BS_MUL_OPERAND_r),
    .l2h_NVDLA_SDP_D_DP_BN_CFG_BN_BYPASS_r(l2h_NVDLA_SDP_D_DP_BN_CFG_BN_BYPASS_r),
    .l2h_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_BYPASS_r(l2h_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_BYPASS_r),
    .l2h_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_ALGO_r(l2h_NVDLA_SDP_D_DP_BN_CFG_BN_ALU_ALGO_r),
    .l2h_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_BYPASS_r(l2h_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_BYPASS_r),
    .l2h_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_PRELU_r(l2h_NVDLA_SDP_D_DP_BN_CFG_BN_MUL_PRELU_r),
    .l2h_NVDLA_SDP_D_DP_BN_CFG_BN_RELU_BYPASS_r(l2h_NVDLA_SDP_D_DP_BN_CFG_BN_RELU_BYPASS_r),
    .l2h_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SRC_r(l2h_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SRC_r),
    .l2h_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SHIFT_VALUE_r(l2h_NVDLA_SDP_D_DP_BN_ALU_CFG_BN_ALU_SHIFT_VALUE_r),
    .l2h_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_BN_ALU_OPERAND_r(l2h_NVDLA_SDP_D_DP_BN_ALU_SRC_VALUE_BN_ALU_OPERAND_r),
    .l2h_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SRC_r(l2h_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SRC_r),
    .l2h_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SHIFT_VALUE_r(l2h_NVDLA_SDP_D_DP_BN_MUL_CFG_BN_MUL_SHIFT_VALUE_r),
    .l2h_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_BN_MUL_OPERAND_r(l2h_NVDLA_SDP_D_DP_BN_MUL_SRC_VALUE_BN_MUL_OPERAND_r),
    .l2h_NVDLA_SDP_D_DP_EW_CFG_EW_BYPASS_r(l2h_NVDLA_SDP_D_DP_EW_CFG_EW_BYPASS_r),
    .l2h_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_BYPASS_r(l2h_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_BYPASS_r),
    .l2h_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_ALGO_r(l2h_NVDLA_SDP_D_DP_EW_CFG_EW_ALU_ALGO_r),
    .l2h_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_BYPASS_r(l2h_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_BYPASS_r),
    .l2h_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_PRELU_r(l2h_NVDLA_SDP_D_DP_EW_CFG_EW_MUL_PRELU_r),
    .l2h_NVDLA_SDP_D_DP_EW_CFG_EW_LUT_BYPASS_r(l2h_NVDLA_SDP_D_DP_EW_CFG_EW_LUT_BYPASS_r),
    .l2h_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_SRC_r(l2h_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_SRC_r),
    .l2h_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_CVT_BYPASS_r(l2h_NVDLA_SDP_D_DP_EW_ALU_CFG_EW_ALU_CVT_BYPASS_r),
    .l2h_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_EW_ALU_OPERAND_r(l2h_NVDLA_SDP_D_DP_EW_ALU_SRC_VALUE_EW_ALU_OPERAND_r),
    .l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_EW_ALU_CVT_OFFSET_r(l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_EW_ALU_CVT_OFFSET_r),
    .l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_EW_ALU_CVT_SCALE_r(l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_EW_ALU_CVT_SCALE_r),
    .l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_EW_ALU_CVT_TRUNCATE_r(l2h_NVDLA_SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_EW_ALU_CVT_TRUNCATE_r),
    .l2h_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_SRC_r(l2h_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_SRC_r),
    .l2h_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_CVT_BYPASS_r(l2h_NVDLA_SDP_D_DP_EW_MUL_CFG_EW_MUL_CVT_BYPASS_r),
    .l2h_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_EW_MUL_OPERAND_r(l2h_NVDLA_SDP_D_DP_EW_MUL_SRC_VALUE_EW_MUL_OPERAND_r),
    .l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_EW_MUL_CVT_OFFSET_r(l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_EW_MUL_CVT_OFFSET_r),
    .l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_EW_MUL_CVT_SCALE_r(l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_EW_MUL_CVT_SCALE_r),
    .l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_EW_MUL_CVT_TRUNCATE_r(l2h_NVDLA_SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_EW_MUL_CVT_TRUNCATE_r),
    .l2h_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_EW_TRUNCATE_r(l2h_NVDLA_SDP_D_DP_EW_TRUNCATE_VALUE_EW_TRUNCATE_r),
    .l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_FLYING_MODE_r(l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_FLYING_MODE_r),
    .l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_OUTPUT_DST_r(l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_OUTPUT_DST_r),
    .l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_WINOGRAD_r(l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_WINOGRAD_r),
    .l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_NAN_TO_ZERO_r(l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_NAN_TO_ZERO_r),
    .l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_BATCH_NUMBER_r(l2h_NVDLA_SDP_D_FEATURE_MODE_CFG_BATCH_NUMBER_r),
    .l2h_NVDLA_SDP_D_DST_DMA_CFG_DST_RAM_TYPE_r(l2h_NVDLA_SDP_D_DST_DMA_CFG_DST_RAM_TYPE_r),
    .l2h_NVDLA_SDP_D_DST_BATCH_STRIDE_DST_BATCH_STRIDE_r(l2h_NVDLA_SDP_D_DST_BATCH_STRIDE_DST_BATCH_STRIDE_r),
    .l2h_NVDLA_SDP_D_DATA_FORMAT_PROC_PRECISION_r(l2h_NVDLA_SDP_D_DATA_FORMAT_PROC_PRECISION_r),
    .l2h_NVDLA_SDP_D_DATA_FORMAT_OUT_PRECISION_r(l2h_NVDLA_SDP_D_DATA_FORMAT_OUT_PRECISION_r),
    .l2h_NVDLA_SDP_D_CVT_OFFSET_CVT_OFFSET_r(l2h_NVDLA_SDP_D_CVT_OFFSET_CVT_OFFSET_r),
    .l2h_NVDLA_SDP_D_CVT_SCALE_CVT_SCALE_r(l2h_NVDLA_SDP_D_CVT_SCALE_CVT_SCALE_r),
    .l2h_NVDLA_SDP_D_CVT_SHIFT_CVT_SHIFT_r(l2h_NVDLA_SDP_D_CVT_SHIFT_CVT_SHIFT_r),
    .l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_DMA_EN_r(l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_DMA_EN_r),
    .l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_LUT_EN_r(l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_LUT_EN_r),
    .l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_SAT_EN_r(l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_SAT_EN_r),
    .l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_NAN_INF_COUNT_EN_r(l2h_NVDLA_SDP_D_PERF_ENABLE_PERF_NAN_INF_COUNT_EN_r) );
    
endmodule

