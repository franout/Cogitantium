//   Ordt 171103.01 autogenerated file 
//   Input: NVDLA_CVIF.rdl
//   Parms: opendla.parms
//   Date: Fri Feb 07 12:29:49 CET 2020
//

//
//---------- module addrmap_NVDLA_jrdl_logic
//
module addrmap_NVDLA_jrdl_logic
(
  clk,
  reset,
  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_w,
  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_we,
  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_re,
  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_w,
  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_we,
  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_re,
  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_w,
  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_we,
  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_re,
  d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_w,
  d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_we,
  d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_re,
  d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_w,
  d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_we,
  d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_re,
  d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_w,
  d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_we,
  d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_re,
  d2l_NVDLA_CVIF_STATUS_w,
  d2l_NVDLA_CVIF_STATUS_we,
  d2l_NVDLA_CVIF_STATUS_re,
  h2l_NVDLA_CVIF_STATUS_IDLE_w,

  l2d_NVDLA_CVIF_CFG_RD_WEIGHT_0_r,
  l2d_NVDLA_CVIF_CFG_RD_WEIGHT_1_r,
  l2d_NVDLA_CVIF_CFG_RD_WEIGHT_2_r,
  l2d_NVDLA_CVIF_CFG_WR_WEIGHT_0_r,
  l2d_NVDLA_CVIF_CFG_WR_WEIGHT_1_r,
  l2d_NVDLA_CVIF_CFG_OUTSTANDING_CNT_r,
  l2d_NVDLA_CVIF_STATUS_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_BDMA_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_SDP_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_PDP_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_CDP_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_B_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_N_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_E_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_CDMA_DAT_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_CDMA_WT_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RBK_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_1_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_0_r,
  l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_BDMA_r,
  l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_SDP_r,
  l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_PDP_r,
  l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_CDP_r,
  l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RBK_r,
  l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_2_r,
  l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_1_r,
  l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_0_r,
  l2h_NVDLA_CVIF_CFG_OUTSTANDING_CNT_RD_OS_CNT_r,
  l2h_NVDLA_CVIF_CFG_OUTSTANDING_CNT_WR_OS_CNT_r );

  //------- inputs
  input    clk;
  input    reset;
  input     [31:0] d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_w;
  input    d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_we;
  input    d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_re;
  input     [31:0] d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_w;
  input    d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_we;
  input    d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_re;
  input     [31:0] d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_w;
  input    d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_we;
  input    d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_re;
  input     [31:0] d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_w;
  input    d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_we;
  input    d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_re;
  input     [31:0] d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_w;
  input    d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_we;
  input    d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_re;
  input     [31:0] d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_w;
  input    d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_we;
  input    d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_re;
  input     [31:0] d2l_NVDLA_CVIF_STATUS_w;
  input    d2l_NVDLA_CVIF_STATUS_we;
  input    d2l_NVDLA_CVIF_STATUS_re;
  input    h2l_NVDLA_CVIF_STATUS_IDLE_w;

  //------- outputs
  output     [31:0] l2d_NVDLA_CVIF_CFG_RD_WEIGHT_0_r;
  output     [31:0] l2d_NVDLA_CVIF_CFG_RD_WEIGHT_1_r;
  output     [31:0] l2d_NVDLA_CVIF_CFG_RD_WEIGHT_2_r;
  output     [31:0] l2d_NVDLA_CVIF_CFG_WR_WEIGHT_0_r;
  output     [31:0] l2d_NVDLA_CVIF_CFG_WR_WEIGHT_1_r;
  output     [31:0] l2d_NVDLA_CVIF_CFG_OUTSTANDING_CNT_r;
  output     [31:0] l2d_NVDLA_CVIF_STATUS_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_BDMA_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_SDP_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_PDP_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_CDP_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_B_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_N_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_E_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_CDMA_DAT_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_CDMA_WT_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RBK_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_1_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_0_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_BDMA_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_SDP_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_PDP_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_CDP_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RBK_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_2_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_1_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_0_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_OUTSTANDING_CNT_RD_OS_CNT_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_OUTSTANDING_CNT_WR_OS_CNT_r;


  //------- reg defines
  reg   [7:0] rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_BDMA;
  reg   [7:0] reg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_BDMA_next;
  reg   [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_BDMA_r;
  reg   [7:0] rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_SDP;
  reg   [7:0] reg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_SDP_next;
  reg   [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_SDP_r;
  reg   [7:0] rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_PDP;
  reg   [7:0] reg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_PDP_next;
  reg   [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_PDP_r;
  reg   [7:0] rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_CDP;
  reg   [7:0] reg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_CDP_next;
  reg   [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_CDP_r;
  reg   [31:0] l2d_NVDLA_CVIF_CFG_RD_WEIGHT_0_r;
  reg   [7:0] rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_B;
  reg   [7:0] reg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_B_next;
  reg   [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_B_r;
  reg   [7:0] rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_N;
  reg   [7:0] reg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_N_next;
  reg   [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_N_r;
  reg   [7:0] rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_E;
  reg   [7:0] reg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_E_next;
  reg   [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_E_r;
  reg   [7:0] rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_CDMA_DAT;
  reg   [7:0] reg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_CDMA_DAT_next;
  reg   [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_CDMA_DAT_r;
  reg   [31:0] l2d_NVDLA_CVIF_CFG_RD_WEIGHT_1_r;
  reg   [7:0] rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_CDMA_WT;
  reg   [7:0] reg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_CDMA_WT_next;
  reg   [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_CDMA_WT_r;
  reg   [7:0] rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RBK;
  reg   [7:0] reg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RBK_next;
  reg   [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RBK_r;
  reg   [7:0] rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_1;
  reg   [7:0] reg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_1_next;
  reg   [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_1_r;
  reg   [7:0] rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_0;
  reg   [7:0] reg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_0_next;
  reg   [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_0_r;
  reg   [31:0] l2d_NVDLA_CVIF_CFG_RD_WEIGHT_2_r;
  reg   [7:0] rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_BDMA;
  reg   [7:0] reg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_BDMA_next;
  reg   [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_BDMA_r;
  reg   [7:0] rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_SDP;
  reg   [7:0] reg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_SDP_next;
  reg   [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_SDP_r;
  reg   [7:0] rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_PDP;
  reg   [7:0] reg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_PDP_next;
  reg   [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_PDP_r;
  reg   [7:0] rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_CDP;
  reg   [7:0] reg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_CDP_next;
  reg   [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_CDP_r;
  reg   [31:0] l2d_NVDLA_CVIF_CFG_WR_WEIGHT_0_r;
  reg   [7:0] rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RBK;
  reg   [7:0] reg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RBK_next;
  reg   [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RBK_r;
  reg   [7:0] rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_2;
  reg   [7:0] reg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_2_next;
  reg   [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_2_r;
  reg   [7:0] rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_1;
  reg   [7:0] reg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_1_next;
  reg   [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_1_r;
  reg   [7:0] rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_0;
  reg   [7:0] reg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_0_next;
  reg   [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_0_r;
  reg   [31:0] l2d_NVDLA_CVIF_CFG_WR_WEIGHT_1_r;
  reg   [7:0] rg_NVDLA_CVIF_CFG_OUTSTANDING_CNT_RD_OS_CNT;
  reg   [7:0] reg_NVDLA_CVIF_CFG_OUTSTANDING_CNT_RD_OS_CNT_next;
  reg   [7:0] l2h_NVDLA_CVIF_CFG_OUTSTANDING_CNT_RD_OS_CNT_r;
  reg   [7:0] rg_NVDLA_CVIF_CFG_OUTSTANDING_CNT_WR_OS_CNT;
  reg   [7:0] reg_NVDLA_CVIF_CFG_OUTSTANDING_CNT_WR_OS_CNT_next;
  reg   [7:0] l2h_NVDLA_CVIF_CFG_OUTSTANDING_CNT_WR_OS_CNT_r;
  reg   [31:0] l2d_NVDLA_CVIF_CFG_OUTSTANDING_CNT_r;
  reg  rg_NVDLA_CVIF_STATUS_IDLE;
  reg   [31:0] l2d_NVDLA_CVIF_STATUS_r;
  
  
  //------- combinatorial assigns for NVDLA_CVIF_CFG_RD_WEIGHT_2
  always @ (*) begin
    reg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_CDMA_WT_next = rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_CDMA_WT;
    l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_CDMA_WT_r = rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_CDMA_WT;
    reg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RBK_next = rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RBK;
    l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RBK_r = rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RBK;
    reg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_1_next = rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_1;
    l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_1_r = rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_1;
    reg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_0_next = rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_0;
    l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_0_r = rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_0;
    if (d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_we) reg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_CDMA_WT_next = d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_w [7:0] ;
    if (d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_we) reg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RBK_next = d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_w [15:8] ;
    if (d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_we) reg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_1_next = d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_w [23:16] ;
    if (d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_we) reg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_0_next = d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_w [31:24] ;
  end
  
  //------- reg assigns for NVDLA_CVIF_CFG_RD_WEIGHT_2
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_CDMA_WT <= #1 8'h1;
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RBK <= #1 8'h1;
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_1 <= #1 8'h1;
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_0 <= #1 8'h1;
    end
    else begin
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_CDMA_WT <= #1  reg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_CDMA_WT_next;
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RBK <= #1  reg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RBK_next;
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_1 <= #1  reg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_1_next;
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_0 <= #1  reg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_0_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CVIF_CFG_RD_WEIGHT_1
  always @ (*) begin
    reg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_B_next = rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_B;
    l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_B_r = rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_B;
    reg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_N_next = rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_N;
    l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_N_r = rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_N;
    reg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_E_next = rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_E;
    l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_E_r = rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_E;
    reg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_CDMA_DAT_next = rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_CDMA_DAT;
    l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_CDMA_DAT_r = rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_CDMA_DAT;
    if (d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_we) reg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_B_next = d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_w [7:0] ;
    if (d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_we) reg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_N_next = d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_w [15:8] ;
    if (d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_we) reg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_E_next = d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_w [23:16] ;
    if (d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_we) reg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_CDMA_DAT_next = d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_w [31:24] ;
  end
  
  //------- reg assigns for NVDLA_CVIF_CFG_RD_WEIGHT_1
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_B <= #1 8'h1;
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_N <= #1 8'h1;
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_E <= #1 8'h1;
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_CDMA_DAT <= #1 8'h1;
    end
    else begin
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_B <= #1  reg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_B_next;
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_N <= #1  reg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_N_next;
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_E <= #1  reg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_E_next;
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_CDMA_DAT <= #1  reg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_CDMA_DAT_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CVIF_CFG_RD_WEIGHT_0
  always @ (*) begin
    reg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_BDMA_next = rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_BDMA;
    l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_BDMA_r = rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_BDMA;
    reg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_SDP_next = rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_SDP;
    l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_SDP_r = rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_SDP;
    reg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_PDP_next = rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_PDP;
    l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_PDP_r = rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_PDP;
    reg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_CDP_next = rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_CDP;
    l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_CDP_r = rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_CDP;
    if (d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_we) reg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_BDMA_next = d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_w [7:0] ;
    if (d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_we) reg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_SDP_next = d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_w [15:8] ;
    if (d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_we) reg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_PDP_next = d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_w [23:16] ;
    if (d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_we) reg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_CDP_next = d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_w [31:24] ;
  end
  
  //------- reg assigns for NVDLA_CVIF_CFG_RD_WEIGHT_0
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_BDMA <= #1 8'h1;
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_SDP <= #1 8'h1;
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_PDP <= #1 8'h1;
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_CDP <= #1 8'h1;
    end
    else begin
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_BDMA <= #1  reg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_BDMA_next;
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_SDP <= #1  reg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_SDP_next;
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_PDP <= #1  reg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_PDP_next;
      rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_CDP <= #1  reg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_CDP_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CVIF_CFG_RD_WEIGHT_2 (pio read data)
  always @ (*) begin
    l2d_NVDLA_CVIF_CFG_RD_WEIGHT_2_r [7:0]  = rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_CDMA_WT;
    l2d_NVDLA_CVIF_CFG_RD_WEIGHT_2_r [15:8]  = rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RBK;
    l2d_NVDLA_CVIF_CFG_RD_WEIGHT_2_r [23:16]  = rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_1;
    l2d_NVDLA_CVIF_CFG_RD_WEIGHT_2_r [31:24]  = rg_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_0;
  end
  
  //------- combinatorial assigns for NVDLA_CVIF_CFG_WR_WEIGHT_1
  always @ (*) begin
    reg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RBK_next = rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RBK;
    l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RBK_r = rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RBK;
    reg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_2_next = rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_2;
    l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_2_r = rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_2;
    reg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_1_next = rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_1;
    l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_1_r = rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_1;
    reg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_0_next = rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_0;
    l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_0_r = rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_0;
    if (d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_we) reg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RBK_next = d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_w [7:0] ;
    if (d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_we) reg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_2_next = d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_w [15:8] ;
    if (d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_we) reg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_1_next = d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_w [23:16] ;
    if (d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_we) reg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_0_next = d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_w [31:24] ;
  end
  
  //------- reg assigns for NVDLA_CVIF_CFG_WR_WEIGHT_1
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RBK <= #1 8'h1;
      rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_2 <= #1 8'h1;
      rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_1 <= #1 8'h1;
      rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_0 <= #1 8'h1;
    end
    else begin
      rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RBK <= #1  reg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RBK_next;
      rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_2 <= #1  reg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_2_next;
      rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_1 <= #1  reg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_1_next;
      rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_0 <= #1  reg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_0_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CVIF_CFG_WR_WEIGHT_0
  always @ (*) begin
    reg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_BDMA_next = rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_BDMA;
    l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_BDMA_r = rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_BDMA;
    reg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_SDP_next = rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_SDP;
    l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_SDP_r = rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_SDP;
    reg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_PDP_next = rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_PDP;
    l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_PDP_r = rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_PDP;
    reg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_CDP_next = rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_CDP;
    l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_CDP_r = rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_CDP;
    if (d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_we) reg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_BDMA_next = d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_w [7:0] ;
    if (d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_we) reg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_SDP_next = d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_w [15:8] ;
    if (d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_we) reg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_PDP_next = d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_w [23:16] ;
    if (d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_we) reg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_CDP_next = d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_w [31:24] ;
  end
  
  //------- reg assigns for NVDLA_CVIF_CFG_WR_WEIGHT_0
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_BDMA <= #1 8'h1;
      rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_SDP <= #1 8'h1;
      rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_PDP <= #1 8'h1;
      rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_CDP <= #1 8'h1;
    end
    else begin
      rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_BDMA <= #1  reg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_BDMA_next;
      rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_SDP <= #1  reg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_SDP_next;
      rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_PDP <= #1  reg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_PDP_next;
      rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_CDP <= #1  reg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_CDP_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CVIF_CFG_WR_WEIGHT_1 (pio read data)
  always @ (*) begin
    l2d_NVDLA_CVIF_CFG_WR_WEIGHT_1_r [7:0]  = rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RBK;
    l2d_NVDLA_CVIF_CFG_WR_WEIGHT_1_r [15:8]  = rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_2;
    l2d_NVDLA_CVIF_CFG_WR_WEIGHT_1_r [23:16]  = rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_1;
    l2d_NVDLA_CVIF_CFG_WR_WEIGHT_1_r [31:24]  = rg_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_0;
  end
  
  //------- combinatorial assigns for NVDLA_CVIF_CFG_OUTSTANDING_CNT (pio read data)
  always @ (*) begin
    l2d_NVDLA_CVIF_CFG_OUTSTANDING_CNT_r = 32'b0;
    l2d_NVDLA_CVIF_CFG_OUTSTANDING_CNT_r [7:0]  = rg_NVDLA_CVIF_CFG_OUTSTANDING_CNT_RD_OS_CNT;
    l2d_NVDLA_CVIF_CFG_OUTSTANDING_CNT_r [15:8]  = rg_NVDLA_CVIF_CFG_OUTSTANDING_CNT_WR_OS_CNT;
  end
  
  //------- combinatorial assigns for NVDLA_CVIF_CFG_WR_WEIGHT_0 (pio read data)
  always @ (*) begin
    l2d_NVDLA_CVIF_CFG_WR_WEIGHT_0_r [7:0]  = rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_BDMA;
    l2d_NVDLA_CVIF_CFG_WR_WEIGHT_0_r [15:8]  = rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_SDP;
    l2d_NVDLA_CVIF_CFG_WR_WEIGHT_0_r [23:16]  = rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_PDP;
    l2d_NVDLA_CVIF_CFG_WR_WEIGHT_0_r [31:24]  = rg_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_CDP;
  end
  
  //------- combinatorial assigns for NVDLA_CVIF_CFG_RD_WEIGHT_0 (pio read data)
  always @ (*) begin
    l2d_NVDLA_CVIF_CFG_RD_WEIGHT_0_r [7:0]  = rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_BDMA;
    l2d_NVDLA_CVIF_CFG_RD_WEIGHT_0_r [15:8]  = rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_SDP;
    l2d_NVDLA_CVIF_CFG_RD_WEIGHT_0_r [23:16]  = rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_PDP;
    l2d_NVDLA_CVIF_CFG_RD_WEIGHT_0_r [31:24]  = rg_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_CDP;
  end
  
  //------- combinatorial assigns for NVDLA_CVIF_STATUS
  always @ (*) begin
    rg_NVDLA_CVIF_STATUS_IDLE =  h2l_NVDLA_CVIF_STATUS_IDLE_w;
  end
  
  //------- combinatorial assigns for NVDLA_CVIF_STATUS (pio read data)
  always @ (*) begin
    l2d_NVDLA_CVIF_STATUS_r = 32'b0;
    l2d_NVDLA_CVIF_STATUS_r [8]  = rg_NVDLA_CVIF_STATUS_IDLE;
  end
  
  //------- combinatorial assigns for NVDLA_CVIF_CFG_OUTSTANDING_CNT
  always @ (*) begin
    reg_NVDLA_CVIF_CFG_OUTSTANDING_CNT_RD_OS_CNT_next = rg_NVDLA_CVIF_CFG_OUTSTANDING_CNT_RD_OS_CNT;
    l2h_NVDLA_CVIF_CFG_OUTSTANDING_CNT_RD_OS_CNT_r = rg_NVDLA_CVIF_CFG_OUTSTANDING_CNT_RD_OS_CNT;
    reg_NVDLA_CVIF_CFG_OUTSTANDING_CNT_WR_OS_CNT_next = rg_NVDLA_CVIF_CFG_OUTSTANDING_CNT_WR_OS_CNT;
    l2h_NVDLA_CVIF_CFG_OUTSTANDING_CNT_WR_OS_CNT_r = rg_NVDLA_CVIF_CFG_OUTSTANDING_CNT_WR_OS_CNT;
    if (d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_we) reg_NVDLA_CVIF_CFG_OUTSTANDING_CNT_RD_OS_CNT_next = d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_w [7:0] ;
    if (d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_we) reg_NVDLA_CVIF_CFG_OUTSTANDING_CNT_WR_OS_CNT_next = d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_w [15:8] ;
  end
  
  //------- reg assigns for NVDLA_CVIF_CFG_OUTSTANDING_CNT
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_CVIF_CFG_OUTSTANDING_CNT_RD_OS_CNT <= #1 8'hff;
      rg_NVDLA_CVIF_CFG_OUTSTANDING_CNT_WR_OS_CNT <= #1 8'hff;
    end
    else begin
      rg_NVDLA_CVIF_CFG_OUTSTANDING_CNT_RD_OS_CNT <= #1  reg_NVDLA_CVIF_CFG_OUTSTANDING_CNT_RD_OS_CNT_next;
      rg_NVDLA_CVIF_CFG_OUTSTANDING_CNT_WR_OS_CNT <= #1  reg_NVDLA_CVIF_CFG_OUTSTANDING_CNT_WR_OS_CNT_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_CVIF_CFG_RD_WEIGHT_1 (pio read data)
  always @ (*) begin
    l2d_NVDLA_CVIF_CFG_RD_WEIGHT_1_r [7:0]  = rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_B;
    l2d_NVDLA_CVIF_CFG_RD_WEIGHT_1_r [15:8]  = rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_N;
    l2d_NVDLA_CVIF_CFG_RD_WEIGHT_1_r [23:16]  = rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_E;
    l2d_NVDLA_CVIF_CFG_RD_WEIGHT_1_r [31:24]  = rg_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_CDMA_DAT;
  end
  
endmodule

//
//---------- module addrmap_NVDLA_jrdl_decode
//
module addrmap_NVDLA_jrdl_decode
(
  clk,
  reset,
  leaf_dec_wr_data,
  leaf_dec_addr,
  leaf_dec_block_sel,
  leaf_dec_valid,
  leaf_dec_wr_dvld,
  leaf_dec_cycle,
  leaf_dec_wr_width,
  l2d_NVDLA_CVIF_CFG_RD_WEIGHT_0_r,
  l2d_NVDLA_CVIF_CFG_RD_WEIGHT_1_r,
  l2d_NVDLA_CVIF_CFG_RD_WEIGHT_2_r,
  l2d_NVDLA_CVIF_CFG_WR_WEIGHT_0_r,
  l2d_NVDLA_CVIF_CFG_WR_WEIGHT_1_r,
  l2d_NVDLA_CVIF_CFG_OUTSTANDING_CNT_r,
  l2d_NVDLA_CVIF_STATUS_r,

  dec_leaf_rd_data,
  dec_leaf_ack,
  dec_leaf_nack,
  dec_leaf_accept,
  dec_leaf_reject,
  dec_leaf_retry_atomic,
  dec_leaf_data_width,
  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_w,
  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_we,
  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_re,
  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_w,
  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_we,
  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_re,
  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_w,
  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_we,
  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_re,
  d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_w,
  d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_we,
  d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_re,
  d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_w,
  d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_we,
  d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_re,
  d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_w,
  d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_we,
  d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_re,
  d2l_NVDLA_CVIF_STATUS_w,
  d2l_NVDLA_CVIF_STATUS_we,
  d2l_NVDLA_CVIF_STATUS_re );

  //------- inputs
  input    clk;
  input    reset;
  input     [31:0] leaf_dec_wr_data;
  input     [39:0] leaf_dec_addr;
  input    leaf_dec_block_sel;
  input    leaf_dec_valid;
  input    leaf_dec_wr_dvld;
  input     [1:0] leaf_dec_cycle;
  input     [2:0] leaf_dec_wr_width;
  input     [31:0] l2d_NVDLA_CVIF_CFG_RD_WEIGHT_0_r;
  input     [31:0] l2d_NVDLA_CVIF_CFG_RD_WEIGHT_1_r;
  input     [31:0] l2d_NVDLA_CVIF_CFG_RD_WEIGHT_2_r;
  input     [31:0] l2d_NVDLA_CVIF_CFG_WR_WEIGHT_0_r;
  input     [31:0] l2d_NVDLA_CVIF_CFG_WR_WEIGHT_1_r;
  input     [31:0] l2d_NVDLA_CVIF_CFG_OUTSTANDING_CNT_r;
  input     [31:0] l2d_NVDLA_CVIF_STATUS_r;

  //------- outputs
  output     [31:0] dec_leaf_rd_data;
  output    dec_leaf_ack;
  output    dec_leaf_nack;
  output    dec_leaf_accept;
  output    dec_leaf_reject;
  output    dec_leaf_retry_atomic;
  output     [2:0] dec_leaf_data_width;
  output     [31:0] d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_w;
  output    d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_we;
  output    d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_re;
  output     [31:0] d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_w;
  output    d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_we;
  output    d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_re;
  output     [31:0] d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_w;
  output    d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_we;
  output    d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_re;
  output     [31:0] d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_w;
  output    d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_we;
  output    d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_re;
  output     [31:0] d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_w;
  output    d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_we;
  output    d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_re;
  output     [31:0] d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_w;
  output    d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_we;
  output    d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_re;
  output     [31:0] d2l_NVDLA_CVIF_STATUS_w;
  output    d2l_NVDLA_CVIF_STATUS_we;
  output    d2l_NVDLA_CVIF_STATUS_re;


  //------- wire defines
  wire   [31:0] pio_dec_write_data;
  wire   [15:2] pio_dec_address;
  wire  pio_dec_read;
  wire  pio_dec_write;
  wire   [39:0] block_sel_addr;
  wire  block_sel;
  wire  leaf_dec_valid_active;
  wire  leaf_dec_wr_dvld_active;
  
  //------- reg defines
  reg   [31:0] d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_w;
  reg  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_we;
  reg  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_re;
  reg   [31:0] d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_w;
  reg  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_we;
  reg  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_re;
  reg   [31:0] d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_w;
  reg  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_we;
  reg  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_re;
  reg   [31:0] d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_w;
  reg  d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_we;
  reg  d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_re;
  reg   [31:0] d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_w;
  reg  d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_we;
  reg  d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_re;
  reg   [31:0] d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_w;
  reg  d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_we;
  reg  d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_re;
  reg   [31:0] d2l_NVDLA_CVIF_STATUS_w;
  reg  d2l_NVDLA_CVIF_STATUS_we;
  reg  d2l_NVDLA_CVIF_STATUS_re;
  reg  leaf_dec_valid_hld1;
  reg  leaf_dec_valid_hld1_next;
  reg  leaf_dec_wr_dvld_hld1;
  reg  leaf_dec_wr_dvld_hld1_next;
  reg  pio_write_active;
  reg  pio_read_active;
  reg   [15:2] pio_dec_address_d1;
  reg   [31:0] pio_dec_write_data_d1;
  reg   [31:0] dec_pio_read_data;
  reg   [31:0] dec_pio_read_data_d1;
  reg  dec_pio_ack;
  reg  dec_pio_nack;
  reg  dec_pio_ack_next;
  reg  dec_pio_nack_next;
  reg  pio_internal_ack;
  reg  pio_internal_nack;
  reg  pio_external_ack;
  reg  pio_external_nack;
  reg  pio_external_ack_next;
  reg  pio_external_nack_next;
  reg  pio_no_acks;
  reg  pio_activate_write;
  reg  pio_activate_read;
  reg   [31:0] dec_pio_read_data_next;
  reg  external_transaction_active;
  
  
  //------- assigns
  assign  pio_dec_write_data = leaf_dec_wr_data;
  assign  dec_leaf_rd_data = dec_pio_read_data;
  assign  dec_leaf_ack = dec_pio_ack;
  assign  dec_leaf_nack = dec_pio_nack;
  assign  pio_dec_address = leaf_dec_addr [15:2] ;
  assign  block_sel_addr = 40'h0;
  assign  block_sel = leaf_dec_block_sel;
  assign  leaf_dec_wr_dvld_active = leaf_dec_wr_dvld | leaf_dec_wr_dvld_hld1;
  assign  leaf_dec_valid_active = leaf_dec_valid | leaf_dec_valid_hld1;
  assign  dec_leaf_accept = leaf_dec_valid & block_sel;
  assign  dec_leaf_reject = leaf_dec_valid & ~block_sel;
  assign  pio_dec_read = block_sel & leaf_dec_valid_active & (leaf_dec_cycle == 2'b10);
  assign  pio_dec_write = block_sel & leaf_dec_wr_dvld_active & (leaf_dec_cycle[1] == 1'b0);
  assign  dec_leaf_retry_atomic = 1'b0;
  assign  dec_leaf_data_width = 3'b0;
  
  //------- combinatorial assigns for pio read data
  always @ (*) begin
    dec_pio_read_data = dec_pio_read_data_d1;
  end
  
  //------- reg assigns for pio read data
  always @ (posedge clk) begin
    if (reset) begin
      dec_pio_read_data_d1 <= #1  32'b0;
    end
    else begin
      dec_pio_read_data_d1 <= #1 dec_pio_read_data_next;
    end
  end
  
  //------- reg assigns for pio i/f
  always @ (posedge clk) begin
    if (reset) begin
      pio_write_active <= #1  1'b0;
      pio_read_active <= #1  1'b0;
    end
    else begin
      pio_write_active <= #1  pio_write_active ? pio_no_acks : pio_activate_write;
      pio_read_active <= #1  pio_read_active ? pio_no_acks : pio_activate_read;
      pio_dec_address_d1 <= #1   pio_dec_address;
      pio_dec_write_data_d1 <= #1  pio_dec_write_data;
    end
  end
  
  //------- combinatorial assigns for leaf i/f
  always @ (*) begin
    leaf_dec_valid_hld1_next = leaf_dec_valid | leaf_dec_valid_hld1;
    if (dec_pio_ack_next | dec_pio_nack_next) leaf_dec_valid_hld1_next = 1'b0;
    leaf_dec_wr_dvld_hld1_next = leaf_dec_wr_dvld | leaf_dec_wr_dvld_hld1;
    if (dec_pio_ack_next | dec_pio_nack_next | leaf_dec_valid) leaf_dec_wr_dvld_hld1_next = 1'b0;
  end
  
  //------- reg assigns for leaf i/f
  always @ (posedge clk) begin
    if (reset) begin
      leaf_dec_valid_hld1 <= #1  1'b0;
      leaf_dec_wr_dvld_hld1 <= #1  1'b0;
    end
    else begin
      leaf_dec_valid_hld1 <= #1 leaf_dec_valid_hld1_next;
      leaf_dec_wr_dvld_hld1 <= #1 leaf_dec_wr_dvld_hld1_next;
    end
  end
  
  //------- combinatorial assigns for pio ack/nack
  always @ (*) begin
    pio_internal_nack = (pio_read_active | pio_write_active) & ~pio_internal_ack & ~external_transaction_active;
    dec_pio_ack_next = (pio_internal_ack | (pio_external_ack_next & external_transaction_active));
    dec_pio_nack_next = (pio_internal_nack | (pio_external_nack_next & external_transaction_active));
    pio_no_acks = ~(dec_pio_ack | dec_pio_nack | pio_external_ack | pio_external_nack);
    pio_activate_write = (pio_dec_write & ~(dec_pio_ack | dec_pio_nack));
    pio_activate_read = (pio_dec_read & ~(dec_pio_ack | dec_pio_nack));
  end
  
  //------- reg assigns for pio ack/nack
  always @ (posedge clk) begin
    if (reset) begin
      dec_pio_ack <= #1 1'b0;
      dec_pio_nack <= #1 1'b0;
      pio_external_ack <= #1  1'b0;
      pio_external_nack <= #1  1'b0;
    end
    else begin
      dec_pio_ack <= #1 dec_pio_ack ? 1'b0 : dec_pio_ack_next;
      dec_pio_nack <= #1 dec_pio_nack ? 1'b0 : dec_pio_nack_next;
      pio_external_ack <= #1 pio_external_ack_next;
      pio_external_nack <= #1 pio_external_nack_next;
    end
  end
  
  
  //------- address decode
  always @ (*) begin
    pio_internal_ack = 1'b0;
    external_transaction_active = 1'b0;
    pio_external_ack_next = 1'b0;
    pio_external_nack_next = 1'b0;
    dec_pio_read_data_next = 32'b0;
    
    d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_we = 1'b0;
    d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_re = 1'b0;
    d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_we = 1'b0;
    d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_re = 1'b0;
    d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_we = 1'b0;
    d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_re = 1'b0;
    d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_we = 1'b0;
    d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_re = 1'b0;
    d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_we = 1'b0;
    d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_re = 1'b0;
    d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_we = 1'b0;
    d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_re = 1'b0;
    d2l_NVDLA_CVIF_STATUS_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_CVIF_STATUS_we = 1'b0;
    d2l_NVDLA_CVIF_STATUS_re = 1'b0;
    
    casez(pio_dec_address_d1)
    //  Register: NVDLA_CVIF.CFG_RD_WEIGHT_0     Address: 0xf000     External: false
    14'b11110000000000:
      begin
        d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CVIF_CFG_RD_WEIGHT_0_r;
      end
    //  Register: NVDLA_CVIF.CFG_RD_WEIGHT_1     Address: 0xf004     External: false
    14'b11110000000001:
      begin
        d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CVIF_CFG_RD_WEIGHT_1_r;
      end
    //  Register: NVDLA_CVIF.CFG_RD_WEIGHT_2     Address: 0xf008     External: false
    14'b11110000000010:
      begin
        d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CVIF_CFG_RD_WEIGHT_2_r;
      end
    //  Register: NVDLA_CVIF.CFG_WR_WEIGHT_0     Address: 0xf00c     External: false
    14'b11110000000011:
      begin
        d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CVIF_CFG_WR_WEIGHT_0_r;
      end
    //  Register: NVDLA_CVIF.CFG_WR_WEIGHT_1     Address: 0xf010     External: false
    14'b11110000000100:
      begin
        d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CVIF_CFG_WR_WEIGHT_1_r;
      end
    //  Register: NVDLA_CVIF.CFG_OUTSTANDING_CNT     Address: 0xf014     External: false
    14'b11110000000101:
      begin
        d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CVIF_CFG_OUTSTANDING_CNT_r;
      end
    //  Register: NVDLA_CVIF.STATUS     Address: 0xf018     External: false
    14'b11110000000110:
      begin
        d2l_NVDLA_CVIF_STATUS_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_CVIF_STATUS_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_CVIF_STATUS_r;
      end
    endcase
  end
  
endmodule

//
//---------- module addrmap_NVDLA_pio
//
module addrmap_NVDLA_pio
(
  clk,
  reset,
  h2l_NVDLA_CVIF_STATUS_IDLE_w,
  leaf_dec_wr_data,
  leaf_dec_addr,
  leaf_dec_block_sel,
  leaf_dec_valid,
  leaf_dec_wr_dvld,
  leaf_dec_cycle,
  leaf_dec_wr_width,

  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_BDMA_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_SDP_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_PDP_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_CDP_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_B_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_N_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_E_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_CDMA_DAT_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_CDMA_WT_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RBK_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_1_r,
  l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_0_r,
  l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_BDMA_r,
  l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_SDP_r,
  l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_PDP_r,
  l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_CDP_r,
  l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RBK_r,
  l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_2_r,
  l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_1_r,
  l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_0_r,
  l2h_NVDLA_CVIF_CFG_OUTSTANDING_CNT_RD_OS_CNT_r,
  l2h_NVDLA_CVIF_CFG_OUTSTANDING_CNT_WR_OS_CNT_r,
  dec_leaf_rd_data,
  dec_leaf_ack,
  dec_leaf_nack,
  dec_leaf_accept,
  dec_leaf_reject,
  dec_leaf_retry_atomic,
  dec_leaf_data_width );

  //------- inputs
  input    clk;
  input    reset;
  input    h2l_NVDLA_CVIF_STATUS_IDLE_w;
  input     [31:0] leaf_dec_wr_data;
  input     [39:0] leaf_dec_addr;
  input    leaf_dec_block_sel;
  input    leaf_dec_valid;
  input    leaf_dec_wr_dvld;
  input     [1:0] leaf_dec_cycle;
  input     [2:0] leaf_dec_wr_width;

  //------- outputs
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_BDMA_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_SDP_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_PDP_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_CDP_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_B_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_N_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_E_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_CDMA_DAT_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_CDMA_WT_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RBK_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_1_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_0_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_BDMA_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_SDP_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_PDP_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_CDP_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RBK_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_2_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_1_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_0_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_OUTSTANDING_CNT_RD_OS_CNT_r;
  output     [7:0] l2h_NVDLA_CVIF_CFG_OUTSTANDING_CNT_WR_OS_CNT_r;
  output     [31:0] dec_leaf_rd_data;
  output    dec_leaf_ack;
  output    dec_leaf_nack;
  output    dec_leaf_accept;
  output    dec_leaf_reject;
  output    dec_leaf_retry_atomic;
  output     [2:0] dec_leaf_data_width;


  //------- wire defines
  wire   [31:0] d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_w;
  wire  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_we;
  wire  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_re;
  wire   [31:0] d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_w;
  wire  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_we;
  wire  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_re;
  wire   [31:0] d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_w;
  wire  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_we;
  wire  d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_re;
  wire   [31:0] d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_w;
  wire  d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_we;
  wire  d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_re;
  wire   [31:0] d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_w;
  wire  d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_we;
  wire  d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_re;
  wire   [31:0] d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_w;
  wire  d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_we;
  wire  d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_re;
  wire   [31:0] d2l_NVDLA_CVIF_STATUS_w;
  wire  d2l_NVDLA_CVIF_STATUS_we;
  wire  d2l_NVDLA_CVIF_STATUS_re;
  wire   [31:0] l2d_NVDLA_CVIF_CFG_RD_WEIGHT_0_r;
  wire   [31:0] l2d_NVDLA_CVIF_CFG_RD_WEIGHT_1_r;
  wire   [31:0] l2d_NVDLA_CVIF_CFG_RD_WEIGHT_2_r;
  wire   [31:0] l2d_NVDLA_CVIF_CFG_WR_WEIGHT_0_r;
  wire   [31:0] l2d_NVDLA_CVIF_CFG_WR_WEIGHT_1_r;
  wire   [31:0] l2d_NVDLA_CVIF_CFG_OUTSTANDING_CNT_r;
  wire   [31:0] l2d_NVDLA_CVIF_STATUS_r;
  
  
  addrmap_NVDLA_jrdl_decode pio_decode (
    .clk(clk),
    .reset(reset),
    .leaf_dec_wr_data(leaf_dec_wr_data),
    .leaf_dec_addr(leaf_dec_addr),
    .leaf_dec_block_sel(leaf_dec_block_sel),
    .leaf_dec_valid(leaf_dec_valid),
    .leaf_dec_wr_dvld(leaf_dec_wr_dvld),
    .leaf_dec_cycle(leaf_dec_cycle),
    .leaf_dec_wr_width(leaf_dec_wr_width),
    .l2d_NVDLA_CVIF_CFG_RD_WEIGHT_0_r(l2d_NVDLA_CVIF_CFG_RD_WEIGHT_0_r),
    .l2d_NVDLA_CVIF_CFG_RD_WEIGHT_1_r(l2d_NVDLA_CVIF_CFG_RD_WEIGHT_1_r),
    .l2d_NVDLA_CVIF_CFG_RD_WEIGHT_2_r(l2d_NVDLA_CVIF_CFG_RD_WEIGHT_2_r),
    .l2d_NVDLA_CVIF_CFG_WR_WEIGHT_0_r(l2d_NVDLA_CVIF_CFG_WR_WEIGHT_0_r),
    .l2d_NVDLA_CVIF_CFG_WR_WEIGHT_1_r(l2d_NVDLA_CVIF_CFG_WR_WEIGHT_1_r),
    .l2d_NVDLA_CVIF_CFG_OUTSTANDING_CNT_r(l2d_NVDLA_CVIF_CFG_OUTSTANDING_CNT_r),
    .l2d_NVDLA_CVIF_STATUS_r(l2d_NVDLA_CVIF_STATUS_r),
    .dec_leaf_rd_data(dec_leaf_rd_data),
    .dec_leaf_ack(dec_leaf_ack),
    .dec_leaf_nack(dec_leaf_nack),
    .dec_leaf_accept(dec_leaf_accept),
    .dec_leaf_reject(dec_leaf_reject),
    .dec_leaf_retry_atomic(dec_leaf_retry_atomic),
    .dec_leaf_data_width(dec_leaf_data_width),
    .d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_w(d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_w),
    .d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_we(d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_we),
    .d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_re(d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_re),
    .d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_w(d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_w),
    .d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_we(d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_we),
    .d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_re(d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_re),
    .d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_w(d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_w),
    .d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_we(d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_we),
    .d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_re(d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_re),
    .d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_w(d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_w),
    .d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_we(d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_we),
    .d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_re(d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_re),
    .d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_w(d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_w),
    .d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_we(d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_we),
    .d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_re(d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_re),
    .d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_w(d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_w),
    .d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_we(d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_we),
    .d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_re(d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_re),
    .d2l_NVDLA_CVIF_STATUS_w(d2l_NVDLA_CVIF_STATUS_w),
    .d2l_NVDLA_CVIF_STATUS_we(d2l_NVDLA_CVIF_STATUS_we),
    .d2l_NVDLA_CVIF_STATUS_re(d2l_NVDLA_CVIF_STATUS_re) );
    
  addrmap_NVDLA_jrdl_logic pio_logic (
    .clk(clk),
    .reset(reset),
    .d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_w(d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_w),
    .d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_we(d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_we),
    .d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_re(d2l_NVDLA_CVIF_CFG_RD_WEIGHT_0_re),
    .d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_w(d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_w),
    .d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_we(d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_we),
    .d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_re(d2l_NVDLA_CVIF_CFG_RD_WEIGHT_1_re),
    .d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_w(d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_w),
    .d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_we(d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_we),
    .d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_re(d2l_NVDLA_CVIF_CFG_RD_WEIGHT_2_re),
    .d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_w(d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_w),
    .d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_we(d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_we),
    .d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_re(d2l_NVDLA_CVIF_CFG_WR_WEIGHT_0_re),
    .d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_w(d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_w),
    .d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_we(d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_we),
    .d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_re(d2l_NVDLA_CVIF_CFG_WR_WEIGHT_1_re),
    .d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_w(d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_w),
    .d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_we(d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_we),
    .d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_re(d2l_NVDLA_CVIF_CFG_OUTSTANDING_CNT_re),
    .d2l_NVDLA_CVIF_STATUS_w(d2l_NVDLA_CVIF_STATUS_w),
    .d2l_NVDLA_CVIF_STATUS_we(d2l_NVDLA_CVIF_STATUS_we),
    .d2l_NVDLA_CVIF_STATUS_re(d2l_NVDLA_CVIF_STATUS_re),
    .h2l_NVDLA_CVIF_STATUS_IDLE_w(h2l_NVDLA_CVIF_STATUS_IDLE_w),
    .l2d_NVDLA_CVIF_CFG_RD_WEIGHT_0_r(l2d_NVDLA_CVIF_CFG_RD_WEIGHT_0_r),
    .l2d_NVDLA_CVIF_CFG_RD_WEIGHT_1_r(l2d_NVDLA_CVIF_CFG_RD_WEIGHT_1_r),
    .l2d_NVDLA_CVIF_CFG_RD_WEIGHT_2_r(l2d_NVDLA_CVIF_CFG_RD_WEIGHT_2_r),
    .l2d_NVDLA_CVIF_CFG_WR_WEIGHT_0_r(l2d_NVDLA_CVIF_CFG_WR_WEIGHT_0_r),
    .l2d_NVDLA_CVIF_CFG_WR_WEIGHT_1_r(l2d_NVDLA_CVIF_CFG_WR_WEIGHT_1_r),
    .l2d_NVDLA_CVIF_CFG_OUTSTANDING_CNT_r(l2d_NVDLA_CVIF_CFG_OUTSTANDING_CNT_r),
    .l2d_NVDLA_CVIF_STATUS_r(l2d_NVDLA_CVIF_STATUS_r),
    .l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_BDMA_r(l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_BDMA_r),
    .l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_SDP_r(l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_SDP_r),
    .l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_PDP_r(l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_PDP_r),
    .l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_CDP_r(l2h_NVDLA_CVIF_CFG_RD_WEIGHT_0_RD_WEIGHT_CDP_r),
    .l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_B_r(l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_B_r),
    .l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_N_r(l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_N_r),
    .l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_E_r(l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_SDP_E_r),
    .l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_CDMA_DAT_r(l2h_NVDLA_CVIF_CFG_RD_WEIGHT_1_RD_WEIGHT_CDMA_DAT_r),
    .l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_CDMA_WT_r(l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_CDMA_WT_r),
    .l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RBK_r(l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RBK_r),
    .l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_1_r(l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_1_r),
    .l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_0_r(l2h_NVDLA_CVIF_CFG_RD_WEIGHT_2_RD_WEIGHT_RSV_0_r),
    .l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_BDMA_r(l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_BDMA_r),
    .l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_SDP_r(l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_SDP_r),
    .l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_PDP_r(l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_PDP_r),
    .l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_CDP_r(l2h_NVDLA_CVIF_CFG_WR_WEIGHT_0_WR_WEIGHT_CDP_r),
    .l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RBK_r(l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RBK_r),
    .l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_2_r(l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_2_r),
    .l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_1_r(l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_1_r),
    .l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_0_r(l2h_NVDLA_CVIF_CFG_WR_WEIGHT_1_WR_WEIGHT_RSV_0_r),
    .l2h_NVDLA_CVIF_CFG_OUTSTANDING_CNT_RD_OS_CNT_r(l2h_NVDLA_CVIF_CFG_OUTSTANDING_CNT_RD_OS_CNT_r),
    .l2h_NVDLA_CVIF_CFG_OUTSTANDING_CNT_WR_OS_CNT_r(l2h_NVDLA_CVIF_CFG_OUTSTANDING_CNT_WR_OS_CNT_r) );
    
endmodule

