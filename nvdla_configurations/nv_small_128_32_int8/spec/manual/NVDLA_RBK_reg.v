//   Ordt 171103.01 autogenerated file 
//   Input: NVDLA_RBK.rdl
//   Parms: opendla.parms
//   Date: Tue Feb 04 18:03:52 CET 2020
//

//
//---------- module addrmap_NVDLA_jrdl_logic
//
module addrmap_NVDLA_jrdl_logic
(
  clk,
  reset,
  d2l_NVDLA_RBK_S_STATUS_w,
  d2l_NVDLA_RBK_S_STATUS_we,
  d2l_NVDLA_RBK_S_STATUS_re,
  d2l_NVDLA_RBK_S_POINTER_w,
  d2l_NVDLA_RBK_S_POINTER_we,
  d2l_NVDLA_RBK_S_POINTER_re,
  d2l_NVDLA_RBK_D_OP_ENABLE_w,
  d2l_NVDLA_RBK_D_OP_ENABLE_we,
  d2l_NVDLA_RBK_D_OP_ENABLE_re,
  d2l_NVDLA_RBK_D_MISC_CFG_w,
  d2l_NVDLA_RBK_D_MISC_CFG_we,
  d2l_NVDLA_RBK_D_MISC_CFG_re,
  d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_w,
  d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_we,
  d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_re,
  d2l_NVDLA_RBK_D_DATAIN_SIZE_0_w,
  d2l_NVDLA_RBK_D_DATAIN_SIZE_0_we,
  d2l_NVDLA_RBK_D_DATAIN_SIZE_0_re,
  d2l_NVDLA_RBK_D_DATAIN_SIZE_1_w,
  d2l_NVDLA_RBK_D_DATAIN_SIZE_1_we,
  d2l_NVDLA_RBK_D_DATAIN_SIZE_1_re,
  d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_w,
  d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_we,
  d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_re,
  d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_w,
  d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_we,
  d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_re,
  d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_w,
  d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_we,
  d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_re,
  d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_w,
  d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_we,
  d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_re,
  d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_w,
  d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_we,
  d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_re,
  d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_w,
  d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_we,
  d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_re,
  d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_w,
  d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_we,
  d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_re,
  d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_w,
  d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_we,
  d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_re,
  d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_w,
  d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_we,
  d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_re,
  d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_w,
  d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_we,
  d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_re,
  d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_w,
  d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_we,
  d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_re,
  d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_w,
  d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_we,
  d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_re,
  d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_w,
  d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_we,
  d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_re,
  d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_w,
  d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_we,
  d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_re,
  d2l_NVDLA_RBK_D_DECONV_STRIDE_w,
  d2l_NVDLA_RBK_D_DECONV_STRIDE_we,
  d2l_NVDLA_RBK_D_DECONV_STRIDE_re,
  d2l_NVDLA_RBK_D_PERF_ENABLE_w,
  d2l_NVDLA_RBK_D_PERF_ENABLE_we,
  d2l_NVDLA_RBK_D_PERF_ENABLE_re,
  d2l_NVDLA_RBK_D_PERF_READ_STALL_w,
  d2l_NVDLA_RBK_D_PERF_READ_STALL_we,
  d2l_NVDLA_RBK_D_PERF_READ_STALL_re,
  d2l_NVDLA_RBK_D_PERF_WRITE_STALL_w,
  d2l_NVDLA_RBK_D_PERF_WRITE_STALL_we,
  d2l_NVDLA_RBK_D_PERF_WRITE_STALL_re,
  h2l_NVDLA_RBK_S_STATUS_STATUS_0_w,
  h2l_NVDLA_RBK_S_STATUS_STATUS_1_w,
  h2l_NVDLA_RBK_S_POINTER_CONSUMER_w,
  h2l_NVDLA_RBK_D_PERF_READ_STALL_RD_STALL_CNT_w,
  h2l_NVDLA_RBK_D_PERF_WRITE_STALL_WR_STALL_CNT_w,

  l2d_NVDLA_RBK_S_STATUS_r,
  l2d_NVDLA_RBK_S_POINTER_r,
  l2d_NVDLA_RBK_D_OP_ENABLE_r,
  l2d_NVDLA_RBK_D_MISC_CFG_r,
  l2d_NVDLA_RBK_D_DAIN_RAM_TYPE_r,
  l2d_NVDLA_RBK_D_DATAIN_SIZE_0_r,
  l2d_NVDLA_RBK_D_DATAIN_SIZE_1_r,
  l2d_NVDLA_RBK_D_DAIN_ADDR_HIGH_r,
  l2d_NVDLA_RBK_D_DAIN_ADDR_LOW_r,
  l2d_NVDLA_RBK_D_DAIN_LINE_STRIDE_r,
  l2d_NVDLA_RBK_D_DAIN_SURF_STRIDE_r,
  l2d_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_r,
  l2d_NVDLA_RBK_D_DAOUT_RAM_TYPE_r,
  l2d_NVDLA_RBK_D_DATAOUT_SIZE_1_r,
  l2d_NVDLA_RBK_D_DAOUT_ADDR_HIGH_r,
  l2d_NVDLA_RBK_D_DAOUT_ADDR_LOW_r,
  l2d_NVDLA_RBK_D_DAOUT_LINE_STRIDE_r,
  l2d_NVDLA_RBK_D_CONTRACT_STRIDE_0_r,
  l2d_NVDLA_RBK_D_CONTRACT_STRIDE_1_r,
  l2d_NVDLA_RBK_D_DAOUT_SURF_STRIDE_r,
  l2d_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_r,
  l2d_NVDLA_RBK_D_DECONV_STRIDE_r,
  l2d_NVDLA_RBK_D_PERF_ENABLE_r,
  l2d_NVDLA_RBK_D_PERF_READ_STALL_r,
  l2d_NVDLA_RBK_D_PERF_WRITE_STALL_r,
  l2h_NVDLA_RBK_S_POINTER_PRODUCER_r,
  l2h_NVDLA_RBK_D_OP_ENABLE_OP_EN_r,
  l2h_NVDLA_RBK_D_MISC_CFG_RUBIK_MODE_r,
  l2h_NVDLA_RBK_D_MISC_CFG_IN_PRECISION_r,
  l2h_NVDLA_RBK_D_DAIN_RAM_TYPE_DATAIN_RAM_TYPE_r,
  l2h_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_WIDTH_r,
  l2h_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_HEIGHT_r,
  l2h_NVDLA_RBK_D_DATAIN_SIZE_1_DATAIN_CHANNEL_r,
  l2h_NVDLA_RBK_D_DAIN_ADDR_HIGH_DAIN_ADDR_HIGH_r,
  l2h_NVDLA_RBK_D_DAIN_ADDR_LOW_DAIN_ADDR_LOW_r,
  l2h_NVDLA_RBK_D_DAIN_LINE_STRIDE_DAIN_LINE_STRIDE_r,
  l2h_NVDLA_RBK_D_DAIN_SURF_STRIDE_DAIN_SURF_STRIDE_r,
  l2h_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_DAIN_PLANAR_STRIDE_r,
  l2h_NVDLA_RBK_D_DAOUT_RAM_TYPE_DATAOUT_RAM_TYPE_r,
  l2h_NVDLA_RBK_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_r,
  l2h_NVDLA_RBK_D_DAOUT_ADDR_HIGH_DAOUT_ADDR_HIGH_r,
  l2h_NVDLA_RBK_D_DAOUT_ADDR_LOW_DAOUT_ADDR_LOW_r,
  l2h_NVDLA_RBK_D_DAOUT_LINE_STRIDE_DAOUT_LINE_STRIDE_r,
  l2h_NVDLA_RBK_D_CONTRACT_STRIDE_0_CONTRACT_STRIDE_0_r,
  l2h_NVDLA_RBK_D_CONTRACT_STRIDE_1_CONTRACT_STRIDE_1_r,
  l2h_NVDLA_RBK_D_DAOUT_SURF_STRIDE_DAOUT_SURF_STRIDE_r,
  l2h_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_DAOUT_PLANAR_STRIDE_r,
  l2h_NVDLA_RBK_D_DECONV_STRIDE_DECONV_X_STRIDE_r,
  l2h_NVDLA_RBK_D_DECONV_STRIDE_DECONV_Y_STRIDE_r,
  l2h_NVDLA_RBK_D_PERF_ENABLE_PERF_EN_r );

  //------- inputs
  input    clk;
  input    reset;
  input     [31:0] d2l_NVDLA_RBK_S_STATUS_w;
  input    d2l_NVDLA_RBK_S_STATUS_we;
  input    d2l_NVDLA_RBK_S_STATUS_re;
  input     [31:0] d2l_NVDLA_RBK_S_POINTER_w;
  input    d2l_NVDLA_RBK_S_POINTER_we;
  input    d2l_NVDLA_RBK_S_POINTER_re;
  input     [31:0] d2l_NVDLA_RBK_D_OP_ENABLE_w;
  input    d2l_NVDLA_RBK_D_OP_ENABLE_we;
  input    d2l_NVDLA_RBK_D_OP_ENABLE_re;
  input     [31:0] d2l_NVDLA_RBK_D_MISC_CFG_w;
  input    d2l_NVDLA_RBK_D_MISC_CFG_we;
  input    d2l_NVDLA_RBK_D_MISC_CFG_re;
  input     [31:0] d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_w;
  input    d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_we;
  input    d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_re;
  input     [31:0] d2l_NVDLA_RBK_D_DATAIN_SIZE_0_w;
  input    d2l_NVDLA_RBK_D_DATAIN_SIZE_0_we;
  input    d2l_NVDLA_RBK_D_DATAIN_SIZE_0_re;
  input     [31:0] d2l_NVDLA_RBK_D_DATAIN_SIZE_1_w;
  input    d2l_NVDLA_RBK_D_DATAIN_SIZE_1_we;
  input    d2l_NVDLA_RBK_D_DATAIN_SIZE_1_re;
  input     [31:0] d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_w;
  input    d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_we;
  input    d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_re;
  input     [31:0] d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_w;
  input    d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_we;
  input    d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_re;
  input     [31:0] d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_w;
  input    d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_we;
  input    d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_re;
  input     [31:0] d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_w;
  input    d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_we;
  input    d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_re;
  input     [31:0] d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_w;
  input    d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_we;
  input    d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_re;
  input     [31:0] d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_w;
  input    d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_we;
  input    d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_re;
  input     [31:0] d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_w;
  input    d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_we;
  input    d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_re;
  input     [31:0] d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_w;
  input    d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_we;
  input    d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_re;
  input     [31:0] d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_w;
  input    d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_we;
  input    d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_re;
  input     [31:0] d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_w;
  input    d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_we;
  input    d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_re;
  input     [31:0] d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_w;
  input    d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_we;
  input    d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_re;
  input     [31:0] d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_w;
  input    d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_we;
  input    d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_re;
  input     [31:0] d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_w;
  input    d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_we;
  input    d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_re;
  input     [31:0] d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_w;
  input    d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_we;
  input    d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_re;
  input     [31:0] d2l_NVDLA_RBK_D_DECONV_STRIDE_w;
  input    d2l_NVDLA_RBK_D_DECONV_STRIDE_we;
  input    d2l_NVDLA_RBK_D_DECONV_STRIDE_re;
  input     [31:0] d2l_NVDLA_RBK_D_PERF_ENABLE_w;
  input    d2l_NVDLA_RBK_D_PERF_ENABLE_we;
  input    d2l_NVDLA_RBK_D_PERF_ENABLE_re;
  input     [31:0] d2l_NVDLA_RBK_D_PERF_READ_STALL_w;
  input    d2l_NVDLA_RBK_D_PERF_READ_STALL_we;
  input    d2l_NVDLA_RBK_D_PERF_READ_STALL_re;
  input     [31:0] d2l_NVDLA_RBK_D_PERF_WRITE_STALL_w;
  input    d2l_NVDLA_RBK_D_PERF_WRITE_STALL_we;
  input    d2l_NVDLA_RBK_D_PERF_WRITE_STALL_re;
  input     [1:0] h2l_NVDLA_RBK_S_STATUS_STATUS_0_w;
  input     [1:0] h2l_NVDLA_RBK_S_STATUS_STATUS_1_w;
  input    h2l_NVDLA_RBK_S_POINTER_CONSUMER_w;
  input     [31:0] h2l_NVDLA_RBK_D_PERF_READ_STALL_RD_STALL_CNT_w;
  input     [31:0] h2l_NVDLA_RBK_D_PERF_WRITE_STALL_WR_STALL_CNT_w;

  //------- outputs
  output     [31:0] l2d_NVDLA_RBK_S_STATUS_r;
  output     [31:0] l2d_NVDLA_RBK_S_POINTER_r;
  output     [31:0] l2d_NVDLA_RBK_D_OP_ENABLE_r;
  output     [31:0] l2d_NVDLA_RBK_D_MISC_CFG_r;
  output     [31:0] l2d_NVDLA_RBK_D_DAIN_RAM_TYPE_r;
  output     [31:0] l2d_NVDLA_RBK_D_DATAIN_SIZE_0_r;
  output     [31:0] l2d_NVDLA_RBK_D_DATAIN_SIZE_1_r;
  output     [31:0] l2d_NVDLA_RBK_D_DAIN_ADDR_HIGH_r;
  output     [31:0] l2d_NVDLA_RBK_D_DAIN_ADDR_LOW_r;
  output     [31:0] l2d_NVDLA_RBK_D_DAIN_LINE_STRIDE_r;
  output     [31:0] l2d_NVDLA_RBK_D_DAIN_SURF_STRIDE_r;
  output     [31:0] l2d_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_r;
  output     [31:0] l2d_NVDLA_RBK_D_DAOUT_RAM_TYPE_r;
  output     [31:0] l2d_NVDLA_RBK_D_DATAOUT_SIZE_1_r;
  output     [31:0] l2d_NVDLA_RBK_D_DAOUT_ADDR_HIGH_r;
  output     [31:0] l2d_NVDLA_RBK_D_DAOUT_ADDR_LOW_r;
  output     [31:0] l2d_NVDLA_RBK_D_DAOUT_LINE_STRIDE_r;
  output     [31:0] l2d_NVDLA_RBK_D_CONTRACT_STRIDE_0_r;
  output     [31:0] l2d_NVDLA_RBK_D_CONTRACT_STRIDE_1_r;
  output     [31:0] l2d_NVDLA_RBK_D_DAOUT_SURF_STRIDE_r;
  output     [31:0] l2d_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_r;
  output     [31:0] l2d_NVDLA_RBK_D_DECONV_STRIDE_r;
  output     [31:0] l2d_NVDLA_RBK_D_PERF_ENABLE_r;
  output     [31:0] l2d_NVDLA_RBK_D_PERF_READ_STALL_r;
  output     [31:0] l2d_NVDLA_RBK_D_PERF_WRITE_STALL_r;
  output    l2h_NVDLA_RBK_S_POINTER_PRODUCER_r;
  output    l2h_NVDLA_RBK_D_OP_ENABLE_OP_EN_r;
  output     [1:0] l2h_NVDLA_RBK_D_MISC_CFG_RUBIK_MODE_r;
  output     [1:0] l2h_NVDLA_RBK_D_MISC_CFG_IN_PRECISION_r;
  output    l2h_NVDLA_RBK_D_DAIN_RAM_TYPE_DATAIN_RAM_TYPE_r;
  output     [12:0] l2h_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_WIDTH_r;
  output     [12:0] l2h_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_HEIGHT_r;
  output     [12:0] l2h_NVDLA_RBK_D_DATAIN_SIZE_1_DATAIN_CHANNEL_r;
  output     [31:0] l2h_NVDLA_RBK_D_DAIN_ADDR_HIGH_DAIN_ADDR_HIGH_r;
  output     [26:0] l2h_NVDLA_RBK_D_DAIN_ADDR_LOW_DAIN_ADDR_LOW_r;
  output     [26:0] l2h_NVDLA_RBK_D_DAIN_LINE_STRIDE_DAIN_LINE_STRIDE_r;
  output     [26:0] l2h_NVDLA_RBK_D_DAIN_SURF_STRIDE_DAIN_SURF_STRIDE_r;
  output     [26:0] l2h_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_DAIN_PLANAR_STRIDE_r;
  output    l2h_NVDLA_RBK_D_DAOUT_RAM_TYPE_DATAOUT_RAM_TYPE_r;
  output     [12:0] l2h_NVDLA_RBK_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_r;
  output     [31:0] l2h_NVDLA_RBK_D_DAOUT_ADDR_HIGH_DAOUT_ADDR_HIGH_r;
  output     [26:0] l2h_NVDLA_RBK_D_DAOUT_ADDR_LOW_DAOUT_ADDR_LOW_r;
  output     [26:0] l2h_NVDLA_RBK_D_DAOUT_LINE_STRIDE_DAOUT_LINE_STRIDE_r;
  output     [26:0] l2h_NVDLA_RBK_D_CONTRACT_STRIDE_0_CONTRACT_STRIDE_0_r;
  output     [26:0] l2h_NVDLA_RBK_D_CONTRACT_STRIDE_1_CONTRACT_STRIDE_1_r;
  output     [26:0] l2h_NVDLA_RBK_D_DAOUT_SURF_STRIDE_DAOUT_SURF_STRIDE_r;
  output     [26:0] l2h_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_DAOUT_PLANAR_STRIDE_r;
  output     [4:0] l2h_NVDLA_RBK_D_DECONV_STRIDE_DECONV_X_STRIDE_r;
  output     [4:0] l2h_NVDLA_RBK_D_DECONV_STRIDE_DECONV_Y_STRIDE_r;
  output    l2h_NVDLA_RBK_D_PERF_ENABLE_PERF_EN_r;


  //------- reg defines
  reg   [1:0] rg_NVDLA_RBK_S_STATUS_STATUS_0;
  reg   [1:0] rg_NVDLA_RBK_S_STATUS_STATUS_1;
  reg   [31:0] l2d_NVDLA_RBK_S_STATUS_r;
  reg  rg_NVDLA_RBK_S_POINTER_PRODUCER;
  reg  reg_NVDLA_RBK_S_POINTER_PRODUCER_next;
  reg  l2h_NVDLA_RBK_S_POINTER_PRODUCER_r;
  reg  rg_NVDLA_RBK_S_POINTER_CONSUMER;
  reg   [31:0] l2d_NVDLA_RBK_S_POINTER_r;
  reg  rg_NVDLA_RBK_D_OP_ENABLE_OP_EN;
  reg  reg_NVDLA_RBK_D_OP_ENABLE_OP_EN_next;
  reg  l2h_NVDLA_RBK_D_OP_ENABLE_OP_EN_r;
  reg   [31:0] l2d_NVDLA_RBK_D_OP_ENABLE_r;
  reg   [1:0] rg_NVDLA_RBK_D_MISC_CFG_RUBIK_MODE;
  reg   [1:0] reg_NVDLA_RBK_D_MISC_CFG_RUBIK_MODE_next;
  reg   [1:0] l2h_NVDLA_RBK_D_MISC_CFG_RUBIK_MODE_r;
  reg   [1:0] rg_NVDLA_RBK_D_MISC_CFG_IN_PRECISION;
  reg   [1:0] reg_NVDLA_RBK_D_MISC_CFG_IN_PRECISION_next;
  reg   [1:0] l2h_NVDLA_RBK_D_MISC_CFG_IN_PRECISION_r;
  reg   [31:0] l2d_NVDLA_RBK_D_MISC_CFG_r;
  reg  rg_NVDLA_RBK_D_DAIN_RAM_TYPE_DATAIN_RAM_TYPE;
  reg  reg_NVDLA_RBK_D_DAIN_RAM_TYPE_DATAIN_RAM_TYPE_next;
  reg  l2h_NVDLA_RBK_D_DAIN_RAM_TYPE_DATAIN_RAM_TYPE_r;
  reg   [31:0] l2d_NVDLA_RBK_D_DAIN_RAM_TYPE_r;
  reg   [12:0] rg_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_WIDTH;
  reg   [12:0] reg_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_WIDTH_next;
  reg   [12:0] l2h_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_WIDTH_r;
  reg   [12:0] rg_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_HEIGHT;
  reg   [12:0] reg_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_HEIGHT_next;
  reg   [12:0] l2h_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_HEIGHT_r;
  reg   [31:0] l2d_NVDLA_RBK_D_DATAIN_SIZE_0_r;
  reg   [12:0] rg_NVDLA_RBK_D_DATAIN_SIZE_1_DATAIN_CHANNEL;
  reg   [12:0] reg_NVDLA_RBK_D_DATAIN_SIZE_1_DATAIN_CHANNEL_next;
  reg   [12:0] l2h_NVDLA_RBK_D_DATAIN_SIZE_1_DATAIN_CHANNEL_r;
  reg   [31:0] l2d_NVDLA_RBK_D_DATAIN_SIZE_1_r;
  reg   [31:0] rg_NVDLA_RBK_D_DAIN_ADDR_HIGH_DAIN_ADDR_HIGH;
  reg   [31:0] reg_NVDLA_RBK_D_DAIN_ADDR_HIGH_DAIN_ADDR_HIGH_next;
  reg   [31:0] l2h_NVDLA_RBK_D_DAIN_ADDR_HIGH_DAIN_ADDR_HIGH_r;
  reg   [31:0] l2d_NVDLA_RBK_D_DAIN_ADDR_HIGH_r;
  reg   [26:0] rg_NVDLA_RBK_D_DAIN_ADDR_LOW_DAIN_ADDR_LOW;
  reg   [26:0] reg_NVDLA_RBK_D_DAIN_ADDR_LOW_DAIN_ADDR_LOW_next;
  reg   [26:0] l2h_NVDLA_RBK_D_DAIN_ADDR_LOW_DAIN_ADDR_LOW_r;
  reg   [31:0] l2d_NVDLA_RBK_D_DAIN_ADDR_LOW_r;
  reg   [26:0] rg_NVDLA_RBK_D_DAIN_LINE_STRIDE_DAIN_LINE_STRIDE;
  reg   [26:0] reg_NVDLA_RBK_D_DAIN_LINE_STRIDE_DAIN_LINE_STRIDE_next;
  reg   [26:0] l2h_NVDLA_RBK_D_DAIN_LINE_STRIDE_DAIN_LINE_STRIDE_r;
  reg   [31:0] l2d_NVDLA_RBK_D_DAIN_LINE_STRIDE_r;
  reg   [26:0] rg_NVDLA_RBK_D_DAIN_SURF_STRIDE_DAIN_SURF_STRIDE;
  reg   [26:0] reg_NVDLA_RBK_D_DAIN_SURF_STRIDE_DAIN_SURF_STRIDE_next;
  reg   [26:0] l2h_NVDLA_RBK_D_DAIN_SURF_STRIDE_DAIN_SURF_STRIDE_r;
  reg   [31:0] l2d_NVDLA_RBK_D_DAIN_SURF_STRIDE_r;
  reg   [26:0] rg_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_DAIN_PLANAR_STRIDE;
  reg   [26:0] reg_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_DAIN_PLANAR_STRIDE_next;
  reg   [26:0] l2h_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_DAIN_PLANAR_STRIDE_r;
  reg   [31:0] l2d_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_r;
  reg  rg_NVDLA_RBK_D_DAOUT_RAM_TYPE_DATAOUT_RAM_TYPE;
  reg  reg_NVDLA_RBK_D_DAOUT_RAM_TYPE_DATAOUT_RAM_TYPE_next;
  reg  l2h_NVDLA_RBK_D_DAOUT_RAM_TYPE_DATAOUT_RAM_TYPE_r;
  reg   [31:0] l2d_NVDLA_RBK_D_DAOUT_RAM_TYPE_r;
  reg   [12:0] rg_NVDLA_RBK_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL;
  reg   [12:0] reg_NVDLA_RBK_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_next;
  reg   [12:0] l2h_NVDLA_RBK_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_r;
  reg   [31:0] l2d_NVDLA_RBK_D_DATAOUT_SIZE_1_r;
  reg   [31:0] rg_NVDLA_RBK_D_DAOUT_ADDR_HIGH_DAOUT_ADDR_HIGH;
  reg   [31:0] reg_NVDLA_RBK_D_DAOUT_ADDR_HIGH_DAOUT_ADDR_HIGH_next;
  reg   [31:0] l2h_NVDLA_RBK_D_DAOUT_ADDR_HIGH_DAOUT_ADDR_HIGH_r;
  reg   [31:0] l2d_NVDLA_RBK_D_DAOUT_ADDR_HIGH_r;
  reg   [26:0] rg_NVDLA_RBK_D_DAOUT_ADDR_LOW_DAOUT_ADDR_LOW;
  reg   [26:0] reg_NVDLA_RBK_D_DAOUT_ADDR_LOW_DAOUT_ADDR_LOW_next;
  reg   [26:0] l2h_NVDLA_RBK_D_DAOUT_ADDR_LOW_DAOUT_ADDR_LOW_r;
  reg   [31:0] l2d_NVDLA_RBK_D_DAOUT_ADDR_LOW_r;
  reg   [26:0] rg_NVDLA_RBK_D_DAOUT_LINE_STRIDE_DAOUT_LINE_STRIDE;
  reg   [26:0] reg_NVDLA_RBK_D_DAOUT_LINE_STRIDE_DAOUT_LINE_STRIDE_next;
  reg   [26:0] l2h_NVDLA_RBK_D_DAOUT_LINE_STRIDE_DAOUT_LINE_STRIDE_r;
  reg   [31:0] l2d_NVDLA_RBK_D_DAOUT_LINE_STRIDE_r;
  reg   [26:0] rg_NVDLA_RBK_D_CONTRACT_STRIDE_0_CONTRACT_STRIDE_0;
  reg   [26:0] reg_NVDLA_RBK_D_CONTRACT_STRIDE_0_CONTRACT_STRIDE_0_next;
  reg   [26:0] l2h_NVDLA_RBK_D_CONTRACT_STRIDE_0_CONTRACT_STRIDE_0_r;
  reg   [31:0] l2d_NVDLA_RBK_D_CONTRACT_STRIDE_0_r;
  reg   [26:0] rg_NVDLA_RBK_D_CONTRACT_STRIDE_1_CONTRACT_STRIDE_1;
  reg   [26:0] reg_NVDLA_RBK_D_CONTRACT_STRIDE_1_CONTRACT_STRIDE_1_next;
  reg   [26:0] l2h_NVDLA_RBK_D_CONTRACT_STRIDE_1_CONTRACT_STRIDE_1_r;
  reg   [31:0] l2d_NVDLA_RBK_D_CONTRACT_STRIDE_1_r;
  reg   [26:0] rg_NVDLA_RBK_D_DAOUT_SURF_STRIDE_DAOUT_SURF_STRIDE;
  reg   [26:0] reg_NVDLA_RBK_D_DAOUT_SURF_STRIDE_DAOUT_SURF_STRIDE_next;
  reg   [26:0] l2h_NVDLA_RBK_D_DAOUT_SURF_STRIDE_DAOUT_SURF_STRIDE_r;
  reg   [31:0] l2d_NVDLA_RBK_D_DAOUT_SURF_STRIDE_r;
  reg   [26:0] rg_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_DAOUT_PLANAR_STRIDE;
  reg   [26:0] reg_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_DAOUT_PLANAR_STRIDE_next;
  reg   [26:0] l2h_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_DAOUT_PLANAR_STRIDE_r;
  reg   [31:0] l2d_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_r;
  reg   [4:0] rg_NVDLA_RBK_D_DECONV_STRIDE_DECONV_X_STRIDE;
  reg   [4:0] reg_NVDLA_RBK_D_DECONV_STRIDE_DECONV_X_STRIDE_next;
  reg   [4:0] l2h_NVDLA_RBK_D_DECONV_STRIDE_DECONV_X_STRIDE_r;
  reg   [4:0] rg_NVDLA_RBK_D_DECONV_STRIDE_DECONV_Y_STRIDE;
  reg   [4:0] reg_NVDLA_RBK_D_DECONV_STRIDE_DECONV_Y_STRIDE_next;
  reg   [4:0] l2h_NVDLA_RBK_D_DECONV_STRIDE_DECONV_Y_STRIDE_r;
  reg   [31:0] l2d_NVDLA_RBK_D_DECONV_STRIDE_r;
  reg  rg_NVDLA_RBK_D_PERF_ENABLE_PERF_EN;
  reg  reg_NVDLA_RBK_D_PERF_ENABLE_PERF_EN_next;
  reg  l2h_NVDLA_RBK_D_PERF_ENABLE_PERF_EN_r;
  reg   [31:0] l2d_NVDLA_RBK_D_PERF_ENABLE_r;
  reg   [31:0] rg_NVDLA_RBK_D_PERF_READ_STALL_RD_STALL_CNT;
  reg   [31:0] l2d_NVDLA_RBK_D_PERF_READ_STALL_r;
  reg   [31:0] rg_NVDLA_RBK_D_PERF_WRITE_STALL_WR_STALL_CNT;
  reg   [31:0] l2d_NVDLA_RBK_D_PERF_WRITE_STALL_r;
  
  
  //------- combinatorial assigns for NVDLA_RBK_D_CONTRACT_STRIDE_1 (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_CONTRACT_STRIDE_1_r = 32'b0;
    l2d_NVDLA_RBK_D_CONTRACT_STRIDE_1_r [31:5]  = rg_NVDLA_RBK_D_CONTRACT_STRIDE_1_CONTRACT_STRIDE_1;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DECONV_STRIDE (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_DECONV_STRIDE_r = 32'b0;
    l2d_NVDLA_RBK_D_DECONV_STRIDE_r [4:0]  = rg_NVDLA_RBK_D_DECONV_STRIDE_DECONV_X_STRIDE;
    l2d_NVDLA_RBK_D_DECONV_STRIDE_r [20:16]  = rg_NVDLA_RBK_D_DECONV_STRIDE_DECONV_Y_STRIDE;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAIN_RAM_TYPE
  always @ (*) begin
    reg_NVDLA_RBK_D_DAIN_RAM_TYPE_DATAIN_RAM_TYPE_next = rg_NVDLA_RBK_D_DAIN_RAM_TYPE_DATAIN_RAM_TYPE;
    l2h_NVDLA_RBK_D_DAIN_RAM_TYPE_DATAIN_RAM_TYPE_r = rg_NVDLA_RBK_D_DAIN_RAM_TYPE_DATAIN_RAM_TYPE;
    if (d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_we) reg_NVDLA_RBK_D_DAIN_RAM_TYPE_DATAIN_RAM_TYPE_next = d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_w [0] ;
  end
  
  //------- reg assigns for NVDLA_RBK_D_DAIN_RAM_TYPE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_RBK_D_DAIN_RAM_TYPE_DATAIN_RAM_TYPE <= #1 1'h0;
    end
    else begin
      rg_NVDLA_RBK_D_DAIN_RAM_TYPE_DATAIN_RAM_TYPE <= #1  reg_NVDLA_RBK_D_DAIN_RAM_TYPE_DATAIN_RAM_TYPE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_MISC_CFG
  always @ (*) begin
    reg_NVDLA_RBK_D_MISC_CFG_RUBIK_MODE_next = rg_NVDLA_RBK_D_MISC_CFG_RUBIK_MODE;
    l2h_NVDLA_RBK_D_MISC_CFG_RUBIK_MODE_r = rg_NVDLA_RBK_D_MISC_CFG_RUBIK_MODE;
    reg_NVDLA_RBK_D_MISC_CFG_IN_PRECISION_next = rg_NVDLA_RBK_D_MISC_CFG_IN_PRECISION;
    l2h_NVDLA_RBK_D_MISC_CFG_IN_PRECISION_r = rg_NVDLA_RBK_D_MISC_CFG_IN_PRECISION;
    if (d2l_NVDLA_RBK_D_MISC_CFG_we) reg_NVDLA_RBK_D_MISC_CFG_RUBIK_MODE_next = d2l_NVDLA_RBK_D_MISC_CFG_w [1:0] ;
    if (d2l_NVDLA_RBK_D_MISC_CFG_we) reg_NVDLA_RBK_D_MISC_CFG_IN_PRECISION_next = d2l_NVDLA_RBK_D_MISC_CFG_w [9:8] ;
  end
  
  //------- reg assigns for NVDLA_RBK_D_MISC_CFG
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_RBK_D_MISC_CFG_RUBIK_MODE <= #1 2'h0;
      rg_NVDLA_RBK_D_MISC_CFG_IN_PRECISION <= #1 2'h1;
    end
    else begin
      rg_NVDLA_RBK_D_MISC_CFG_RUBIK_MODE <= #1  reg_NVDLA_RBK_D_MISC_CFG_RUBIK_MODE_next;
      rg_NVDLA_RBK_D_MISC_CFG_IN_PRECISION <= #1  reg_NVDLA_RBK_D_MISC_CFG_IN_PRECISION_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DATAIN_SIZE_1
  always @ (*) begin
    reg_NVDLA_RBK_D_DATAIN_SIZE_1_DATAIN_CHANNEL_next = rg_NVDLA_RBK_D_DATAIN_SIZE_1_DATAIN_CHANNEL;
    l2h_NVDLA_RBK_D_DATAIN_SIZE_1_DATAIN_CHANNEL_r = rg_NVDLA_RBK_D_DATAIN_SIZE_1_DATAIN_CHANNEL;
    if (d2l_NVDLA_RBK_D_DATAIN_SIZE_1_we) reg_NVDLA_RBK_D_DATAIN_SIZE_1_DATAIN_CHANNEL_next = d2l_NVDLA_RBK_D_DATAIN_SIZE_1_w [12:0] ;
  end
  
  //------- reg assigns for NVDLA_RBK_D_DATAIN_SIZE_1
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_RBK_D_DATAIN_SIZE_1_DATAIN_CHANNEL <= #1 13'h0;
    end
    else begin
      rg_NVDLA_RBK_D_DATAIN_SIZE_1_DATAIN_CHANNEL <= #1  reg_NVDLA_RBK_D_DATAIN_SIZE_1_DATAIN_CHANNEL_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DATAIN_SIZE_1 (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_DATAIN_SIZE_1_r = 32'b0;
    l2d_NVDLA_RBK_D_DATAIN_SIZE_1_r [12:0]  = rg_NVDLA_RBK_D_DATAIN_SIZE_1_DATAIN_CHANNEL;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAOUT_LINE_STRIDE
  always @ (*) begin
    reg_NVDLA_RBK_D_DAOUT_LINE_STRIDE_DAOUT_LINE_STRIDE_next = rg_NVDLA_RBK_D_DAOUT_LINE_STRIDE_DAOUT_LINE_STRIDE;
    l2h_NVDLA_RBK_D_DAOUT_LINE_STRIDE_DAOUT_LINE_STRIDE_r = rg_NVDLA_RBK_D_DAOUT_LINE_STRIDE_DAOUT_LINE_STRIDE;
    if (d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_we) reg_NVDLA_RBK_D_DAOUT_LINE_STRIDE_DAOUT_LINE_STRIDE_next = d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_w [31:5] ;
  end
  
  //------- reg assigns for NVDLA_RBK_D_DAOUT_LINE_STRIDE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_RBK_D_DAOUT_LINE_STRIDE_DAOUT_LINE_STRIDE <= #1 27'h0;
    end
    else begin
      rg_NVDLA_RBK_D_DAOUT_LINE_STRIDE_DAOUT_LINE_STRIDE <= #1  reg_NVDLA_RBK_D_DAOUT_LINE_STRIDE_DAOUT_LINE_STRIDE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_CONTRACT_STRIDE_1
  always @ (*) begin
    reg_NVDLA_RBK_D_CONTRACT_STRIDE_1_CONTRACT_STRIDE_1_next = rg_NVDLA_RBK_D_CONTRACT_STRIDE_1_CONTRACT_STRIDE_1;
    l2h_NVDLA_RBK_D_CONTRACT_STRIDE_1_CONTRACT_STRIDE_1_r = rg_NVDLA_RBK_D_CONTRACT_STRIDE_1_CONTRACT_STRIDE_1;
    if (d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_we) reg_NVDLA_RBK_D_CONTRACT_STRIDE_1_CONTRACT_STRIDE_1_next = d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_w [31:5] ;
  end
  
  //------- reg assigns for NVDLA_RBK_D_CONTRACT_STRIDE_1
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_RBK_D_CONTRACT_STRIDE_1_CONTRACT_STRIDE_1 <= #1 27'h0;
    end
    else begin
      rg_NVDLA_RBK_D_CONTRACT_STRIDE_1_CONTRACT_STRIDE_1 <= #1  reg_NVDLA_RBK_D_CONTRACT_STRIDE_1_CONTRACT_STRIDE_1_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DATAIN_SIZE_0
  always @ (*) begin
    reg_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_WIDTH_next = rg_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_WIDTH;
    l2h_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_WIDTH_r = rg_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_WIDTH;
    reg_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_HEIGHT_next = rg_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_HEIGHT;
    l2h_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_HEIGHT_r = rg_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_HEIGHT;
    if (d2l_NVDLA_RBK_D_DATAIN_SIZE_0_we) reg_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_WIDTH_next = d2l_NVDLA_RBK_D_DATAIN_SIZE_0_w [12:0] ;
    if (d2l_NVDLA_RBK_D_DATAIN_SIZE_0_we) reg_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_HEIGHT_next = d2l_NVDLA_RBK_D_DATAIN_SIZE_0_w [28:16] ;
  end
  
  //------- reg assigns for NVDLA_RBK_D_DATAIN_SIZE_0
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_WIDTH <= #1 13'h0;
      rg_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_HEIGHT <= #1 13'h0;
    end
    else begin
      rg_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_WIDTH <= #1  reg_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_WIDTH_next;
      rg_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_HEIGHT <= #1  reg_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_HEIGHT_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_CONTRACT_STRIDE_0
  always @ (*) begin
    reg_NVDLA_RBK_D_CONTRACT_STRIDE_0_CONTRACT_STRIDE_0_next = rg_NVDLA_RBK_D_CONTRACT_STRIDE_0_CONTRACT_STRIDE_0;
    l2h_NVDLA_RBK_D_CONTRACT_STRIDE_0_CONTRACT_STRIDE_0_r = rg_NVDLA_RBK_D_CONTRACT_STRIDE_0_CONTRACT_STRIDE_0;
    if (d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_we) reg_NVDLA_RBK_D_CONTRACT_STRIDE_0_CONTRACT_STRIDE_0_next = d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_w [31:5] ;
  end
  
  //------- reg assigns for NVDLA_RBK_D_CONTRACT_STRIDE_0
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_RBK_D_CONTRACT_STRIDE_0_CONTRACT_STRIDE_0 <= #1 27'h0;
    end
    else begin
      rg_NVDLA_RBK_D_CONTRACT_STRIDE_0_CONTRACT_STRIDE_0 <= #1  reg_NVDLA_RBK_D_CONTRACT_STRIDE_0_CONTRACT_STRIDE_0_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_PERF_WRITE_STALL (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_PERF_WRITE_STALL_r = rg_NVDLA_RBK_D_PERF_WRITE_STALL_WR_STALL_CNT;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAIN_SURF_STRIDE (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_DAIN_SURF_STRIDE_r = 32'b0;
    l2d_NVDLA_RBK_D_DAIN_SURF_STRIDE_r [31:5]  = rg_NVDLA_RBK_D_DAIN_SURF_STRIDE_DAIN_SURF_STRIDE;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAOUT_PLANAR_STRIDE
  always @ (*) begin
    reg_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_DAOUT_PLANAR_STRIDE_next = rg_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_DAOUT_PLANAR_STRIDE;
    l2h_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_DAOUT_PLANAR_STRIDE_r = rg_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_DAOUT_PLANAR_STRIDE;
    if (d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_we) reg_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_DAOUT_PLANAR_STRIDE_next = d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_w [31:5] ;
  end
  
  //------- reg assigns for NVDLA_RBK_D_DAOUT_PLANAR_STRIDE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_DAOUT_PLANAR_STRIDE <= #1 27'h0;
    end
    else begin
      rg_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_DAOUT_PLANAR_STRIDE <= #1  reg_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_DAOUT_PLANAR_STRIDE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAOUT_RAM_TYPE
  always @ (*) begin
    reg_NVDLA_RBK_D_DAOUT_RAM_TYPE_DATAOUT_RAM_TYPE_next = rg_NVDLA_RBK_D_DAOUT_RAM_TYPE_DATAOUT_RAM_TYPE;
    l2h_NVDLA_RBK_D_DAOUT_RAM_TYPE_DATAOUT_RAM_TYPE_r = rg_NVDLA_RBK_D_DAOUT_RAM_TYPE_DATAOUT_RAM_TYPE;
    if (d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_we) reg_NVDLA_RBK_D_DAOUT_RAM_TYPE_DATAOUT_RAM_TYPE_next = d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_w [0] ;
  end
  
  //------- reg assigns for NVDLA_RBK_D_DAOUT_RAM_TYPE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_RBK_D_DAOUT_RAM_TYPE_DATAOUT_RAM_TYPE <= #1 1'h0;
    end
    else begin
      rg_NVDLA_RBK_D_DAOUT_RAM_TYPE_DATAOUT_RAM_TYPE <= #1  reg_NVDLA_RBK_D_DAOUT_RAM_TYPE_DATAOUT_RAM_TYPE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAOUT_ADDR_LOW
  always @ (*) begin
    reg_NVDLA_RBK_D_DAOUT_ADDR_LOW_DAOUT_ADDR_LOW_next = rg_NVDLA_RBK_D_DAOUT_ADDR_LOW_DAOUT_ADDR_LOW;
    l2h_NVDLA_RBK_D_DAOUT_ADDR_LOW_DAOUT_ADDR_LOW_r = rg_NVDLA_RBK_D_DAOUT_ADDR_LOW_DAOUT_ADDR_LOW;
    if (d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_we) reg_NVDLA_RBK_D_DAOUT_ADDR_LOW_DAOUT_ADDR_LOW_next = d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_w [31:5] ;
  end
  
  //------- reg assigns for NVDLA_RBK_D_DAOUT_ADDR_LOW
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_RBK_D_DAOUT_ADDR_LOW_DAOUT_ADDR_LOW <= #1 27'h0;
    end
    else begin
      rg_NVDLA_RBK_D_DAOUT_ADDR_LOW_DAOUT_ADDR_LOW <= #1  reg_NVDLA_RBK_D_DAOUT_ADDR_LOW_DAOUT_ADDR_LOW_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAIN_LINE_STRIDE (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_DAIN_LINE_STRIDE_r = 32'b0;
    l2d_NVDLA_RBK_D_DAIN_LINE_STRIDE_r [31:5]  = rg_NVDLA_RBK_D_DAIN_LINE_STRIDE_DAIN_LINE_STRIDE;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAOUT_ADDR_HIGH (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_DAOUT_ADDR_HIGH_r = rg_NVDLA_RBK_D_DAOUT_ADDR_HIGH_DAOUT_ADDR_HIGH;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_MISC_CFG (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_MISC_CFG_r = 32'b0;
    l2d_NVDLA_RBK_D_MISC_CFG_r [1:0]  = rg_NVDLA_RBK_D_MISC_CFG_RUBIK_MODE;
    l2d_NVDLA_RBK_D_MISC_CFG_r [9:8]  = rg_NVDLA_RBK_D_MISC_CFG_IN_PRECISION;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAIN_RAM_TYPE (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_DAIN_RAM_TYPE_r = 32'b0;
    l2d_NVDLA_RBK_D_DAIN_RAM_TYPE_r [0]  = rg_NVDLA_RBK_D_DAIN_RAM_TYPE_DATAIN_RAM_TYPE;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DATAOUT_SIZE_1 (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_DATAOUT_SIZE_1_r = 32'b0;
    l2d_NVDLA_RBK_D_DATAOUT_SIZE_1_r [12:0]  = rg_NVDLA_RBK_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAOUT_SURF_STRIDE
  always @ (*) begin
    reg_NVDLA_RBK_D_DAOUT_SURF_STRIDE_DAOUT_SURF_STRIDE_next = rg_NVDLA_RBK_D_DAOUT_SURF_STRIDE_DAOUT_SURF_STRIDE;
    l2h_NVDLA_RBK_D_DAOUT_SURF_STRIDE_DAOUT_SURF_STRIDE_r = rg_NVDLA_RBK_D_DAOUT_SURF_STRIDE_DAOUT_SURF_STRIDE;
    if (d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_we) reg_NVDLA_RBK_D_DAOUT_SURF_STRIDE_DAOUT_SURF_STRIDE_next = d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_w [31:5] ;
  end
  
  //------- reg assigns for NVDLA_RBK_D_DAOUT_SURF_STRIDE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_RBK_D_DAOUT_SURF_STRIDE_DAOUT_SURF_STRIDE <= #1 27'h0;
    end
    else begin
      rg_NVDLA_RBK_D_DAOUT_SURF_STRIDE_DAOUT_SURF_STRIDE <= #1  reg_NVDLA_RBK_D_DAOUT_SURF_STRIDE_DAOUT_SURF_STRIDE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAOUT_ADDR_LOW (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_DAOUT_ADDR_LOW_r = 32'b0;
    l2d_NVDLA_RBK_D_DAOUT_ADDR_LOW_r [31:5]  = rg_NVDLA_RBK_D_DAOUT_ADDR_LOW_DAOUT_ADDR_LOW;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_S_POINTER
  always @ (*) begin
    reg_NVDLA_RBK_S_POINTER_PRODUCER_next = rg_NVDLA_RBK_S_POINTER_PRODUCER;
    l2h_NVDLA_RBK_S_POINTER_PRODUCER_r = rg_NVDLA_RBK_S_POINTER_PRODUCER;
    rg_NVDLA_RBK_S_POINTER_CONSUMER =  h2l_NVDLA_RBK_S_POINTER_CONSUMER_w;
    if (d2l_NVDLA_RBK_S_POINTER_we) reg_NVDLA_RBK_S_POINTER_PRODUCER_next = d2l_NVDLA_RBK_S_POINTER_w [0] ;
  end
  
  //------- reg assigns for NVDLA_RBK_S_POINTER
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_RBK_S_POINTER_PRODUCER <= #1 1'h0;
    end
    else begin
      rg_NVDLA_RBK_S_POINTER_PRODUCER <= #1  reg_NVDLA_RBK_S_POINTER_PRODUCER_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAIN_LINE_STRIDE
  always @ (*) begin
    reg_NVDLA_RBK_D_DAIN_LINE_STRIDE_DAIN_LINE_STRIDE_next = rg_NVDLA_RBK_D_DAIN_LINE_STRIDE_DAIN_LINE_STRIDE;
    l2h_NVDLA_RBK_D_DAIN_LINE_STRIDE_DAIN_LINE_STRIDE_r = rg_NVDLA_RBK_D_DAIN_LINE_STRIDE_DAIN_LINE_STRIDE;
    if (d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_we) reg_NVDLA_RBK_D_DAIN_LINE_STRIDE_DAIN_LINE_STRIDE_next = d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_w [31:5] ;
  end
  
  //------- reg assigns for NVDLA_RBK_D_DAIN_LINE_STRIDE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_RBK_D_DAIN_LINE_STRIDE_DAIN_LINE_STRIDE <= #1 27'h0;
    end
    else begin
      rg_NVDLA_RBK_D_DAIN_LINE_STRIDE_DAIN_LINE_STRIDE <= #1  reg_NVDLA_RBK_D_DAIN_LINE_STRIDE_DAIN_LINE_STRIDE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_RBK_S_STATUS (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_S_STATUS_r = 32'b0;
    l2d_NVDLA_RBK_S_STATUS_r [1:0]  = rg_NVDLA_RBK_S_STATUS_STATUS_0;
    l2d_NVDLA_RBK_S_STATUS_r [17:16]  = rg_NVDLA_RBK_S_STATUS_STATUS_1;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_CONTRACT_STRIDE_0 (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_CONTRACT_STRIDE_0_r = 32'b0;
    l2d_NVDLA_RBK_D_CONTRACT_STRIDE_0_r [31:5]  = rg_NVDLA_RBK_D_CONTRACT_STRIDE_0_CONTRACT_STRIDE_0;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAOUT_ADDR_HIGH
  always @ (*) begin
    reg_NVDLA_RBK_D_DAOUT_ADDR_HIGH_DAOUT_ADDR_HIGH_next = rg_NVDLA_RBK_D_DAOUT_ADDR_HIGH_DAOUT_ADDR_HIGH;
    l2h_NVDLA_RBK_D_DAOUT_ADDR_HIGH_DAOUT_ADDR_HIGH_r = rg_NVDLA_RBK_D_DAOUT_ADDR_HIGH_DAOUT_ADDR_HIGH;
    if (d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_we) reg_NVDLA_RBK_D_DAOUT_ADDR_HIGH_DAOUT_ADDR_HIGH_next = d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_w;
  end
  
  //------- reg assigns for NVDLA_RBK_D_DAOUT_ADDR_HIGH
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_RBK_D_DAOUT_ADDR_HIGH_DAOUT_ADDR_HIGH <= #1 32'h0;
    end
    else begin
      rg_NVDLA_RBK_D_DAOUT_ADDR_HIGH_DAOUT_ADDR_HIGH <= #1  reg_NVDLA_RBK_D_DAOUT_ADDR_HIGH_DAOUT_ADDR_HIGH_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DATAIN_SIZE_0 (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_DATAIN_SIZE_0_r = 32'b0;
    l2d_NVDLA_RBK_D_DATAIN_SIZE_0_r [12:0]  = rg_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_WIDTH;
    l2d_NVDLA_RBK_D_DATAIN_SIZE_0_r [28:16]  = rg_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_HEIGHT;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAIN_PLANAR_STRIDE
  always @ (*) begin
    reg_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_DAIN_PLANAR_STRIDE_next = rg_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_DAIN_PLANAR_STRIDE;
    l2h_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_DAIN_PLANAR_STRIDE_r = rg_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_DAIN_PLANAR_STRIDE;
    if (d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_we) reg_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_DAIN_PLANAR_STRIDE_next = d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_w [31:5] ;
  end
  
  //------- reg assigns for NVDLA_RBK_D_DAIN_PLANAR_STRIDE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_DAIN_PLANAR_STRIDE <= #1 27'h0;
    end
    else begin
      rg_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_DAIN_PLANAR_STRIDE <= #1  reg_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_DAIN_PLANAR_STRIDE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_PERF_ENABLE (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_PERF_ENABLE_r = 32'b0;
    l2d_NVDLA_RBK_D_PERF_ENABLE_r [0]  = rg_NVDLA_RBK_D_PERF_ENABLE_PERF_EN;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAOUT_LINE_STRIDE (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_DAOUT_LINE_STRIDE_r = 32'b0;
    l2d_NVDLA_RBK_D_DAOUT_LINE_STRIDE_r [31:5]  = rg_NVDLA_RBK_D_DAOUT_LINE_STRIDE_DAOUT_LINE_STRIDE;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAIN_ADDR_HIGH (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_DAIN_ADDR_HIGH_r = rg_NVDLA_RBK_D_DAIN_ADDR_HIGH_DAIN_ADDR_HIGH;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAIN_ADDR_HIGH
  always @ (*) begin
    reg_NVDLA_RBK_D_DAIN_ADDR_HIGH_DAIN_ADDR_HIGH_next = rg_NVDLA_RBK_D_DAIN_ADDR_HIGH_DAIN_ADDR_HIGH;
    l2h_NVDLA_RBK_D_DAIN_ADDR_HIGH_DAIN_ADDR_HIGH_r = rg_NVDLA_RBK_D_DAIN_ADDR_HIGH_DAIN_ADDR_HIGH;
    if (d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_we) reg_NVDLA_RBK_D_DAIN_ADDR_HIGH_DAIN_ADDR_HIGH_next = d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_w;
  end
  
  //------- reg assigns for NVDLA_RBK_D_DAIN_ADDR_HIGH
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_RBK_D_DAIN_ADDR_HIGH_DAIN_ADDR_HIGH <= #1 32'h0;
    end
    else begin
      rg_NVDLA_RBK_D_DAIN_ADDR_HIGH_DAIN_ADDR_HIGH <= #1  reg_NVDLA_RBK_D_DAIN_ADDR_HIGH_DAIN_ADDR_HIGH_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DATAOUT_SIZE_1
  always @ (*) begin
    reg_NVDLA_RBK_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_next = rg_NVDLA_RBK_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL;
    l2h_NVDLA_RBK_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_r = rg_NVDLA_RBK_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL;
    if (d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_we) reg_NVDLA_RBK_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_next = d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_w [12:0] ;
  end
  
  //------- reg assigns for NVDLA_RBK_D_DATAOUT_SIZE_1
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_RBK_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL <= #1 13'h0;
    end
    else begin
      rg_NVDLA_RBK_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL <= #1  reg_NVDLA_RBK_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAOUT_PLANAR_STRIDE (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_r = 32'b0;
    l2d_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_r [31:5]  = rg_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_DAOUT_PLANAR_STRIDE;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAOUT_RAM_TYPE (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_DAOUT_RAM_TYPE_r = 32'b0;
    l2d_NVDLA_RBK_D_DAOUT_RAM_TYPE_r [0]  = rg_NVDLA_RBK_D_DAOUT_RAM_TYPE_DATAOUT_RAM_TYPE;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DECONV_STRIDE
  always @ (*) begin
    reg_NVDLA_RBK_D_DECONV_STRIDE_DECONV_X_STRIDE_next = rg_NVDLA_RBK_D_DECONV_STRIDE_DECONV_X_STRIDE;
    l2h_NVDLA_RBK_D_DECONV_STRIDE_DECONV_X_STRIDE_r = rg_NVDLA_RBK_D_DECONV_STRIDE_DECONV_X_STRIDE;
    reg_NVDLA_RBK_D_DECONV_STRIDE_DECONV_Y_STRIDE_next = rg_NVDLA_RBK_D_DECONV_STRIDE_DECONV_Y_STRIDE;
    l2h_NVDLA_RBK_D_DECONV_STRIDE_DECONV_Y_STRIDE_r = rg_NVDLA_RBK_D_DECONV_STRIDE_DECONV_Y_STRIDE;
    if (d2l_NVDLA_RBK_D_DECONV_STRIDE_we) reg_NVDLA_RBK_D_DECONV_STRIDE_DECONV_X_STRIDE_next = d2l_NVDLA_RBK_D_DECONV_STRIDE_w [4:0] ;
    if (d2l_NVDLA_RBK_D_DECONV_STRIDE_we) reg_NVDLA_RBK_D_DECONV_STRIDE_DECONV_Y_STRIDE_next = d2l_NVDLA_RBK_D_DECONV_STRIDE_w [20:16] ;
  end
  
  //------- reg assigns for NVDLA_RBK_D_DECONV_STRIDE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_RBK_D_DECONV_STRIDE_DECONV_X_STRIDE <= #1 5'h0;
      rg_NVDLA_RBK_D_DECONV_STRIDE_DECONV_Y_STRIDE <= #1 5'h0;
    end
    else begin
      rg_NVDLA_RBK_D_DECONV_STRIDE_DECONV_X_STRIDE <= #1  reg_NVDLA_RBK_D_DECONV_STRIDE_DECONV_X_STRIDE_next;
      rg_NVDLA_RBK_D_DECONV_STRIDE_DECONV_Y_STRIDE <= #1  reg_NVDLA_RBK_D_DECONV_STRIDE_DECONV_Y_STRIDE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_OP_ENABLE
  always @ (*) begin
    reg_NVDLA_RBK_D_OP_ENABLE_OP_EN_next = rg_NVDLA_RBK_D_OP_ENABLE_OP_EN;
    l2h_NVDLA_RBK_D_OP_ENABLE_OP_EN_r = rg_NVDLA_RBK_D_OP_ENABLE_OP_EN;
    if (d2l_NVDLA_RBK_D_OP_ENABLE_we) reg_NVDLA_RBK_D_OP_ENABLE_OP_EN_next = d2l_NVDLA_RBK_D_OP_ENABLE_w [0] ;
  end
  
  //------- reg assigns for NVDLA_RBK_D_OP_ENABLE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_RBK_D_OP_ENABLE_OP_EN <= #1 1'h0;
    end
    else begin
      rg_NVDLA_RBK_D_OP_ENABLE_OP_EN <= #1  reg_NVDLA_RBK_D_OP_ENABLE_OP_EN_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAOUT_SURF_STRIDE (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_DAOUT_SURF_STRIDE_r = 32'b0;
    l2d_NVDLA_RBK_D_DAOUT_SURF_STRIDE_r [31:5]  = rg_NVDLA_RBK_D_DAOUT_SURF_STRIDE_DAOUT_SURF_STRIDE;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAIN_ADDR_LOW
  always @ (*) begin
    reg_NVDLA_RBK_D_DAIN_ADDR_LOW_DAIN_ADDR_LOW_next = rg_NVDLA_RBK_D_DAIN_ADDR_LOW_DAIN_ADDR_LOW;
    l2h_NVDLA_RBK_D_DAIN_ADDR_LOW_DAIN_ADDR_LOW_r = rg_NVDLA_RBK_D_DAIN_ADDR_LOW_DAIN_ADDR_LOW;
    if (d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_we) reg_NVDLA_RBK_D_DAIN_ADDR_LOW_DAIN_ADDR_LOW_next = d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_w [31:5] ;
  end
  
  //------- reg assigns for NVDLA_RBK_D_DAIN_ADDR_LOW
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_RBK_D_DAIN_ADDR_LOW_DAIN_ADDR_LOW <= #1 27'h0;
    end
    else begin
      rg_NVDLA_RBK_D_DAIN_ADDR_LOW_DAIN_ADDR_LOW <= #1  reg_NVDLA_RBK_D_DAIN_ADDR_LOW_DAIN_ADDR_LOW_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_RBK_S_POINTER (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_S_POINTER_r = 32'b0;
    l2d_NVDLA_RBK_S_POINTER_r [0]  = rg_NVDLA_RBK_S_POINTER_PRODUCER;
    l2d_NVDLA_RBK_S_POINTER_r [16]  = rg_NVDLA_RBK_S_POINTER_CONSUMER;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_PERF_READ_STALL (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_PERF_READ_STALL_r = rg_NVDLA_RBK_D_PERF_READ_STALL_RD_STALL_CNT;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAIN_PLANAR_STRIDE (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_r = 32'b0;
    l2d_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_r [31:5]  = rg_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_DAIN_PLANAR_STRIDE;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_PERF_READ_STALL
  always @ (*) begin
    rg_NVDLA_RBK_D_PERF_READ_STALL_RD_STALL_CNT =  h2l_NVDLA_RBK_D_PERF_READ_STALL_RD_STALL_CNT_w;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_PERF_ENABLE
  always @ (*) begin
    reg_NVDLA_RBK_D_PERF_ENABLE_PERF_EN_next = rg_NVDLA_RBK_D_PERF_ENABLE_PERF_EN;
    l2h_NVDLA_RBK_D_PERF_ENABLE_PERF_EN_r = rg_NVDLA_RBK_D_PERF_ENABLE_PERF_EN;
    if (d2l_NVDLA_RBK_D_PERF_ENABLE_we) reg_NVDLA_RBK_D_PERF_ENABLE_PERF_EN_next = d2l_NVDLA_RBK_D_PERF_ENABLE_w [0] ;
  end
  
  //------- reg assigns for NVDLA_RBK_D_PERF_ENABLE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_RBK_D_PERF_ENABLE_PERF_EN <= #1 1'h0;
    end
    else begin
      rg_NVDLA_RBK_D_PERF_ENABLE_PERF_EN <= #1  reg_NVDLA_RBK_D_PERF_ENABLE_PERF_EN_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAIN_SURF_STRIDE
  always @ (*) begin
    reg_NVDLA_RBK_D_DAIN_SURF_STRIDE_DAIN_SURF_STRIDE_next = rg_NVDLA_RBK_D_DAIN_SURF_STRIDE_DAIN_SURF_STRIDE;
    l2h_NVDLA_RBK_D_DAIN_SURF_STRIDE_DAIN_SURF_STRIDE_r = rg_NVDLA_RBK_D_DAIN_SURF_STRIDE_DAIN_SURF_STRIDE;
    if (d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_we) reg_NVDLA_RBK_D_DAIN_SURF_STRIDE_DAIN_SURF_STRIDE_next = d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_w [31:5] ;
  end
  
  //------- reg assigns for NVDLA_RBK_D_DAIN_SURF_STRIDE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_RBK_D_DAIN_SURF_STRIDE_DAIN_SURF_STRIDE <= #1 27'h0;
    end
    else begin
      rg_NVDLA_RBK_D_DAIN_SURF_STRIDE_DAIN_SURF_STRIDE <= #1  reg_NVDLA_RBK_D_DAIN_SURF_STRIDE_DAIN_SURF_STRIDE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_OP_ENABLE (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_OP_ENABLE_r = 32'b0;
    l2d_NVDLA_RBK_D_OP_ENABLE_r [0]  = rg_NVDLA_RBK_D_OP_ENABLE_OP_EN;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_DAIN_ADDR_LOW (pio read data)
  always @ (*) begin
    l2d_NVDLA_RBK_D_DAIN_ADDR_LOW_r = 32'b0;
    l2d_NVDLA_RBK_D_DAIN_ADDR_LOW_r [31:5]  = rg_NVDLA_RBK_D_DAIN_ADDR_LOW_DAIN_ADDR_LOW;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_S_STATUS
  always @ (*) begin
    rg_NVDLA_RBK_S_STATUS_STATUS_0 =  h2l_NVDLA_RBK_S_STATUS_STATUS_0_w;
    rg_NVDLA_RBK_S_STATUS_STATUS_1 =  h2l_NVDLA_RBK_S_STATUS_STATUS_1_w;
  end
  
  //------- combinatorial assigns for NVDLA_RBK_D_PERF_WRITE_STALL
  always @ (*) begin
    rg_NVDLA_RBK_D_PERF_WRITE_STALL_WR_STALL_CNT =  h2l_NVDLA_RBK_D_PERF_WRITE_STALL_WR_STALL_CNT_w;
  end
  
endmodule

//
//---------- module addrmap_NVDLA_jrdl_decode
//
module addrmap_NVDLA_jrdl_decode
(
  clk,
  reset,
  leaf_dec_wr_data,
  leaf_dec_addr,
  leaf_dec_block_sel,
  leaf_dec_valid,
  leaf_dec_wr_dvld,
  leaf_dec_cycle,
  leaf_dec_wr_width,
  l2d_NVDLA_RBK_S_STATUS_r,
  l2d_NVDLA_RBK_S_POINTER_r,
  l2d_NVDLA_RBK_D_OP_ENABLE_r,
  l2d_NVDLA_RBK_D_MISC_CFG_r,
  l2d_NVDLA_RBK_D_DAIN_RAM_TYPE_r,
  l2d_NVDLA_RBK_D_DATAIN_SIZE_0_r,
  l2d_NVDLA_RBK_D_DATAIN_SIZE_1_r,
  l2d_NVDLA_RBK_D_DAIN_ADDR_HIGH_r,
  l2d_NVDLA_RBK_D_DAIN_ADDR_LOW_r,
  l2d_NVDLA_RBK_D_DAIN_LINE_STRIDE_r,
  l2d_NVDLA_RBK_D_DAIN_SURF_STRIDE_r,
  l2d_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_r,
  l2d_NVDLA_RBK_D_DAOUT_RAM_TYPE_r,
  l2d_NVDLA_RBK_D_DATAOUT_SIZE_1_r,
  l2d_NVDLA_RBK_D_DAOUT_ADDR_HIGH_r,
  l2d_NVDLA_RBK_D_DAOUT_ADDR_LOW_r,
  l2d_NVDLA_RBK_D_DAOUT_LINE_STRIDE_r,
  l2d_NVDLA_RBK_D_CONTRACT_STRIDE_0_r,
  l2d_NVDLA_RBK_D_CONTRACT_STRIDE_1_r,
  l2d_NVDLA_RBK_D_DAOUT_SURF_STRIDE_r,
  l2d_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_r,
  l2d_NVDLA_RBK_D_DECONV_STRIDE_r,
  l2d_NVDLA_RBK_D_PERF_ENABLE_r,
  l2d_NVDLA_RBK_D_PERF_READ_STALL_r,
  l2d_NVDLA_RBK_D_PERF_WRITE_STALL_r,

  dec_leaf_rd_data,
  dec_leaf_ack,
  dec_leaf_nack,
  dec_leaf_accept,
  dec_leaf_reject,
  dec_leaf_retry_atomic,
  dec_leaf_data_width,
  d2l_NVDLA_RBK_S_STATUS_w,
  d2l_NVDLA_RBK_S_STATUS_we,
  d2l_NVDLA_RBK_S_STATUS_re,
  d2l_NVDLA_RBK_S_POINTER_w,
  d2l_NVDLA_RBK_S_POINTER_we,
  d2l_NVDLA_RBK_S_POINTER_re,
  d2l_NVDLA_RBK_D_OP_ENABLE_w,
  d2l_NVDLA_RBK_D_OP_ENABLE_we,
  d2l_NVDLA_RBK_D_OP_ENABLE_re,
  d2l_NVDLA_RBK_D_MISC_CFG_w,
  d2l_NVDLA_RBK_D_MISC_CFG_we,
  d2l_NVDLA_RBK_D_MISC_CFG_re,
  d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_w,
  d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_we,
  d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_re,
  d2l_NVDLA_RBK_D_DATAIN_SIZE_0_w,
  d2l_NVDLA_RBK_D_DATAIN_SIZE_0_we,
  d2l_NVDLA_RBK_D_DATAIN_SIZE_0_re,
  d2l_NVDLA_RBK_D_DATAIN_SIZE_1_w,
  d2l_NVDLA_RBK_D_DATAIN_SIZE_1_we,
  d2l_NVDLA_RBK_D_DATAIN_SIZE_1_re,
  d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_w,
  d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_we,
  d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_re,
  d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_w,
  d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_we,
  d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_re,
  d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_w,
  d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_we,
  d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_re,
  d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_w,
  d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_we,
  d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_re,
  d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_w,
  d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_we,
  d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_re,
  d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_w,
  d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_we,
  d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_re,
  d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_w,
  d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_we,
  d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_re,
  d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_w,
  d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_we,
  d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_re,
  d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_w,
  d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_we,
  d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_re,
  d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_w,
  d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_we,
  d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_re,
  d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_w,
  d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_we,
  d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_re,
  d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_w,
  d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_we,
  d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_re,
  d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_w,
  d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_we,
  d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_re,
  d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_w,
  d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_we,
  d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_re,
  d2l_NVDLA_RBK_D_DECONV_STRIDE_w,
  d2l_NVDLA_RBK_D_DECONV_STRIDE_we,
  d2l_NVDLA_RBK_D_DECONV_STRIDE_re,
  d2l_NVDLA_RBK_D_PERF_ENABLE_w,
  d2l_NVDLA_RBK_D_PERF_ENABLE_we,
  d2l_NVDLA_RBK_D_PERF_ENABLE_re,
  d2l_NVDLA_RBK_D_PERF_READ_STALL_w,
  d2l_NVDLA_RBK_D_PERF_READ_STALL_we,
  d2l_NVDLA_RBK_D_PERF_READ_STALL_re,
  d2l_NVDLA_RBK_D_PERF_WRITE_STALL_w,
  d2l_NVDLA_RBK_D_PERF_WRITE_STALL_we,
  d2l_NVDLA_RBK_D_PERF_WRITE_STALL_re );

  //------- inputs
  input    clk;
  input    reset;
  input     [31:0] leaf_dec_wr_data;
  input     [39:0] leaf_dec_addr;
  input    leaf_dec_block_sel;
  input    leaf_dec_valid;
  input    leaf_dec_wr_dvld;
  input     [1:0] leaf_dec_cycle;
  input     [2:0] leaf_dec_wr_width;
  input     [31:0] l2d_NVDLA_RBK_S_STATUS_r;
  input     [31:0] l2d_NVDLA_RBK_S_POINTER_r;
  input     [31:0] l2d_NVDLA_RBK_D_OP_ENABLE_r;
  input     [31:0] l2d_NVDLA_RBK_D_MISC_CFG_r;
  input     [31:0] l2d_NVDLA_RBK_D_DAIN_RAM_TYPE_r;
  input     [31:0] l2d_NVDLA_RBK_D_DATAIN_SIZE_0_r;
  input     [31:0] l2d_NVDLA_RBK_D_DATAIN_SIZE_1_r;
  input     [31:0] l2d_NVDLA_RBK_D_DAIN_ADDR_HIGH_r;
  input     [31:0] l2d_NVDLA_RBK_D_DAIN_ADDR_LOW_r;
  input     [31:0] l2d_NVDLA_RBK_D_DAIN_LINE_STRIDE_r;
  input     [31:0] l2d_NVDLA_RBK_D_DAIN_SURF_STRIDE_r;
  input     [31:0] l2d_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_r;
  input     [31:0] l2d_NVDLA_RBK_D_DAOUT_RAM_TYPE_r;
  input     [31:0] l2d_NVDLA_RBK_D_DATAOUT_SIZE_1_r;
  input     [31:0] l2d_NVDLA_RBK_D_DAOUT_ADDR_HIGH_r;
  input     [31:0] l2d_NVDLA_RBK_D_DAOUT_ADDR_LOW_r;
  input     [31:0] l2d_NVDLA_RBK_D_DAOUT_LINE_STRIDE_r;
  input     [31:0] l2d_NVDLA_RBK_D_CONTRACT_STRIDE_0_r;
  input     [31:0] l2d_NVDLA_RBK_D_CONTRACT_STRIDE_1_r;
  input     [31:0] l2d_NVDLA_RBK_D_DAOUT_SURF_STRIDE_r;
  input     [31:0] l2d_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_r;
  input     [31:0] l2d_NVDLA_RBK_D_DECONV_STRIDE_r;
  input     [31:0] l2d_NVDLA_RBK_D_PERF_ENABLE_r;
  input     [31:0] l2d_NVDLA_RBK_D_PERF_READ_STALL_r;
  input     [31:0] l2d_NVDLA_RBK_D_PERF_WRITE_STALL_r;

  //------- outputs
  output     [31:0] dec_leaf_rd_data;
  output    dec_leaf_ack;
  output    dec_leaf_nack;
  output    dec_leaf_accept;
  output    dec_leaf_reject;
  output    dec_leaf_retry_atomic;
  output     [2:0] dec_leaf_data_width;
  output     [31:0] d2l_NVDLA_RBK_S_STATUS_w;
  output    d2l_NVDLA_RBK_S_STATUS_we;
  output    d2l_NVDLA_RBK_S_STATUS_re;
  output     [31:0] d2l_NVDLA_RBK_S_POINTER_w;
  output    d2l_NVDLA_RBK_S_POINTER_we;
  output    d2l_NVDLA_RBK_S_POINTER_re;
  output     [31:0] d2l_NVDLA_RBK_D_OP_ENABLE_w;
  output    d2l_NVDLA_RBK_D_OP_ENABLE_we;
  output    d2l_NVDLA_RBK_D_OP_ENABLE_re;
  output     [31:0] d2l_NVDLA_RBK_D_MISC_CFG_w;
  output    d2l_NVDLA_RBK_D_MISC_CFG_we;
  output    d2l_NVDLA_RBK_D_MISC_CFG_re;
  output     [31:0] d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_w;
  output    d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_we;
  output    d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_re;
  output     [31:0] d2l_NVDLA_RBK_D_DATAIN_SIZE_0_w;
  output    d2l_NVDLA_RBK_D_DATAIN_SIZE_0_we;
  output    d2l_NVDLA_RBK_D_DATAIN_SIZE_0_re;
  output     [31:0] d2l_NVDLA_RBK_D_DATAIN_SIZE_1_w;
  output    d2l_NVDLA_RBK_D_DATAIN_SIZE_1_we;
  output    d2l_NVDLA_RBK_D_DATAIN_SIZE_1_re;
  output     [31:0] d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_w;
  output    d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_we;
  output    d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_re;
  output     [31:0] d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_w;
  output    d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_we;
  output    d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_re;
  output     [31:0] d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_w;
  output    d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_we;
  output    d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_re;
  output     [31:0] d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_w;
  output    d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_we;
  output    d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_re;
  output     [31:0] d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_w;
  output    d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_we;
  output    d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_re;
  output     [31:0] d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_w;
  output    d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_we;
  output    d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_re;
  output     [31:0] d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_w;
  output    d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_we;
  output    d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_re;
  output     [31:0] d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_w;
  output    d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_we;
  output    d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_re;
  output     [31:0] d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_w;
  output    d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_we;
  output    d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_re;
  output     [31:0] d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_w;
  output    d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_we;
  output    d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_re;
  output     [31:0] d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_w;
  output    d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_we;
  output    d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_re;
  output     [31:0] d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_w;
  output    d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_we;
  output    d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_re;
  output     [31:0] d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_w;
  output    d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_we;
  output    d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_re;
  output     [31:0] d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_w;
  output    d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_we;
  output    d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_re;
  output     [31:0] d2l_NVDLA_RBK_D_DECONV_STRIDE_w;
  output    d2l_NVDLA_RBK_D_DECONV_STRIDE_we;
  output    d2l_NVDLA_RBK_D_DECONV_STRIDE_re;
  output     [31:0] d2l_NVDLA_RBK_D_PERF_ENABLE_w;
  output    d2l_NVDLA_RBK_D_PERF_ENABLE_we;
  output    d2l_NVDLA_RBK_D_PERF_ENABLE_re;
  output     [31:0] d2l_NVDLA_RBK_D_PERF_READ_STALL_w;
  output    d2l_NVDLA_RBK_D_PERF_READ_STALL_we;
  output    d2l_NVDLA_RBK_D_PERF_READ_STALL_re;
  output     [31:0] d2l_NVDLA_RBK_D_PERF_WRITE_STALL_w;
  output    d2l_NVDLA_RBK_D_PERF_WRITE_STALL_we;
  output    d2l_NVDLA_RBK_D_PERF_WRITE_STALL_re;


  //------- wire defines
  wire   [31:0] pio_dec_write_data;
  wire   [16:2] pio_dec_address;
  wire  pio_dec_read;
  wire  pio_dec_write;
  wire   [39:0] block_sel_addr;
  wire  block_sel;
  wire  leaf_dec_valid_active;
  wire  leaf_dec_wr_dvld_active;
  
  //------- reg defines
  reg   [31:0] d2l_NVDLA_RBK_S_STATUS_w;
  reg  d2l_NVDLA_RBK_S_STATUS_we;
  reg  d2l_NVDLA_RBK_S_STATUS_re;
  reg   [31:0] d2l_NVDLA_RBK_S_POINTER_w;
  reg  d2l_NVDLA_RBK_S_POINTER_we;
  reg  d2l_NVDLA_RBK_S_POINTER_re;
  reg   [31:0] d2l_NVDLA_RBK_D_OP_ENABLE_w;
  reg  d2l_NVDLA_RBK_D_OP_ENABLE_we;
  reg  d2l_NVDLA_RBK_D_OP_ENABLE_re;
  reg   [31:0] d2l_NVDLA_RBK_D_MISC_CFG_w;
  reg  d2l_NVDLA_RBK_D_MISC_CFG_we;
  reg  d2l_NVDLA_RBK_D_MISC_CFG_re;
  reg   [31:0] d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_w;
  reg  d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_we;
  reg  d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_re;
  reg   [31:0] d2l_NVDLA_RBK_D_DATAIN_SIZE_0_w;
  reg  d2l_NVDLA_RBK_D_DATAIN_SIZE_0_we;
  reg  d2l_NVDLA_RBK_D_DATAIN_SIZE_0_re;
  reg   [31:0] d2l_NVDLA_RBK_D_DATAIN_SIZE_1_w;
  reg  d2l_NVDLA_RBK_D_DATAIN_SIZE_1_we;
  reg  d2l_NVDLA_RBK_D_DATAIN_SIZE_1_re;
  reg   [31:0] d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_w;
  reg  d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_we;
  reg  d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_re;
  reg   [31:0] d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_w;
  reg  d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_we;
  reg  d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_re;
  reg   [31:0] d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_w;
  reg  d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_we;
  reg  d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_re;
  reg   [31:0] d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_w;
  reg  d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_we;
  reg  d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_re;
  reg   [31:0] d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_w;
  reg  d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_we;
  reg  d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_re;
  reg   [31:0] d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_w;
  reg  d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_we;
  reg  d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_re;
  reg   [31:0] d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_w;
  reg  d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_we;
  reg  d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_re;
  reg   [31:0] d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_w;
  reg  d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_we;
  reg  d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_re;
  reg   [31:0] d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_w;
  reg  d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_we;
  reg  d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_re;
  reg   [31:0] d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_w;
  reg  d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_we;
  reg  d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_re;
  reg   [31:0] d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_w;
  reg  d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_we;
  reg  d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_re;
  reg   [31:0] d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_w;
  reg  d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_we;
  reg  d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_re;
  reg   [31:0] d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_w;
  reg  d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_we;
  reg  d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_re;
  reg   [31:0] d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_w;
  reg  d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_we;
  reg  d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_re;
  reg   [31:0] d2l_NVDLA_RBK_D_DECONV_STRIDE_w;
  reg  d2l_NVDLA_RBK_D_DECONV_STRIDE_we;
  reg  d2l_NVDLA_RBK_D_DECONV_STRIDE_re;
  reg   [31:0] d2l_NVDLA_RBK_D_PERF_ENABLE_w;
  reg  d2l_NVDLA_RBK_D_PERF_ENABLE_we;
  reg  d2l_NVDLA_RBK_D_PERF_ENABLE_re;
  reg   [31:0] d2l_NVDLA_RBK_D_PERF_READ_STALL_w;
  reg  d2l_NVDLA_RBK_D_PERF_READ_STALL_we;
  reg  d2l_NVDLA_RBK_D_PERF_READ_STALL_re;
  reg   [31:0] d2l_NVDLA_RBK_D_PERF_WRITE_STALL_w;
  reg  d2l_NVDLA_RBK_D_PERF_WRITE_STALL_we;
  reg  d2l_NVDLA_RBK_D_PERF_WRITE_STALL_re;
  reg  leaf_dec_valid_hld1;
  reg  leaf_dec_valid_hld1_next;
  reg  leaf_dec_wr_dvld_hld1;
  reg  leaf_dec_wr_dvld_hld1_next;
  reg  pio_write_active;
  reg  pio_read_active;
  reg   [16:2] pio_dec_address_d1;
  reg   [31:0] pio_dec_write_data_d1;
  reg   [31:0] dec_pio_read_data;
  reg   [31:0] dec_pio_read_data_d1;
  reg  dec_pio_ack;
  reg  dec_pio_nack;
  reg  dec_pio_ack_next;
  reg  dec_pio_nack_next;
  reg  pio_internal_ack;
  reg  pio_internal_nack;
  reg  pio_external_ack;
  reg  pio_external_nack;
  reg  pio_external_ack_next;
  reg  pio_external_nack_next;
  reg  pio_no_acks;
  reg  pio_activate_write;
  reg  pio_activate_read;
  reg   [31:0] dec_pio_read_data_next;
  reg  external_transaction_active;
  
  
  //------- assigns
  assign  pio_dec_write_data = leaf_dec_wr_data;
  assign  dec_leaf_rd_data = dec_pio_read_data;
  assign  dec_leaf_ack = dec_pio_ack;
  assign  dec_leaf_nack = dec_pio_nack;
  assign  pio_dec_address = leaf_dec_addr [16:2] ;
  assign  block_sel_addr = 40'h0;
  assign  block_sel = leaf_dec_block_sel;
  assign  leaf_dec_wr_dvld_active = leaf_dec_wr_dvld | leaf_dec_wr_dvld_hld1;
  assign  leaf_dec_valid_active = leaf_dec_valid | leaf_dec_valid_hld1;
  assign  dec_leaf_accept = leaf_dec_valid & block_sel;
  assign  dec_leaf_reject = leaf_dec_valid & ~block_sel;
  assign  pio_dec_read = block_sel & leaf_dec_valid_active & (leaf_dec_cycle == 2'b10);
  assign  pio_dec_write = block_sel & leaf_dec_wr_dvld_active & (leaf_dec_cycle[1] == 1'b0);
  assign  dec_leaf_retry_atomic = 1'b0;
  assign  dec_leaf_data_width = 3'b0;
  
  //------- combinatorial assigns for pio read data
  always @ (*) begin
    dec_pio_read_data = dec_pio_read_data_d1;
  end
  
  //------- reg assigns for pio read data
  always @ (posedge clk) begin
    if (reset) begin
      dec_pio_read_data_d1 <= #1  32'b0;
    end
    else begin
      dec_pio_read_data_d1 <= #1 dec_pio_read_data_next;
    end
  end
  
  //------- reg assigns for pio i/f
  always @ (posedge clk) begin
    if (reset) begin
      pio_write_active <= #1  1'b0;
      pio_read_active <= #1  1'b0;
    end
    else begin
      pio_write_active <= #1  pio_write_active ? pio_no_acks : pio_activate_write;
      pio_read_active <= #1  pio_read_active ? pio_no_acks : pio_activate_read;
      pio_dec_address_d1 <= #1   pio_dec_address;
      pio_dec_write_data_d1 <= #1  pio_dec_write_data;
    end
  end
  
  //------- combinatorial assigns for leaf i/f
  always @ (*) begin
    leaf_dec_valid_hld1_next = leaf_dec_valid | leaf_dec_valid_hld1;
    if (dec_pio_ack_next | dec_pio_nack_next) leaf_dec_valid_hld1_next = 1'b0;
    leaf_dec_wr_dvld_hld1_next = leaf_dec_wr_dvld | leaf_dec_wr_dvld_hld1;
    if (dec_pio_ack_next | dec_pio_nack_next | leaf_dec_valid) leaf_dec_wr_dvld_hld1_next = 1'b0;
  end
  
  //------- reg assigns for leaf i/f
  always @ (posedge clk) begin
    if (reset) begin
      leaf_dec_valid_hld1 <= #1  1'b0;
      leaf_dec_wr_dvld_hld1 <= #1  1'b0;
    end
    else begin
      leaf_dec_valid_hld1 <= #1 leaf_dec_valid_hld1_next;
      leaf_dec_wr_dvld_hld1 <= #1 leaf_dec_wr_dvld_hld1_next;
    end
  end
  
  //------- combinatorial assigns for pio ack/nack
  always @ (*) begin
    pio_internal_nack = (pio_read_active | pio_write_active) & ~pio_internal_ack & ~external_transaction_active;
    dec_pio_ack_next = (pio_internal_ack | (pio_external_ack_next & external_transaction_active));
    dec_pio_nack_next = (pio_internal_nack | (pio_external_nack_next & external_transaction_active));
    pio_no_acks = ~(dec_pio_ack | dec_pio_nack | pio_external_ack | pio_external_nack);
    pio_activate_write = (pio_dec_write & ~(dec_pio_ack | dec_pio_nack));
    pio_activate_read = (pio_dec_read & ~(dec_pio_ack | dec_pio_nack));
  end
  
  //------- reg assigns for pio ack/nack
  always @ (posedge clk) begin
    if (reset) begin
      dec_pio_ack <= #1 1'b0;
      dec_pio_nack <= #1 1'b0;
      pio_external_ack <= #1  1'b0;
      pio_external_nack <= #1  1'b0;
    end
    else begin
      dec_pio_ack <= #1 dec_pio_ack ? 1'b0 : dec_pio_ack_next;
      dec_pio_nack <= #1 dec_pio_nack ? 1'b0 : dec_pio_nack_next;
      pio_external_ack <= #1 pio_external_ack_next;
      pio_external_nack <= #1 pio_external_nack_next;
    end
  end
  
  
  //------- address decode
  always @ (*) begin
    pio_internal_ack = 1'b0;
    external_transaction_active = 1'b0;
    pio_external_ack_next = 1'b0;
    pio_external_nack_next = 1'b0;
    dec_pio_read_data_next = 32'b0;
    
    d2l_NVDLA_RBK_S_STATUS_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_S_STATUS_we = 1'b0;
    d2l_NVDLA_RBK_S_STATUS_re = 1'b0;
    d2l_NVDLA_RBK_S_POINTER_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_S_POINTER_we = 1'b0;
    d2l_NVDLA_RBK_S_POINTER_re = 1'b0;
    d2l_NVDLA_RBK_D_OP_ENABLE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_OP_ENABLE_we = 1'b0;
    d2l_NVDLA_RBK_D_OP_ENABLE_re = 1'b0;
    d2l_NVDLA_RBK_D_MISC_CFG_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_MISC_CFG_we = 1'b0;
    d2l_NVDLA_RBK_D_MISC_CFG_re = 1'b0;
    d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_we = 1'b0;
    d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_re = 1'b0;
    d2l_NVDLA_RBK_D_DATAIN_SIZE_0_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_DATAIN_SIZE_0_we = 1'b0;
    d2l_NVDLA_RBK_D_DATAIN_SIZE_0_re = 1'b0;
    d2l_NVDLA_RBK_D_DATAIN_SIZE_1_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_DATAIN_SIZE_1_we = 1'b0;
    d2l_NVDLA_RBK_D_DATAIN_SIZE_1_re = 1'b0;
    d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_we = 1'b0;
    d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_re = 1'b0;
    d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_we = 1'b0;
    d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_re = 1'b0;
    d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_we = 1'b0;
    d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_re = 1'b0;
    d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_we = 1'b0;
    d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_re = 1'b0;
    d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_we = 1'b0;
    d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_re = 1'b0;
    d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_we = 1'b0;
    d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_re = 1'b0;
    d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_we = 1'b0;
    d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_re = 1'b0;
    d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_we = 1'b0;
    d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_re = 1'b0;
    d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_we = 1'b0;
    d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_re = 1'b0;
    d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_we = 1'b0;
    d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_re = 1'b0;
    d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_we = 1'b0;
    d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_re = 1'b0;
    d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_we = 1'b0;
    d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_re = 1'b0;
    d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_we = 1'b0;
    d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_re = 1'b0;
    d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_we = 1'b0;
    d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_re = 1'b0;
    d2l_NVDLA_RBK_D_DECONV_STRIDE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_DECONV_STRIDE_we = 1'b0;
    d2l_NVDLA_RBK_D_DECONV_STRIDE_re = 1'b0;
    d2l_NVDLA_RBK_D_PERF_ENABLE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_PERF_ENABLE_we = 1'b0;
    d2l_NVDLA_RBK_D_PERF_ENABLE_re = 1'b0;
    d2l_NVDLA_RBK_D_PERF_READ_STALL_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_PERF_READ_STALL_we = 1'b0;
    d2l_NVDLA_RBK_D_PERF_READ_STALL_re = 1'b0;
    d2l_NVDLA_RBK_D_PERF_WRITE_STALL_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_RBK_D_PERF_WRITE_STALL_we = 1'b0;
    d2l_NVDLA_RBK_D_PERF_WRITE_STALL_re = 1'b0;
    
    casez(pio_dec_address_d1)
    //  Register: NVDLA_RBK.S_STATUS     Address: 0x11000     External: false
    15'b100010000000000:
      begin
        d2l_NVDLA_RBK_S_STATUS_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_S_STATUS_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_S_STATUS_r;
      end
    //  Register: NVDLA_RBK.S_POINTER     Address: 0x11004     External: false
    15'b100010000000001:
      begin
        d2l_NVDLA_RBK_S_POINTER_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_S_POINTER_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_S_POINTER_r;
      end
    //  Register: NVDLA_RBK.D_OP_ENABLE     Address: 0x11008     External: false
    15'b100010000000010:
      begin
        d2l_NVDLA_RBK_D_OP_ENABLE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_OP_ENABLE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_OP_ENABLE_r;
      end
    //  Register: NVDLA_RBK.D_MISC_CFG     Address: 0x1100c     External: false
    15'b100010000000011:
      begin
        d2l_NVDLA_RBK_D_MISC_CFG_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_MISC_CFG_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_MISC_CFG_r;
      end
    //  Register: NVDLA_RBK.D_DAIN_RAM_TYPE     Address: 0x11010     External: false
    15'b100010000000100:
      begin
        d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_DAIN_RAM_TYPE_r;
      end
    //  Register: NVDLA_RBK.D_DATAIN_SIZE_0     Address: 0x11014     External: false
    15'b100010000000101:
      begin
        d2l_NVDLA_RBK_D_DATAIN_SIZE_0_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_DATAIN_SIZE_0_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_DATAIN_SIZE_0_r;
      end
    //  Register: NVDLA_RBK.D_DATAIN_SIZE_1     Address: 0x11018     External: false
    15'b100010000000110:
      begin
        d2l_NVDLA_RBK_D_DATAIN_SIZE_1_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_DATAIN_SIZE_1_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_DATAIN_SIZE_1_r;
      end
    //  Register: NVDLA_RBK.D_DAIN_ADDR_HIGH     Address: 0x1101c     External: false
    15'b100010000000111:
      begin
        d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_DAIN_ADDR_HIGH_r;
      end
    //  Register: NVDLA_RBK.D_DAIN_ADDR_LOW     Address: 0x11020     External: false
    15'b100010000001000:
      begin
        d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_DAIN_ADDR_LOW_r;
      end
    //  Register: NVDLA_RBK.D_DAIN_LINE_STRIDE     Address: 0x11024     External: false
    15'b100010000001001:
      begin
        d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_DAIN_LINE_STRIDE_r;
      end
    //  Register: NVDLA_RBK.D_DAIN_SURF_STRIDE     Address: 0x11028     External: false
    15'b100010000001010:
      begin
        d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_DAIN_SURF_STRIDE_r;
      end
    //  Register: NVDLA_RBK.D_DAIN_PLANAR_STRIDE     Address: 0x1102c     External: false
    15'b100010000001011:
      begin
        d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_r;
      end
    //  Register: NVDLA_RBK.D_DAOUT_RAM_TYPE     Address: 0x11030     External: false
    15'b100010000001100:
      begin
        d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_DAOUT_RAM_TYPE_r;
      end
    //  Register: NVDLA_RBK.D_DATAOUT_SIZE_1     Address: 0x11034     External: false
    15'b100010000001101:
      begin
        d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_DATAOUT_SIZE_1_r;
      end
    //  Register: NVDLA_RBK.D_DAOUT_ADDR_HIGH     Address: 0x11038     External: false
    15'b100010000001110:
      begin
        d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_DAOUT_ADDR_HIGH_r;
      end
    //  Register: NVDLA_RBK.D_DAOUT_ADDR_LOW     Address: 0x1103c     External: false
    15'b100010000001111:
      begin
        d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_DAOUT_ADDR_LOW_r;
      end
    //  Register: NVDLA_RBK.D_DAOUT_LINE_STRIDE     Address: 0x11040     External: false
    15'b100010000010000:
      begin
        d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_DAOUT_LINE_STRIDE_r;
      end
    //  Register: NVDLA_RBK.D_CONTRACT_STRIDE_0     Address: 0x11044     External: false
    15'b100010000010001:
      begin
        d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_CONTRACT_STRIDE_0_r;
      end
    //  Register: NVDLA_RBK.D_CONTRACT_STRIDE_1     Address: 0x11048     External: false
    15'b100010000010010:
      begin
        d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_CONTRACT_STRIDE_1_r;
      end
    //  Register: NVDLA_RBK.D_DAOUT_SURF_STRIDE     Address: 0x1104c     External: false
    15'b100010000010011:
      begin
        d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_DAOUT_SURF_STRIDE_r;
      end
    //  Register: NVDLA_RBK.D_DAOUT_PLANAR_STRIDE     Address: 0x11050     External: false
    15'b100010000010100:
      begin
        d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_r;
      end
    //  Register: NVDLA_RBK.D_DECONV_STRIDE     Address: 0x11054     External: false
    15'b100010000010101:
      begin
        d2l_NVDLA_RBK_D_DECONV_STRIDE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_DECONV_STRIDE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_DECONV_STRIDE_r;
      end
    //  Register: NVDLA_RBK.D_PERF_ENABLE     Address: 0x11058     External: false
    15'b100010000010110:
      begin
        d2l_NVDLA_RBK_D_PERF_ENABLE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_PERF_ENABLE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_PERF_ENABLE_r;
      end
    //  Register: NVDLA_RBK.D_PERF_READ_STALL     Address: 0x1105c     External: false
    15'b100010000010111:
      begin
        d2l_NVDLA_RBK_D_PERF_READ_STALL_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_PERF_READ_STALL_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_PERF_READ_STALL_r;
      end
    //  Register: NVDLA_RBK.D_PERF_WRITE_STALL     Address: 0x11060     External: false
    15'b100010000011000:
      begin
        d2l_NVDLA_RBK_D_PERF_WRITE_STALL_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_RBK_D_PERF_WRITE_STALL_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_RBK_D_PERF_WRITE_STALL_r;
      end
    endcase
  end
  
endmodule

//
//---------- module addrmap_NVDLA_pio
//
module addrmap_NVDLA_pio
(
  clk,
  reset,
  h2l_NVDLA_RBK_S_STATUS_STATUS_0_w,
  h2l_NVDLA_RBK_S_STATUS_STATUS_1_w,
  h2l_NVDLA_RBK_S_POINTER_CONSUMER_w,
  h2l_NVDLA_RBK_D_PERF_READ_STALL_RD_STALL_CNT_w,
  h2l_NVDLA_RBK_D_PERF_WRITE_STALL_WR_STALL_CNT_w,
  leaf_dec_wr_data,
  leaf_dec_addr,
  leaf_dec_block_sel,
  leaf_dec_valid,
  leaf_dec_wr_dvld,
  leaf_dec_cycle,
  leaf_dec_wr_width,

  l2h_NVDLA_RBK_S_POINTER_PRODUCER_r,
  l2h_NVDLA_RBK_D_OP_ENABLE_OP_EN_r,
  l2h_NVDLA_RBK_D_MISC_CFG_RUBIK_MODE_r,
  l2h_NVDLA_RBK_D_MISC_CFG_IN_PRECISION_r,
  l2h_NVDLA_RBK_D_DAIN_RAM_TYPE_DATAIN_RAM_TYPE_r,
  l2h_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_WIDTH_r,
  l2h_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_HEIGHT_r,
  l2h_NVDLA_RBK_D_DATAIN_SIZE_1_DATAIN_CHANNEL_r,
  l2h_NVDLA_RBK_D_DAIN_ADDR_HIGH_DAIN_ADDR_HIGH_r,
  l2h_NVDLA_RBK_D_DAIN_ADDR_LOW_DAIN_ADDR_LOW_r,
  l2h_NVDLA_RBK_D_DAIN_LINE_STRIDE_DAIN_LINE_STRIDE_r,
  l2h_NVDLA_RBK_D_DAIN_SURF_STRIDE_DAIN_SURF_STRIDE_r,
  l2h_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_DAIN_PLANAR_STRIDE_r,
  l2h_NVDLA_RBK_D_DAOUT_RAM_TYPE_DATAOUT_RAM_TYPE_r,
  l2h_NVDLA_RBK_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_r,
  l2h_NVDLA_RBK_D_DAOUT_ADDR_HIGH_DAOUT_ADDR_HIGH_r,
  l2h_NVDLA_RBK_D_DAOUT_ADDR_LOW_DAOUT_ADDR_LOW_r,
  l2h_NVDLA_RBK_D_DAOUT_LINE_STRIDE_DAOUT_LINE_STRIDE_r,
  l2h_NVDLA_RBK_D_CONTRACT_STRIDE_0_CONTRACT_STRIDE_0_r,
  l2h_NVDLA_RBK_D_CONTRACT_STRIDE_1_CONTRACT_STRIDE_1_r,
  l2h_NVDLA_RBK_D_DAOUT_SURF_STRIDE_DAOUT_SURF_STRIDE_r,
  l2h_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_DAOUT_PLANAR_STRIDE_r,
  l2h_NVDLA_RBK_D_DECONV_STRIDE_DECONV_X_STRIDE_r,
  l2h_NVDLA_RBK_D_DECONV_STRIDE_DECONV_Y_STRIDE_r,
  l2h_NVDLA_RBK_D_PERF_ENABLE_PERF_EN_r,
  dec_leaf_rd_data,
  dec_leaf_ack,
  dec_leaf_nack,
  dec_leaf_accept,
  dec_leaf_reject,
  dec_leaf_retry_atomic,
  dec_leaf_data_width );

  //------- inputs
  input    clk;
  input    reset;
  input     [1:0] h2l_NVDLA_RBK_S_STATUS_STATUS_0_w;
  input     [1:0] h2l_NVDLA_RBK_S_STATUS_STATUS_1_w;
  input    h2l_NVDLA_RBK_S_POINTER_CONSUMER_w;
  input     [31:0] h2l_NVDLA_RBK_D_PERF_READ_STALL_RD_STALL_CNT_w;
  input     [31:0] h2l_NVDLA_RBK_D_PERF_WRITE_STALL_WR_STALL_CNT_w;
  input     [31:0] leaf_dec_wr_data;
  input     [39:0] leaf_dec_addr;
  input    leaf_dec_block_sel;
  input    leaf_dec_valid;
  input    leaf_dec_wr_dvld;
  input     [1:0] leaf_dec_cycle;
  input     [2:0] leaf_dec_wr_width;

  //------- outputs
  output    l2h_NVDLA_RBK_S_POINTER_PRODUCER_r;
  output    l2h_NVDLA_RBK_D_OP_ENABLE_OP_EN_r;
  output     [1:0] l2h_NVDLA_RBK_D_MISC_CFG_RUBIK_MODE_r;
  output     [1:0] l2h_NVDLA_RBK_D_MISC_CFG_IN_PRECISION_r;
  output    l2h_NVDLA_RBK_D_DAIN_RAM_TYPE_DATAIN_RAM_TYPE_r;
  output     [12:0] l2h_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_WIDTH_r;
  output     [12:0] l2h_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_HEIGHT_r;
  output     [12:0] l2h_NVDLA_RBK_D_DATAIN_SIZE_1_DATAIN_CHANNEL_r;
  output     [31:0] l2h_NVDLA_RBK_D_DAIN_ADDR_HIGH_DAIN_ADDR_HIGH_r;
  output     [26:0] l2h_NVDLA_RBK_D_DAIN_ADDR_LOW_DAIN_ADDR_LOW_r;
  output     [26:0] l2h_NVDLA_RBK_D_DAIN_LINE_STRIDE_DAIN_LINE_STRIDE_r;
  output     [26:0] l2h_NVDLA_RBK_D_DAIN_SURF_STRIDE_DAIN_SURF_STRIDE_r;
  output     [26:0] l2h_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_DAIN_PLANAR_STRIDE_r;
  output    l2h_NVDLA_RBK_D_DAOUT_RAM_TYPE_DATAOUT_RAM_TYPE_r;
  output     [12:0] l2h_NVDLA_RBK_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_r;
  output     [31:0] l2h_NVDLA_RBK_D_DAOUT_ADDR_HIGH_DAOUT_ADDR_HIGH_r;
  output     [26:0] l2h_NVDLA_RBK_D_DAOUT_ADDR_LOW_DAOUT_ADDR_LOW_r;
  output     [26:0] l2h_NVDLA_RBK_D_DAOUT_LINE_STRIDE_DAOUT_LINE_STRIDE_r;
  output     [26:0] l2h_NVDLA_RBK_D_CONTRACT_STRIDE_0_CONTRACT_STRIDE_0_r;
  output     [26:0] l2h_NVDLA_RBK_D_CONTRACT_STRIDE_1_CONTRACT_STRIDE_1_r;
  output     [26:0] l2h_NVDLA_RBK_D_DAOUT_SURF_STRIDE_DAOUT_SURF_STRIDE_r;
  output     [26:0] l2h_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_DAOUT_PLANAR_STRIDE_r;
  output     [4:0] l2h_NVDLA_RBK_D_DECONV_STRIDE_DECONV_X_STRIDE_r;
  output     [4:0] l2h_NVDLA_RBK_D_DECONV_STRIDE_DECONV_Y_STRIDE_r;
  output    l2h_NVDLA_RBK_D_PERF_ENABLE_PERF_EN_r;
  output     [31:0] dec_leaf_rd_data;
  output    dec_leaf_ack;
  output    dec_leaf_nack;
  output    dec_leaf_accept;
  output    dec_leaf_reject;
  output    dec_leaf_retry_atomic;
  output     [2:0] dec_leaf_data_width;


  //------- wire defines
  wire   [31:0] d2l_NVDLA_RBK_S_STATUS_w;
  wire  d2l_NVDLA_RBK_S_STATUS_we;
  wire  d2l_NVDLA_RBK_S_STATUS_re;
  wire   [31:0] d2l_NVDLA_RBK_S_POINTER_w;
  wire  d2l_NVDLA_RBK_S_POINTER_we;
  wire  d2l_NVDLA_RBK_S_POINTER_re;
  wire   [31:0] d2l_NVDLA_RBK_D_OP_ENABLE_w;
  wire  d2l_NVDLA_RBK_D_OP_ENABLE_we;
  wire  d2l_NVDLA_RBK_D_OP_ENABLE_re;
  wire   [31:0] d2l_NVDLA_RBK_D_MISC_CFG_w;
  wire  d2l_NVDLA_RBK_D_MISC_CFG_we;
  wire  d2l_NVDLA_RBK_D_MISC_CFG_re;
  wire   [31:0] d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_w;
  wire  d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_we;
  wire  d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_re;
  wire   [31:0] d2l_NVDLA_RBK_D_DATAIN_SIZE_0_w;
  wire  d2l_NVDLA_RBK_D_DATAIN_SIZE_0_we;
  wire  d2l_NVDLA_RBK_D_DATAIN_SIZE_0_re;
  wire   [31:0] d2l_NVDLA_RBK_D_DATAIN_SIZE_1_w;
  wire  d2l_NVDLA_RBK_D_DATAIN_SIZE_1_we;
  wire  d2l_NVDLA_RBK_D_DATAIN_SIZE_1_re;
  wire   [31:0] d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_w;
  wire  d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_we;
  wire  d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_re;
  wire   [31:0] d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_w;
  wire  d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_we;
  wire  d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_re;
  wire   [31:0] d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_w;
  wire  d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_we;
  wire  d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_re;
  wire   [31:0] d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_w;
  wire  d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_we;
  wire  d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_re;
  wire   [31:0] d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_w;
  wire  d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_we;
  wire  d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_re;
  wire   [31:0] d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_w;
  wire  d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_we;
  wire  d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_re;
  wire   [31:0] d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_w;
  wire  d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_we;
  wire  d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_re;
  wire   [31:0] d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_w;
  wire  d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_we;
  wire  d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_re;
  wire   [31:0] d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_w;
  wire  d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_we;
  wire  d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_re;
  wire   [31:0] d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_w;
  wire  d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_we;
  wire  d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_re;
  wire   [31:0] d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_w;
  wire  d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_we;
  wire  d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_re;
  wire   [31:0] d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_w;
  wire  d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_we;
  wire  d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_re;
  wire   [31:0] d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_w;
  wire  d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_we;
  wire  d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_re;
  wire   [31:0] d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_w;
  wire  d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_we;
  wire  d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_re;
  wire   [31:0] d2l_NVDLA_RBK_D_DECONV_STRIDE_w;
  wire  d2l_NVDLA_RBK_D_DECONV_STRIDE_we;
  wire  d2l_NVDLA_RBK_D_DECONV_STRIDE_re;
  wire   [31:0] d2l_NVDLA_RBK_D_PERF_ENABLE_w;
  wire  d2l_NVDLA_RBK_D_PERF_ENABLE_we;
  wire  d2l_NVDLA_RBK_D_PERF_ENABLE_re;
  wire   [31:0] d2l_NVDLA_RBK_D_PERF_READ_STALL_w;
  wire  d2l_NVDLA_RBK_D_PERF_READ_STALL_we;
  wire  d2l_NVDLA_RBK_D_PERF_READ_STALL_re;
  wire   [31:0] d2l_NVDLA_RBK_D_PERF_WRITE_STALL_w;
  wire  d2l_NVDLA_RBK_D_PERF_WRITE_STALL_we;
  wire  d2l_NVDLA_RBK_D_PERF_WRITE_STALL_re;
  wire   [31:0] l2d_NVDLA_RBK_S_STATUS_r;
  wire   [31:0] l2d_NVDLA_RBK_S_POINTER_r;
  wire   [31:0] l2d_NVDLA_RBK_D_OP_ENABLE_r;
  wire   [31:0] l2d_NVDLA_RBK_D_MISC_CFG_r;
  wire   [31:0] l2d_NVDLA_RBK_D_DAIN_RAM_TYPE_r;
  wire   [31:0] l2d_NVDLA_RBK_D_DATAIN_SIZE_0_r;
  wire   [31:0] l2d_NVDLA_RBK_D_DATAIN_SIZE_1_r;
  wire   [31:0] l2d_NVDLA_RBK_D_DAIN_ADDR_HIGH_r;
  wire   [31:0] l2d_NVDLA_RBK_D_DAIN_ADDR_LOW_r;
  wire   [31:0] l2d_NVDLA_RBK_D_DAIN_LINE_STRIDE_r;
  wire   [31:0] l2d_NVDLA_RBK_D_DAIN_SURF_STRIDE_r;
  wire   [31:0] l2d_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_r;
  wire   [31:0] l2d_NVDLA_RBK_D_DAOUT_RAM_TYPE_r;
  wire   [31:0] l2d_NVDLA_RBK_D_DATAOUT_SIZE_1_r;
  wire   [31:0] l2d_NVDLA_RBK_D_DAOUT_ADDR_HIGH_r;
  wire   [31:0] l2d_NVDLA_RBK_D_DAOUT_ADDR_LOW_r;
  wire   [31:0] l2d_NVDLA_RBK_D_DAOUT_LINE_STRIDE_r;
  wire   [31:0] l2d_NVDLA_RBK_D_CONTRACT_STRIDE_0_r;
  wire   [31:0] l2d_NVDLA_RBK_D_CONTRACT_STRIDE_1_r;
  wire   [31:0] l2d_NVDLA_RBK_D_DAOUT_SURF_STRIDE_r;
  wire   [31:0] l2d_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_r;
  wire   [31:0] l2d_NVDLA_RBK_D_DECONV_STRIDE_r;
  wire   [31:0] l2d_NVDLA_RBK_D_PERF_ENABLE_r;
  wire   [31:0] l2d_NVDLA_RBK_D_PERF_READ_STALL_r;
  wire   [31:0] l2d_NVDLA_RBK_D_PERF_WRITE_STALL_r;
  
  
  addrmap_NVDLA_jrdl_decode pio_decode (
    .clk(clk),
    .reset(reset),
    .leaf_dec_wr_data(leaf_dec_wr_data),
    .leaf_dec_addr(leaf_dec_addr),
    .leaf_dec_block_sel(leaf_dec_block_sel),
    .leaf_dec_valid(leaf_dec_valid),
    .leaf_dec_wr_dvld(leaf_dec_wr_dvld),
    .leaf_dec_cycle(leaf_dec_cycle),
    .leaf_dec_wr_width(leaf_dec_wr_width),
    .l2d_NVDLA_RBK_S_STATUS_r(l2d_NVDLA_RBK_S_STATUS_r),
    .l2d_NVDLA_RBK_S_POINTER_r(l2d_NVDLA_RBK_S_POINTER_r),
    .l2d_NVDLA_RBK_D_OP_ENABLE_r(l2d_NVDLA_RBK_D_OP_ENABLE_r),
    .l2d_NVDLA_RBK_D_MISC_CFG_r(l2d_NVDLA_RBK_D_MISC_CFG_r),
    .l2d_NVDLA_RBK_D_DAIN_RAM_TYPE_r(l2d_NVDLA_RBK_D_DAIN_RAM_TYPE_r),
    .l2d_NVDLA_RBK_D_DATAIN_SIZE_0_r(l2d_NVDLA_RBK_D_DATAIN_SIZE_0_r),
    .l2d_NVDLA_RBK_D_DATAIN_SIZE_1_r(l2d_NVDLA_RBK_D_DATAIN_SIZE_1_r),
    .l2d_NVDLA_RBK_D_DAIN_ADDR_HIGH_r(l2d_NVDLA_RBK_D_DAIN_ADDR_HIGH_r),
    .l2d_NVDLA_RBK_D_DAIN_ADDR_LOW_r(l2d_NVDLA_RBK_D_DAIN_ADDR_LOW_r),
    .l2d_NVDLA_RBK_D_DAIN_LINE_STRIDE_r(l2d_NVDLA_RBK_D_DAIN_LINE_STRIDE_r),
    .l2d_NVDLA_RBK_D_DAIN_SURF_STRIDE_r(l2d_NVDLA_RBK_D_DAIN_SURF_STRIDE_r),
    .l2d_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_r(l2d_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_r),
    .l2d_NVDLA_RBK_D_DAOUT_RAM_TYPE_r(l2d_NVDLA_RBK_D_DAOUT_RAM_TYPE_r),
    .l2d_NVDLA_RBK_D_DATAOUT_SIZE_1_r(l2d_NVDLA_RBK_D_DATAOUT_SIZE_1_r),
    .l2d_NVDLA_RBK_D_DAOUT_ADDR_HIGH_r(l2d_NVDLA_RBK_D_DAOUT_ADDR_HIGH_r),
    .l2d_NVDLA_RBK_D_DAOUT_ADDR_LOW_r(l2d_NVDLA_RBK_D_DAOUT_ADDR_LOW_r),
    .l2d_NVDLA_RBK_D_DAOUT_LINE_STRIDE_r(l2d_NVDLA_RBK_D_DAOUT_LINE_STRIDE_r),
    .l2d_NVDLA_RBK_D_CONTRACT_STRIDE_0_r(l2d_NVDLA_RBK_D_CONTRACT_STRIDE_0_r),
    .l2d_NVDLA_RBK_D_CONTRACT_STRIDE_1_r(l2d_NVDLA_RBK_D_CONTRACT_STRIDE_1_r),
    .l2d_NVDLA_RBK_D_DAOUT_SURF_STRIDE_r(l2d_NVDLA_RBK_D_DAOUT_SURF_STRIDE_r),
    .l2d_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_r(l2d_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_r),
    .l2d_NVDLA_RBK_D_DECONV_STRIDE_r(l2d_NVDLA_RBK_D_DECONV_STRIDE_r),
    .l2d_NVDLA_RBK_D_PERF_ENABLE_r(l2d_NVDLA_RBK_D_PERF_ENABLE_r),
    .l2d_NVDLA_RBK_D_PERF_READ_STALL_r(l2d_NVDLA_RBK_D_PERF_READ_STALL_r),
    .l2d_NVDLA_RBK_D_PERF_WRITE_STALL_r(l2d_NVDLA_RBK_D_PERF_WRITE_STALL_r),
    .dec_leaf_rd_data(dec_leaf_rd_data),
    .dec_leaf_ack(dec_leaf_ack),
    .dec_leaf_nack(dec_leaf_nack),
    .dec_leaf_accept(dec_leaf_accept),
    .dec_leaf_reject(dec_leaf_reject),
    .dec_leaf_retry_atomic(dec_leaf_retry_atomic),
    .dec_leaf_data_width(dec_leaf_data_width),
    .d2l_NVDLA_RBK_S_STATUS_w(d2l_NVDLA_RBK_S_STATUS_w),
    .d2l_NVDLA_RBK_S_STATUS_we(d2l_NVDLA_RBK_S_STATUS_we),
    .d2l_NVDLA_RBK_S_STATUS_re(d2l_NVDLA_RBK_S_STATUS_re),
    .d2l_NVDLA_RBK_S_POINTER_w(d2l_NVDLA_RBK_S_POINTER_w),
    .d2l_NVDLA_RBK_S_POINTER_we(d2l_NVDLA_RBK_S_POINTER_we),
    .d2l_NVDLA_RBK_S_POINTER_re(d2l_NVDLA_RBK_S_POINTER_re),
    .d2l_NVDLA_RBK_D_OP_ENABLE_w(d2l_NVDLA_RBK_D_OP_ENABLE_w),
    .d2l_NVDLA_RBK_D_OP_ENABLE_we(d2l_NVDLA_RBK_D_OP_ENABLE_we),
    .d2l_NVDLA_RBK_D_OP_ENABLE_re(d2l_NVDLA_RBK_D_OP_ENABLE_re),
    .d2l_NVDLA_RBK_D_MISC_CFG_w(d2l_NVDLA_RBK_D_MISC_CFG_w),
    .d2l_NVDLA_RBK_D_MISC_CFG_we(d2l_NVDLA_RBK_D_MISC_CFG_we),
    .d2l_NVDLA_RBK_D_MISC_CFG_re(d2l_NVDLA_RBK_D_MISC_CFG_re),
    .d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_w(d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_w),
    .d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_we(d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_we),
    .d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_re(d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_re),
    .d2l_NVDLA_RBK_D_DATAIN_SIZE_0_w(d2l_NVDLA_RBK_D_DATAIN_SIZE_0_w),
    .d2l_NVDLA_RBK_D_DATAIN_SIZE_0_we(d2l_NVDLA_RBK_D_DATAIN_SIZE_0_we),
    .d2l_NVDLA_RBK_D_DATAIN_SIZE_0_re(d2l_NVDLA_RBK_D_DATAIN_SIZE_0_re),
    .d2l_NVDLA_RBK_D_DATAIN_SIZE_1_w(d2l_NVDLA_RBK_D_DATAIN_SIZE_1_w),
    .d2l_NVDLA_RBK_D_DATAIN_SIZE_1_we(d2l_NVDLA_RBK_D_DATAIN_SIZE_1_we),
    .d2l_NVDLA_RBK_D_DATAIN_SIZE_1_re(d2l_NVDLA_RBK_D_DATAIN_SIZE_1_re),
    .d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_w(d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_w),
    .d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_we(d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_we),
    .d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_re(d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_re),
    .d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_w(d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_w),
    .d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_we(d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_we),
    .d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_re(d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_re),
    .d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_w(d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_w),
    .d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_we(d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_we),
    .d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_re(d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_re),
    .d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_w(d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_w),
    .d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_we(d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_we),
    .d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_re(d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_re),
    .d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_w(d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_w),
    .d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_we(d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_we),
    .d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_re(d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_re),
    .d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_w(d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_w),
    .d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_we(d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_we),
    .d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_re(d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_re),
    .d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_w(d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_w),
    .d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_we(d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_we),
    .d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_re(d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_re),
    .d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_w(d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_w),
    .d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_we(d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_we),
    .d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_re(d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_re),
    .d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_w(d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_w),
    .d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_we(d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_we),
    .d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_re(d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_re),
    .d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_w(d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_w),
    .d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_we(d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_we),
    .d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_re(d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_re),
    .d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_w(d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_w),
    .d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_we(d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_we),
    .d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_re(d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_re),
    .d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_w(d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_w),
    .d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_we(d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_we),
    .d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_re(d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_re),
    .d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_w(d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_w),
    .d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_we(d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_we),
    .d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_re(d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_re),
    .d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_w(d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_w),
    .d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_we(d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_we),
    .d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_re(d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_re),
    .d2l_NVDLA_RBK_D_DECONV_STRIDE_w(d2l_NVDLA_RBK_D_DECONV_STRIDE_w),
    .d2l_NVDLA_RBK_D_DECONV_STRIDE_we(d2l_NVDLA_RBK_D_DECONV_STRIDE_we),
    .d2l_NVDLA_RBK_D_DECONV_STRIDE_re(d2l_NVDLA_RBK_D_DECONV_STRIDE_re),
    .d2l_NVDLA_RBK_D_PERF_ENABLE_w(d2l_NVDLA_RBK_D_PERF_ENABLE_w),
    .d2l_NVDLA_RBK_D_PERF_ENABLE_we(d2l_NVDLA_RBK_D_PERF_ENABLE_we),
    .d2l_NVDLA_RBK_D_PERF_ENABLE_re(d2l_NVDLA_RBK_D_PERF_ENABLE_re),
    .d2l_NVDLA_RBK_D_PERF_READ_STALL_w(d2l_NVDLA_RBK_D_PERF_READ_STALL_w),
    .d2l_NVDLA_RBK_D_PERF_READ_STALL_we(d2l_NVDLA_RBK_D_PERF_READ_STALL_we),
    .d2l_NVDLA_RBK_D_PERF_READ_STALL_re(d2l_NVDLA_RBK_D_PERF_READ_STALL_re),
    .d2l_NVDLA_RBK_D_PERF_WRITE_STALL_w(d2l_NVDLA_RBK_D_PERF_WRITE_STALL_w),
    .d2l_NVDLA_RBK_D_PERF_WRITE_STALL_we(d2l_NVDLA_RBK_D_PERF_WRITE_STALL_we),
    .d2l_NVDLA_RBK_D_PERF_WRITE_STALL_re(d2l_NVDLA_RBK_D_PERF_WRITE_STALL_re) );
    
  addrmap_NVDLA_jrdl_logic pio_logic (
    .clk(clk),
    .reset(reset),
    .d2l_NVDLA_RBK_S_STATUS_w(d2l_NVDLA_RBK_S_STATUS_w),
    .d2l_NVDLA_RBK_S_STATUS_we(d2l_NVDLA_RBK_S_STATUS_we),
    .d2l_NVDLA_RBK_S_STATUS_re(d2l_NVDLA_RBK_S_STATUS_re),
    .d2l_NVDLA_RBK_S_POINTER_w(d2l_NVDLA_RBK_S_POINTER_w),
    .d2l_NVDLA_RBK_S_POINTER_we(d2l_NVDLA_RBK_S_POINTER_we),
    .d2l_NVDLA_RBK_S_POINTER_re(d2l_NVDLA_RBK_S_POINTER_re),
    .d2l_NVDLA_RBK_D_OP_ENABLE_w(d2l_NVDLA_RBK_D_OP_ENABLE_w),
    .d2l_NVDLA_RBK_D_OP_ENABLE_we(d2l_NVDLA_RBK_D_OP_ENABLE_we),
    .d2l_NVDLA_RBK_D_OP_ENABLE_re(d2l_NVDLA_RBK_D_OP_ENABLE_re),
    .d2l_NVDLA_RBK_D_MISC_CFG_w(d2l_NVDLA_RBK_D_MISC_CFG_w),
    .d2l_NVDLA_RBK_D_MISC_CFG_we(d2l_NVDLA_RBK_D_MISC_CFG_we),
    .d2l_NVDLA_RBK_D_MISC_CFG_re(d2l_NVDLA_RBK_D_MISC_CFG_re),
    .d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_w(d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_w),
    .d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_we(d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_we),
    .d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_re(d2l_NVDLA_RBK_D_DAIN_RAM_TYPE_re),
    .d2l_NVDLA_RBK_D_DATAIN_SIZE_0_w(d2l_NVDLA_RBK_D_DATAIN_SIZE_0_w),
    .d2l_NVDLA_RBK_D_DATAIN_SIZE_0_we(d2l_NVDLA_RBK_D_DATAIN_SIZE_0_we),
    .d2l_NVDLA_RBK_D_DATAIN_SIZE_0_re(d2l_NVDLA_RBK_D_DATAIN_SIZE_0_re),
    .d2l_NVDLA_RBK_D_DATAIN_SIZE_1_w(d2l_NVDLA_RBK_D_DATAIN_SIZE_1_w),
    .d2l_NVDLA_RBK_D_DATAIN_SIZE_1_we(d2l_NVDLA_RBK_D_DATAIN_SIZE_1_we),
    .d2l_NVDLA_RBK_D_DATAIN_SIZE_1_re(d2l_NVDLA_RBK_D_DATAIN_SIZE_1_re),
    .d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_w(d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_w),
    .d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_we(d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_we),
    .d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_re(d2l_NVDLA_RBK_D_DAIN_ADDR_HIGH_re),
    .d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_w(d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_w),
    .d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_we(d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_we),
    .d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_re(d2l_NVDLA_RBK_D_DAIN_ADDR_LOW_re),
    .d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_w(d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_w),
    .d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_we(d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_we),
    .d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_re(d2l_NVDLA_RBK_D_DAIN_LINE_STRIDE_re),
    .d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_w(d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_w),
    .d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_we(d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_we),
    .d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_re(d2l_NVDLA_RBK_D_DAIN_SURF_STRIDE_re),
    .d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_w(d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_w),
    .d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_we(d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_we),
    .d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_re(d2l_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_re),
    .d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_w(d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_w),
    .d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_we(d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_we),
    .d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_re(d2l_NVDLA_RBK_D_DAOUT_RAM_TYPE_re),
    .d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_w(d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_w),
    .d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_we(d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_we),
    .d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_re(d2l_NVDLA_RBK_D_DATAOUT_SIZE_1_re),
    .d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_w(d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_w),
    .d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_we(d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_we),
    .d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_re(d2l_NVDLA_RBK_D_DAOUT_ADDR_HIGH_re),
    .d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_w(d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_w),
    .d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_we(d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_we),
    .d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_re(d2l_NVDLA_RBK_D_DAOUT_ADDR_LOW_re),
    .d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_w(d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_w),
    .d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_we(d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_we),
    .d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_re(d2l_NVDLA_RBK_D_DAOUT_LINE_STRIDE_re),
    .d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_w(d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_w),
    .d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_we(d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_we),
    .d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_re(d2l_NVDLA_RBK_D_CONTRACT_STRIDE_0_re),
    .d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_w(d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_w),
    .d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_we(d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_we),
    .d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_re(d2l_NVDLA_RBK_D_CONTRACT_STRIDE_1_re),
    .d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_w(d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_w),
    .d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_we(d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_we),
    .d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_re(d2l_NVDLA_RBK_D_DAOUT_SURF_STRIDE_re),
    .d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_w(d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_w),
    .d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_we(d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_we),
    .d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_re(d2l_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_re),
    .d2l_NVDLA_RBK_D_DECONV_STRIDE_w(d2l_NVDLA_RBK_D_DECONV_STRIDE_w),
    .d2l_NVDLA_RBK_D_DECONV_STRIDE_we(d2l_NVDLA_RBK_D_DECONV_STRIDE_we),
    .d2l_NVDLA_RBK_D_DECONV_STRIDE_re(d2l_NVDLA_RBK_D_DECONV_STRIDE_re),
    .d2l_NVDLA_RBK_D_PERF_ENABLE_w(d2l_NVDLA_RBK_D_PERF_ENABLE_w),
    .d2l_NVDLA_RBK_D_PERF_ENABLE_we(d2l_NVDLA_RBK_D_PERF_ENABLE_we),
    .d2l_NVDLA_RBK_D_PERF_ENABLE_re(d2l_NVDLA_RBK_D_PERF_ENABLE_re),
    .d2l_NVDLA_RBK_D_PERF_READ_STALL_w(d2l_NVDLA_RBK_D_PERF_READ_STALL_w),
    .d2l_NVDLA_RBK_D_PERF_READ_STALL_we(d2l_NVDLA_RBK_D_PERF_READ_STALL_we),
    .d2l_NVDLA_RBK_D_PERF_READ_STALL_re(d2l_NVDLA_RBK_D_PERF_READ_STALL_re),
    .d2l_NVDLA_RBK_D_PERF_WRITE_STALL_w(d2l_NVDLA_RBK_D_PERF_WRITE_STALL_w),
    .d2l_NVDLA_RBK_D_PERF_WRITE_STALL_we(d2l_NVDLA_RBK_D_PERF_WRITE_STALL_we),
    .d2l_NVDLA_RBK_D_PERF_WRITE_STALL_re(d2l_NVDLA_RBK_D_PERF_WRITE_STALL_re),
    .h2l_NVDLA_RBK_S_STATUS_STATUS_0_w(h2l_NVDLA_RBK_S_STATUS_STATUS_0_w),
    .h2l_NVDLA_RBK_S_STATUS_STATUS_1_w(h2l_NVDLA_RBK_S_STATUS_STATUS_1_w),
    .h2l_NVDLA_RBK_S_POINTER_CONSUMER_w(h2l_NVDLA_RBK_S_POINTER_CONSUMER_w),
    .h2l_NVDLA_RBK_D_PERF_READ_STALL_RD_STALL_CNT_w(h2l_NVDLA_RBK_D_PERF_READ_STALL_RD_STALL_CNT_w),
    .h2l_NVDLA_RBK_D_PERF_WRITE_STALL_WR_STALL_CNT_w(h2l_NVDLA_RBK_D_PERF_WRITE_STALL_WR_STALL_CNT_w),
    .l2d_NVDLA_RBK_S_STATUS_r(l2d_NVDLA_RBK_S_STATUS_r),
    .l2d_NVDLA_RBK_S_POINTER_r(l2d_NVDLA_RBK_S_POINTER_r),
    .l2d_NVDLA_RBK_D_OP_ENABLE_r(l2d_NVDLA_RBK_D_OP_ENABLE_r),
    .l2d_NVDLA_RBK_D_MISC_CFG_r(l2d_NVDLA_RBK_D_MISC_CFG_r),
    .l2d_NVDLA_RBK_D_DAIN_RAM_TYPE_r(l2d_NVDLA_RBK_D_DAIN_RAM_TYPE_r),
    .l2d_NVDLA_RBK_D_DATAIN_SIZE_0_r(l2d_NVDLA_RBK_D_DATAIN_SIZE_0_r),
    .l2d_NVDLA_RBK_D_DATAIN_SIZE_1_r(l2d_NVDLA_RBK_D_DATAIN_SIZE_1_r),
    .l2d_NVDLA_RBK_D_DAIN_ADDR_HIGH_r(l2d_NVDLA_RBK_D_DAIN_ADDR_HIGH_r),
    .l2d_NVDLA_RBK_D_DAIN_ADDR_LOW_r(l2d_NVDLA_RBK_D_DAIN_ADDR_LOW_r),
    .l2d_NVDLA_RBK_D_DAIN_LINE_STRIDE_r(l2d_NVDLA_RBK_D_DAIN_LINE_STRIDE_r),
    .l2d_NVDLA_RBK_D_DAIN_SURF_STRIDE_r(l2d_NVDLA_RBK_D_DAIN_SURF_STRIDE_r),
    .l2d_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_r(l2d_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_r),
    .l2d_NVDLA_RBK_D_DAOUT_RAM_TYPE_r(l2d_NVDLA_RBK_D_DAOUT_RAM_TYPE_r),
    .l2d_NVDLA_RBK_D_DATAOUT_SIZE_1_r(l2d_NVDLA_RBK_D_DATAOUT_SIZE_1_r),
    .l2d_NVDLA_RBK_D_DAOUT_ADDR_HIGH_r(l2d_NVDLA_RBK_D_DAOUT_ADDR_HIGH_r),
    .l2d_NVDLA_RBK_D_DAOUT_ADDR_LOW_r(l2d_NVDLA_RBK_D_DAOUT_ADDR_LOW_r),
    .l2d_NVDLA_RBK_D_DAOUT_LINE_STRIDE_r(l2d_NVDLA_RBK_D_DAOUT_LINE_STRIDE_r),
    .l2d_NVDLA_RBK_D_CONTRACT_STRIDE_0_r(l2d_NVDLA_RBK_D_CONTRACT_STRIDE_0_r),
    .l2d_NVDLA_RBK_D_CONTRACT_STRIDE_1_r(l2d_NVDLA_RBK_D_CONTRACT_STRIDE_1_r),
    .l2d_NVDLA_RBK_D_DAOUT_SURF_STRIDE_r(l2d_NVDLA_RBK_D_DAOUT_SURF_STRIDE_r),
    .l2d_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_r(l2d_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_r),
    .l2d_NVDLA_RBK_D_DECONV_STRIDE_r(l2d_NVDLA_RBK_D_DECONV_STRIDE_r),
    .l2d_NVDLA_RBK_D_PERF_ENABLE_r(l2d_NVDLA_RBK_D_PERF_ENABLE_r),
    .l2d_NVDLA_RBK_D_PERF_READ_STALL_r(l2d_NVDLA_RBK_D_PERF_READ_STALL_r),
    .l2d_NVDLA_RBK_D_PERF_WRITE_STALL_r(l2d_NVDLA_RBK_D_PERF_WRITE_STALL_r),
    .l2h_NVDLA_RBK_S_POINTER_PRODUCER_r(l2h_NVDLA_RBK_S_POINTER_PRODUCER_r),
    .l2h_NVDLA_RBK_D_OP_ENABLE_OP_EN_r(l2h_NVDLA_RBK_D_OP_ENABLE_OP_EN_r),
    .l2h_NVDLA_RBK_D_MISC_CFG_RUBIK_MODE_r(l2h_NVDLA_RBK_D_MISC_CFG_RUBIK_MODE_r),
    .l2h_NVDLA_RBK_D_MISC_CFG_IN_PRECISION_r(l2h_NVDLA_RBK_D_MISC_CFG_IN_PRECISION_r),
    .l2h_NVDLA_RBK_D_DAIN_RAM_TYPE_DATAIN_RAM_TYPE_r(l2h_NVDLA_RBK_D_DAIN_RAM_TYPE_DATAIN_RAM_TYPE_r),
    .l2h_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_WIDTH_r(l2h_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_WIDTH_r),
    .l2h_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_HEIGHT_r(l2h_NVDLA_RBK_D_DATAIN_SIZE_0_DATAIN_HEIGHT_r),
    .l2h_NVDLA_RBK_D_DATAIN_SIZE_1_DATAIN_CHANNEL_r(l2h_NVDLA_RBK_D_DATAIN_SIZE_1_DATAIN_CHANNEL_r),
    .l2h_NVDLA_RBK_D_DAIN_ADDR_HIGH_DAIN_ADDR_HIGH_r(l2h_NVDLA_RBK_D_DAIN_ADDR_HIGH_DAIN_ADDR_HIGH_r),
    .l2h_NVDLA_RBK_D_DAIN_ADDR_LOW_DAIN_ADDR_LOW_r(l2h_NVDLA_RBK_D_DAIN_ADDR_LOW_DAIN_ADDR_LOW_r),
    .l2h_NVDLA_RBK_D_DAIN_LINE_STRIDE_DAIN_LINE_STRIDE_r(l2h_NVDLA_RBK_D_DAIN_LINE_STRIDE_DAIN_LINE_STRIDE_r),
    .l2h_NVDLA_RBK_D_DAIN_SURF_STRIDE_DAIN_SURF_STRIDE_r(l2h_NVDLA_RBK_D_DAIN_SURF_STRIDE_DAIN_SURF_STRIDE_r),
    .l2h_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_DAIN_PLANAR_STRIDE_r(l2h_NVDLA_RBK_D_DAIN_PLANAR_STRIDE_DAIN_PLANAR_STRIDE_r),
    .l2h_NVDLA_RBK_D_DAOUT_RAM_TYPE_DATAOUT_RAM_TYPE_r(l2h_NVDLA_RBK_D_DAOUT_RAM_TYPE_DATAOUT_RAM_TYPE_r),
    .l2h_NVDLA_RBK_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_r(l2h_NVDLA_RBK_D_DATAOUT_SIZE_1_DATAOUT_CHANNEL_r),
    .l2h_NVDLA_RBK_D_DAOUT_ADDR_HIGH_DAOUT_ADDR_HIGH_r(l2h_NVDLA_RBK_D_DAOUT_ADDR_HIGH_DAOUT_ADDR_HIGH_r),
    .l2h_NVDLA_RBK_D_DAOUT_ADDR_LOW_DAOUT_ADDR_LOW_r(l2h_NVDLA_RBK_D_DAOUT_ADDR_LOW_DAOUT_ADDR_LOW_r),
    .l2h_NVDLA_RBK_D_DAOUT_LINE_STRIDE_DAOUT_LINE_STRIDE_r(l2h_NVDLA_RBK_D_DAOUT_LINE_STRIDE_DAOUT_LINE_STRIDE_r),
    .l2h_NVDLA_RBK_D_CONTRACT_STRIDE_0_CONTRACT_STRIDE_0_r(l2h_NVDLA_RBK_D_CONTRACT_STRIDE_0_CONTRACT_STRIDE_0_r),
    .l2h_NVDLA_RBK_D_CONTRACT_STRIDE_1_CONTRACT_STRIDE_1_r(l2h_NVDLA_RBK_D_CONTRACT_STRIDE_1_CONTRACT_STRIDE_1_r),
    .l2h_NVDLA_RBK_D_DAOUT_SURF_STRIDE_DAOUT_SURF_STRIDE_r(l2h_NVDLA_RBK_D_DAOUT_SURF_STRIDE_DAOUT_SURF_STRIDE_r),
    .l2h_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_DAOUT_PLANAR_STRIDE_r(l2h_NVDLA_RBK_D_DAOUT_PLANAR_STRIDE_DAOUT_PLANAR_STRIDE_r),
    .l2h_NVDLA_RBK_D_DECONV_STRIDE_DECONV_X_STRIDE_r(l2h_NVDLA_RBK_D_DECONV_STRIDE_DECONV_X_STRIDE_r),
    .l2h_NVDLA_RBK_D_DECONV_STRIDE_DECONV_Y_STRIDE_r(l2h_NVDLA_RBK_D_DECONV_STRIDE_DECONV_Y_STRIDE_r),
    .l2h_NVDLA_RBK_D_PERF_ENABLE_PERF_EN_r(l2h_NVDLA_RBK_D_PERF_ENABLE_PERF_EN_r) );
    
endmodule

