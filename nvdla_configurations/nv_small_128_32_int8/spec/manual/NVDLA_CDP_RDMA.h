// Register NVDLA_CDP_RDMA_S_STATUS_0
#define NVDLA_CDP_RDMA_S_STATUS_0			_MK_ADDR_CONST(0xc000)
#define NVDLA_CDP_RDMA_S_STATUS_0_STATUS_0_SHIFT			_MK_SHIFT_CONST(0)
#define NVDLA_CDP_RDMA_S_STATUS_0_STATUS_0_FIELD			_MK_FIELD_CONST(0x3, NVDLA_CDP_RDMA_S_STATUS_0_STATUS_0_SHIFT)
#define NVDLA_CDP_RDMA_S_STATUS_0_STATUS_0_IDLE			_MK_ENUM_CONST(0x0)
#define NVDLA_CDP_RDMA_S_STATUS_0_STATUS_0_RUNNING			_MK_ENUM_CONST(0x1)
#define NVDLA_CDP_RDMA_S_STATUS_0_STATUS_0_PENDING			_MK_ENUM_CONST(0x2)
#define NVDLA_CDP_RDMA_S_STATUS_0_STATUS_1_SHIFT			_MK_SHIFT_CONST(16)
#define NVDLA_CDP_RDMA_S_STATUS_0_STATUS_1_FIELD			_MK_FIELD_CONST(0x3, NVDLA_CDP_RDMA_S_STATUS_0_STATUS_1_SHIFT)
#define NVDLA_CDP_RDMA_S_STATUS_0_STATUS_1_IDLE			_MK_ENUM_CONST(0x0)
#define NVDLA_CDP_RDMA_S_STATUS_0_STATUS_1_RUNNING			_MK_ENUM_CONST(0x1)
#define NVDLA_CDP_RDMA_S_STATUS_0_STATUS_1_PENDING			_MK_ENUM_CONST(0x2)


// Register NVDLA_CDP_RDMA_S_POINTER_0
#define NVDLA_CDP_RDMA_S_POINTER_0			_MK_ADDR_CONST(0xc004)
#define NVDLA_CDP_RDMA_S_POINTER_0_PRODUCER_SHIFT			_MK_SHIFT_CONST(0)
#define NVDLA_CDP_RDMA_S_POINTER_0_PRODUCER_FIELD			_MK_FIELD_CONST(0x1, NVDLA_CDP_RDMA_S_POINTER_0_PRODUCER_SHIFT)
#define NVDLA_CDP_RDMA_S_POINTER_0_PRODUCER_GROUP_0			_MK_ENUM_CONST(0x0)
#define NVDLA_CDP_RDMA_S_POINTER_0_PRODUCER_GROUP_1			_MK_ENUM_CONST(0x1)
#define NVDLA_CDP_RDMA_S_POINTER_0_CONSUMER_SHIFT			_MK_SHIFT_CONST(16)
#define NVDLA_CDP_RDMA_S_POINTER_0_CONSUMER_FIELD			_MK_FIELD_CONST(0x1, NVDLA_CDP_RDMA_S_POINTER_0_CONSUMER_SHIFT)
#define NVDLA_CDP_RDMA_S_POINTER_0_CONSUMER_GROUP_0			_MK_ENUM_CONST(0x0)
#define NVDLA_CDP_RDMA_S_POINTER_0_CONSUMER_GROUP_1			_MK_ENUM_CONST(0x1)


// Register NVDLA_CDP_RDMA_D_OP_ENABLE_0
#define NVDLA_CDP_RDMA_D_OP_ENABLE_0			_MK_ADDR_CONST(0xc008)
#define NVDLA_CDP_RDMA_D_OP_ENABLE_0_OP_EN_SHIFT			_MK_SHIFT_CONST(0)
#define NVDLA_CDP_RDMA_D_OP_ENABLE_0_OP_EN_FIELD			_MK_FIELD_CONST(0x1, NVDLA_CDP_RDMA_D_OP_ENABLE_0_OP_EN_SHIFT)
#define NVDLA_CDP_RDMA_D_OP_ENABLE_0_OP_EN_DISABLE			_MK_ENUM_CONST(0x0)
#define NVDLA_CDP_RDMA_D_OP_ENABLE_0_OP_EN_ENABLE			_MK_ENUM_CONST(0x1)


// Register NVDLA_CDP_RDMA_D_DATA_CUBE_WIDTH_0
#define NVDLA_CDP_RDMA_D_DATA_CUBE_WIDTH_0			_MK_ADDR_CONST(0xc00c)
#define NVDLA_CDP_RDMA_D_DATA_CUBE_WIDTH_0_WIDTH_SHIFT			_MK_SHIFT_CONST(0)
#define NVDLA_CDP_RDMA_D_DATA_CUBE_WIDTH_0_WIDTH_FIELD			_MK_FIELD_CONST(0x1fff, NVDLA_CDP_RDMA_D_DATA_CUBE_WIDTH_0_WIDTH_SHIFT)


// Register NVDLA_CDP_RDMA_D_DATA_CUBE_HEIGHT_0
#define NVDLA_CDP_RDMA_D_DATA_CUBE_HEIGHT_0			_MK_ADDR_CONST(0xc010)
#define NVDLA_CDP_RDMA_D_DATA_CUBE_HEIGHT_0_HEIGHT_SHIFT			_MK_SHIFT_CONST(0)
#define NVDLA_CDP_RDMA_D_DATA_CUBE_HEIGHT_0_HEIGHT_FIELD			_MK_FIELD_CONST(0x1fff, NVDLA_CDP_RDMA_D_DATA_CUBE_HEIGHT_0_HEIGHT_SHIFT)


// Register NVDLA_CDP_RDMA_D_DATA_CUBE_CHANNEL_0
#define NVDLA_CDP_RDMA_D_DATA_CUBE_CHANNEL_0			_MK_ADDR_CONST(0xc014)
#define NVDLA_CDP_RDMA_D_DATA_CUBE_CHANNEL_0_CHANNEL_SHIFT			_MK_SHIFT_CONST(0)
#define NVDLA_CDP_RDMA_D_DATA_CUBE_CHANNEL_0_CHANNEL_FIELD			_MK_FIELD_CONST(0x1fff, NVDLA_CDP_RDMA_D_DATA_CUBE_CHANNEL_0_CHANNEL_SHIFT)


// Register NVDLA_CDP_RDMA_D_SRC_BASE_ADDR_LOW_0
#define NVDLA_CDP_RDMA_D_SRC_BASE_ADDR_LOW_0			_MK_ADDR_CONST(0xc018)
#define NVDLA_CDP_RDMA_D_SRC_BASE_ADDR_LOW_0_SRC_BASE_ADDR_LOW_SHIFT			_MK_SHIFT_CONST(0)
#define NVDLA_CDP_RDMA_D_SRC_BASE_ADDR_LOW_0_SRC_BASE_ADDR_LOW_FIELD			_MK_FIELD_CONST(0xffffffff, NVDLA_CDP_RDMA_D_SRC_BASE_ADDR_LOW_0_SRC_BASE_ADDR_LOW_SHIFT)


// Register NVDLA_CDP_RDMA_D_SRC_BASE_ADDR_HIGH_0
#define NVDLA_CDP_RDMA_D_SRC_BASE_ADDR_HIGH_0			_MK_ADDR_CONST(0xc01c)
#define NVDLA_CDP_RDMA_D_SRC_BASE_ADDR_HIGH_0_SRC_BASE_ADDR_HIGH_SHIFT			_MK_SHIFT_CONST(0)
#define NVDLA_CDP_RDMA_D_SRC_BASE_ADDR_HIGH_0_SRC_BASE_ADDR_HIGH_FIELD			_MK_FIELD_CONST(0xffffffff, NVDLA_CDP_RDMA_D_SRC_BASE_ADDR_HIGH_0_SRC_BASE_ADDR_HIGH_SHIFT)


// Register NVDLA_CDP_RDMA_D_SRC_LINE_STRIDE_0
#define NVDLA_CDP_RDMA_D_SRC_LINE_STRIDE_0			_MK_ADDR_CONST(0xc020)
#define NVDLA_CDP_RDMA_D_SRC_LINE_STRIDE_0_SRC_LINE_STRIDE_SHIFT			_MK_SHIFT_CONST(0)
#define NVDLA_CDP_RDMA_D_SRC_LINE_STRIDE_0_SRC_LINE_STRIDE_FIELD			_MK_FIELD_CONST(0xffffffff, NVDLA_CDP_RDMA_D_SRC_LINE_STRIDE_0_SRC_LINE_STRIDE_SHIFT)


// Register NVDLA_CDP_RDMA_D_SRC_SURFACE_STRIDE_0
#define NVDLA_CDP_RDMA_D_SRC_SURFACE_STRIDE_0			_MK_ADDR_CONST(0xc024)
#define NVDLA_CDP_RDMA_D_SRC_SURFACE_STRIDE_0_SRC_SURFACE_STRIDE_SHIFT			_MK_SHIFT_CONST(0)
#define NVDLA_CDP_RDMA_D_SRC_SURFACE_STRIDE_0_SRC_SURFACE_STRIDE_FIELD			_MK_FIELD_CONST(0xffffffff, NVDLA_CDP_RDMA_D_SRC_SURFACE_STRIDE_0_SRC_SURFACE_STRIDE_SHIFT)


// Register NVDLA_CDP_RDMA_D_SRC_DMA_CFG_0
#define NVDLA_CDP_RDMA_D_SRC_DMA_CFG_0			_MK_ADDR_CONST(0xc028)
#define NVDLA_CDP_RDMA_D_SRC_DMA_CFG_0_SRC_RAM_TYPE_SHIFT			_MK_SHIFT_CONST(0)
#define NVDLA_CDP_RDMA_D_SRC_DMA_CFG_0_SRC_RAM_TYPE_FIELD			_MK_FIELD_CONST(0x1, NVDLA_CDP_RDMA_D_SRC_DMA_CFG_0_SRC_RAM_TYPE_SHIFT)
#define NVDLA_CDP_RDMA_D_SRC_DMA_CFG_0_SRC_RAM_TYPE_CV			_MK_ENUM_CONST(0x0)
#define NVDLA_CDP_RDMA_D_SRC_DMA_CFG_0_SRC_RAM_TYPE_MC			_MK_ENUM_CONST(0x1)


// Register NVDLA_CDP_RDMA_D_SRC_COMPRESSION_EN_0
#define NVDLA_CDP_RDMA_D_SRC_COMPRESSION_EN_0			_MK_ADDR_CONST(0xc02c)
#define NVDLA_CDP_RDMA_D_SRC_COMPRESSION_EN_0_SRC_COMPRESSION_EN_SHIFT			_MK_SHIFT_CONST(0)
#define NVDLA_CDP_RDMA_D_SRC_COMPRESSION_EN_0_SRC_COMPRESSION_EN_FIELD			_MK_FIELD_CONST(0x1, NVDLA_CDP_RDMA_D_SRC_COMPRESSION_EN_0_SRC_COMPRESSION_EN_SHIFT)
#define NVDLA_CDP_RDMA_D_SRC_COMPRESSION_EN_0_SRC_COMPRESSION_EN_DISABLE			_MK_ENUM_CONST(0x0)
#define NVDLA_CDP_RDMA_D_SRC_COMPRESSION_EN_0_SRC_COMPRESSION_EN_ENABLE			_MK_ENUM_CONST(0x1)


// Register NVDLA_CDP_RDMA_D_OPERATION_MODE_0
#define NVDLA_CDP_RDMA_D_OPERATION_MODE_0			_MK_ADDR_CONST(0xc030)
#define NVDLA_CDP_RDMA_D_OPERATION_MODE_0_OPERATION_MODE_SHIFT			_MK_SHIFT_CONST(0)
#define NVDLA_CDP_RDMA_D_OPERATION_MODE_0_OPERATION_MODE_FIELD			_MK_FIELD_CONST(0x3, NVDLA_CDP_RDMA_D_OPERATION_MODE_0_OPERATION_MODE_SHIFT)
#define NVDLA_CDP_RDMA_D_OPERATION_MODE_0_OPERATION_MODE_READPHILE			_MK_ENUM_CONST(0x0)
#define NVDLA_CDP_RDMA_D_OPERATION_MODE_0_OPERATION_MODE_WRITEPHILE			_MK_ENUM_CONST(0x1)
#define NVDLA_CDP_RDMA_D_OPERATION_MODE_0_OPERATION_MODE_ORDINARY			_MK_ENUM_CONST(0x2)


// Register NVDLA_CDP_RDMA_D_DATA_FORMAT_0
#define NVDLA_CDP_RDMA_D_DATA_FORMAT_0			_MK_ADDR_CONST(0xc034)
#define NVDLA_CDP_RDMA_D_DATA_FORMAT_0_INPUT_DATA_SHIFT			_MK_SHIFT_CONST(0)
#define NVDLA_CDP_RDMA_D_DATA_FORMAT_0_INPUT_DATA_FIELD			_MK_FIELD_CONST(0x3, NVDLA_CDP_RDMA_D_DATA_FORMAT_0_INPUT_DATA_SHIFT)
#define NVDLA_CDP_RDMA_D_DATA_FORMAT_0_INPUT_DATA_INT8			_MK_ENUM_CONST(0x0)
#define NVDLA_CDP_RDMA_D_DATA_FORMAT_0_INPUT_DATA_INT16			_MK_ENUM_CONST(0x1)
#define NVDLA_CDP_RDMA_D_DATA_FORMAT_0_INPUT_DATA_FP16			_MK_ENUM_CONST(0x2)


// Register NVDLA_CDP_RDMA_D_PERF_ENABLE_0
#define NVDLA_CDP_RDMA_D_PERF_ENABLE_0			_MK_ADDR_CONST(0xc038)
#define NVDLA_CDP_RDMA_D_PERF_ENABLE_0_DMA_EN_SHIFT			_MK_SHIFT_CONST(0)
#define NVDLA_CDP_RDMA_D_PERF_ENABLE_0_DMA_EN_FIELD			_MK_FIELD_CONST(0x1, NVDLA_CDP_RDMA_D_PERF_ENABLE_0_DMA_EN_SHIFT)
#define NVDLA_CDP_RDMA_D_PERF_ENABLE_0_DMA_EN_DISABLE			_MK_ENUM_CONST(0x0)
#define NVDLA_CDP_RDMA_D_PERF_ENABLE_0_DMA_EN_ENABLE			_MK_ENUM_CONST(0x1)


// Register NVDLA_CDP_RDMA_D_PERF_READ_STALL_0
#define NVDLA_CDP_RDMA_D_PERF_READ_STALL_0			_MK_ADDR_CONST(0xc03c)
#define NVDLA_CDP_RDMA_D_PERF_READ_STALL_0_PERF_READ_STALL_SHIFT			_MK_SHIFT_CONST(0)
#define NVDLA_CDP_RDMA_D_PERF_READ_STALL_0_PERF_READ_STALL_FIELD			_MK_FIELD_CONST(0xffffffff, NVDLA_CDP_RDMA_D_PERF_READ_STALL_0_PERF_READ_STALL_SHIFT)


// Register NVDLA_CDP_RDMA_D_CYA_0
#define NVDLA_CDP_RDMA_D_CYA_0			_MK_ADDR_CONST(0xc040)
#define NVDLA_CDP_RDMA_D_CYA_0_CYA_SHIFT			_MK_SHIFT_CONST(0)
#define NVDLA_CDP_RDMA_D_CYA_0_CYA_FIELD			_MK_FIELD_CONST(0xffffffff, NVDLA_CDP_RDMA_D_CYA_0_CYA_SHIFT)



// To satisfy various compilers and platforms,
// we let users control the types and syntax of certain constants, using macros.
#ifndef _MK_SHIFT_CONST
  #define _MK_SHIFT_CONST(_constant_) _constant_
#endif
#ifndef _MK_MASK_CONST
  #define _MK_MASK_CONST(_constant_) _constant_
#endif
#ifndef _MK_ENUM_CONST
  #define _MK_ENUM_CONST(_constant_) (_constant_ ## UL)
#endif
#ifndef _MK_ADDR_CONST
  #define _MK_ADDR_CONST(_constant_) _constant_
#endif
#ifndef _MK_FIELD_CONST
  #define _MK_FIELD_CONST(_mask_, _shift_) (_MK_MASK_CONST(_mask_) << _MK_SHIFT_CONST(_shift_))
#endif



//
// ADDRESS SPACES
//

#define BASE_ADDRESS_NVDLA_CDP_RDMA	0xc000
