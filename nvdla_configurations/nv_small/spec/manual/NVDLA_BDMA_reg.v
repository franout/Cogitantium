//   Ordt 171103.01 autogenerated file 
//   Input: NVDLA_BDMA.rdl
//   Parms: opendla.parms
//   Date: Sat Feb 01 16:14:02 CET 2020
//

//
//---------- module addrmap_NVDLA_jrdl_logic
//
module addrmap_NVDLA_jrdl_logic
(
  clk,
  reset,
  d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_w,
  d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_we,
  d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_re,
  d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_w,
  d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_we,
  d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_re,
  d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_w,
  d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_we,
  d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_re,
  d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_w,
  d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_we,
  d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_re,
  d2l_NVDLA_BDMA_CFG_LINE_w,
  d2l_NVDLA_BDMA_CFG_LINE_we,
  d2l_NVDLA_BDMA_CFG_LINE_re,
  d2l_NVDLA_BDMA_CFG_CMD_w,
  d2l_NVDLA_BDMA_CFG_CMD_we,
  d2l_NVDLA_BDMA_CFG_CMD_re,
  d2l_NVDLA_BDMA_CFG_LINE_REPEAT_w,
  d2l_NVDLA_BDMA_CFG_LINE_REPEAT_we,
  d2l_NVDLA_BDMA_CFG_LINE_REPEAT_re,
  d2l_NVDLA_BDMA_CFG_SRC_LINE_w,
  d2l_NVDLA_BDMA_CFG_SRC_LINE_we,
  d2l_NVDLA_BDMA_CFG_SRC_LINE_re,
  d2l_NVDLA_BDMA_CFG_DST_LINE_w,
  d2l_NVDLA_BDMA_CFG_DST_LINE_we,
  d2l_NVDLA_BDMA_CFG_DST_LINE_re,
  d2l_NVDLA_BDMA_CFG_SURF_REPEAT_w,
  d2l_NVDLA_BDMA_CFG_SURF_REPEAT_we,
  d2l_NVDLA_BDMA_CFG_SURF_REPEAT_re,
  d2l_NVDLA_BDMA_CFG_SRC_SURF_w,
  d2l_NVDLA_BDMA_CFG_SRC_SURF_we,
  d2l_NVDLA_BDMA_CFG_SRC_SURF_re,
  d2l_NVDLA_BDMA_CFG_DST_SURF_w,
  d2l_NVDLA_BDMA_CFG_DST_SURF_we,
  d2l_NVDLA_BDMA_CFG_DST_SURF_re,
  d2l_NVDLA_BDMA_CFG_OP_w,
  d2l_NVDLA_BDMA_CFG_OP_we,
  d2l_NVDLA_BDMA_CFG_OP_re,
  d2l_NVDLA_BDMA_CFG_LAUNCH0_w,
  d2l_NVDLA_BDMA_CFG_LAUNCH0_we,
  d2l_NVDLA_BDMA_CFG_LAUNCH0_re,
  d2l_NVDLA_BDMA_CFG_LAUNCH1_w,
  d2l_NVDLA_BDMA_CFG_LAUNCH1_we,
  d2l_NVDLA_BDMA_CFG_LAUNCH1_re,
  d2l_NVDLA_BDMA_CFG_STATUS_w,
  d2l_NVDLA_BDMA_CFG_STATUS_we,
  d2l_NVDLA_BDMA_CFG_STATUS_re,
  d2l_NVDLA_BDMA_STATUS_w,
  d2l_NVDLA_BDMA_STATUS_we,
  d2l_NVDLA_BDMA_STATUS_re,
  d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_w,
  d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_we,
  d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_re,
  d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_w,
  d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_we,
  d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_re,
  d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_w,
  d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_we,
  d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_re,
  d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_w,
  d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_we,
  d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_re,
  h2l_NVDLA_BDMA_STATUS_FREE_SLOT_w,
  h2l_NVDLA_BDMA_STATUS_IDLE_w,
  h2l_NVDLA_BDMA_STATUS_GRP0_BUSY_w,
  h2l_NVDLA_BDMA_STATUS_GRP1_BUSY_w,
  h2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_COUNT_w,
  h2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_COUNT_w,
  h2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_COUNT_w,
  h2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_COUNT_w,

  l2d_NVDLA_BDMA_CFG_SRC_ADDR_LOW_r,
  l2d_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_r,
  l2d_NVDLA_BDMA_CFG_DST_ADDR_LOW_r,
  l2d_NVDLA_BDMA_CFG_DST_ADDR_HIGH_r,
  l2d_NVDLA_BDMA_CFG_LINE_r,
  l2d_NVDLA_BDMA_CFG_CMD_r,
  l2d_NVDLA_BDMA_CFG_LINE_REPEAT_r,
  l2d_NVDLA_BDMA_CFG_SRC_LINE_r,
  l2d_NVDLA_BDMA_CFG_DST_LINE_r,
  l2d_NVDLA_BDMA_CFG_SURF_REPEAT_r,
  l2d_NVDLA_BDMA_CFG_SRC_SURF_r,
  l2d_NVDLA_BDMA_CFG_DST_SURF_r,
  l2d_NVDLA_BDMA_CFG_OP_r,
  l2d_NVDLA_BDMA_CFG_LAUNCH0_r,
  l2d_NVDLA_BDMA_CFG_LAUNCH1_r,
  l2d_NVDLA_BDMA_CFG_STATUS_r,
  l2d_NVDLA_BDMA_STATUS_r,
  l2d_NVDLA_BDMA_STATUS_GRP0_READ_STALL_r,
  l2d_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_r,
  l2d_NVDLA_BDMA_STATUS_GRP1_READ_STALL_r,
  l2d_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_r,
  l2h_NVDLA_BDMA_CFG_SRC_ADDR_LOW_V32_r,
  l2h_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_V8_r,
  l2h_NVDLA_BDMA_CFG_DST_ADDR_LOW_V32_r,
  l2h_NVDLA_BDMA_CFG_DST_ADDR_HIGH_V8_r,
  l2h_NVDLA_BDMA_CFG_LINE_SIZE_r,
  l2h_NVDLA_BDMA_CFG_CMD_SRC_RAM_TYPE_r,
  l2h_NVDLA_BDMA_CFG_CMD_DST_RAM_TYPE_r,
  l2h_NVDLA_BDMA_CFG_LINE_REPEAT_NUMBER_r,
  l2h_NVDLA_BDMA_CFG_SRC_LINE_STRIDE_r,
  l2h_NVDLA_BDMA_CFG_DST_LINE_STRIDE_r,
  l2h_NVDLA_BDMA_CFG_SURF_REPEAT_NUMBER_r,
  l2h_NVDLA_BDMA_CFG_SRC_SURF_STRIDE_r,
  l2h_NVDLA_BDMA_CFG_DST_SURF_STRIDE_r,
  l2h_NVDLA_BDMA_CFG_OP_EN_r,
  l2h_NVDLA_BDMA_CFG_LAUNCH0_GRP0_LAUNCH_r,
  l2h_NVDLA_BDMA_CFG_LAUNCH1_GRP1_LAUNCH_r,
  l2h_NVDLA_BDMA_CFG_STATUS_STALL_COUNT_EN_r );

  //------- inputs
  input    clk;
  input    reset;
  input     [31:0] d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_w;
  input    d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_we;
  input    d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_re;
  input     [31:0] d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_w;
  input    d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_we;
  input    d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_re;
  input     [31:0] d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_w;
  input    d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_we;
  input    d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_re;
  input     [31:0] d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_w;
  input    d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_we;
  input    d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_re;
  input     [31:0] d2l_NVDLA_BDMA_CFG_LINE_w;
  input    d2l_NVDLA_BDMA_CFG_LINE_we;
  input    d2l_NVDLA_BDMA_CFG_LINE_re;
  input     [31:0] d2l_NVDLA_BDMA_CFG_CMD_w;
  input    d2l_NVDLA_BDMA_CFG_CMD_we;
  input    d2l_NVDLA_BDMA_CFG_CMD_re;
  input     [31:0] d2l_NVDLA_BDMA_CFG_LINE_REPEAT_w;
  input    d2l_NVDLA_BDMA_CFG_LINE_REPEAT_we;
  input    d2l_NVDLA_BDMA_CFG_LINE_REPEAT_re;
  input     [31:0] d2l_NVDLA_BDMA_CFG_SRC_LINE_w;
  input    d2l_NVDLA_BDMA_CFG_SRC_LINE_we;
  input    d2l_NVDLA_BDMA_CFG_SRC_LINE_re;
  input     [31:0] d2l_NVDLA_BDMA_CFG_DST_LINE_w;
  input    d2l_NVDLA_BDMA_CFG_DST_LINE_we;
  input    d2l_NVDLA_BDMA_CFG_DST_LINE_re;
  input     [31:0] d2l_NVDLA_BDMA_CFG_SURF_REPEAT_w;
  input    d2l_NVDLA_BDMA_CFG_SURF_REPEAT_we;
  input    d2l_NVDLA_BDMA_CFG_SURF_REPEAT_re;
  input     [31:0] d2l_NVDLA_BDMA_CFG_SRC_SURF_w;
  input    d2l_NVDLA_BDMA_CFG_SRC_SURF_we;
  input    d2l_NVDLA_BDMA_CFG_SRC_SURF_re;
  input     [31:0] d2l_NVDLA_BDMA_CFG_DST_SURF_w;
  input    d2l_NVDLA_BDMA_CFG_DST_SURF_we;
  input    d2l_NVDLA_BDMA_CFG_DST_SURF_re;
  input     [31:0] d2l_NVDLA_BDMA_CFG_OP_w;
  input    d2l_NVDLA_BDMA_CFG_OP_we;
  input    d2l_NVDLA_BDMA_CFG_OP_re;
  input     [31:0] d2l_NVDLA_BDMA_CFG_LAUNCH0_w;
  input    d2l_NVDLA_BDMA_CFG_LAUNCH0_we;
  input    d2l_NVDLA_BDMA_CFG_LAUNCH0_re;
  input     [31:0] d2l_NVDLA_BDMA_CFG_LAUNCH1_w;
  input    d2l_NVDLA_BDMA_CFG_LAUNCH1_we;
  input    d2l_NVDLA_BDMA_CFG_LAUNCH1_re;
  input     [31:0] d2l_NVDLA_BDMA_CFG_STATUS_w;
  input    d2l_NVDLA_BDMA_CFG_STATUS_we;
  input    d2l_NVDLA_BDMA_CFG_STATUS_re;
  input     [31:0] d2l_NVDLA_BDMA_STATUS_w;
  input    d2l_NVDLA_BDMA_STATUS_we;
  input    d2l_NVDLA_BDMA_STATUS_re;
  input     [31:0] d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_w;
  input    d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_we;
  input    d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_re;
  input     [31:0] d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_w;
  input    d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_we;
  input    d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_re;
  input     [31:0] d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_w;
  input    d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_we;
  input    d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_re;
  input     [31:0] d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_w;
  input    d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_we;
  input    d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_re;
  input     [7:0] h2l_NVDLA_BDMA_STATUS_FREE_SLOT_w;
  input    h2l_NVDLA_BDMA_STATUS_IDLE_w;
  input    h2l_NVDLA_BDMA_STATUS_GRP0_BUSY_w;
  input    h2l_NVDLA_BDMA_STATUS_GRP1_BUSY_w;
  input     [31:0] h2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_COUNT_w;
  input     [31:0] h2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_COUNT_w;
  input     [31:0] h2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_COUNT_w;
  input     [31:0] h2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_COUNT_w;

  //------- outputs
  output     [31:0] l2d_NVDLA_BDMA_CFG_SRC_ADDR_LOW_r;
  output     [31:0] l2d_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_r;
  output     [31:0] l2d_NVDLA_BDMA_CFG_DST_ADDR_LOW_r;
  output     [31:0] l2d_NVDLA_BDMA_CFG_DST_ADDR_HIGH_r;
  output     [31:0] l2d_NVDLA_BDMA_CFG_LINE_r;
  output     [31:0] l2d_NVDLA_BDMA_CFG_CMD_r;
  output     [31:0] l2d_NVDLA_BDMA_CFG_LINE_REPEAT_r;
  output     [31:0] l2d_NVDLA_BDMA_CFG_SRC_LINE_r;
  output     [31:0] l2d_NVDLA_BDMA_CFG_DST_LINE_r;
  output     [31:0] l2d_NVDLA_BDMA_CFG_SURF_REPEAT_r;
  output     [31:0] l2d_NVDLA_BDMA_CFG_SRC_SURF_r;
  output     [31:0] l2d_NVDLA_BDMA_CFG_DST_SURF_r;
  output     [31:0] l2d_NVDLA_BDMA_CFG_OP_r;
  output     [31:0] l2d_NVDLA_BDMA_CFG_LAUNCH0_r;
  output     [31:0] l2d_NVDLA_BDMA_CFG_LAUNCH1_r;
  output     [31:0] l2d_NVDLA_BDMA_CFG_STATUS_r;
  output     [31:0] l2d_NVDLA_BDMA_STATUS_r;
  output     [31:0] l2d_NVDLA_BDMA_STATUS_GRP0_READ_STALL_r;
  output     [31:0] l2d_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_r;
  output     [31:0] l2d_NVDLA_BDMA_STATUS_GRP1_READ_STALL_r;
  output     [31:0] l2d_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_r;
  output     [26:0] l2h_NVDLA_BDMA_CFG_SRC_ADDR_LOW_V32_r;
  output     [31:0] l2h_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_V8_r;
  output     [26:0] l2h_NVDLA_BDMA_CFG_DST_ADDR_LOW_V32_r;
  output     [31:0] l2h_NVDLA_BDMA_CFG_DST_ADDR_HIGH_V8_r;
  output     [12:0] l2h_NVDLA_BDMA_CFG_LINE_SIZE_r;
  output    l2h_NVDLA_BDMA_CFG_CMD_SRC_RAM_TYPE_r;
  output    l2h_NVDLA_BDMA_CFG_CMD_DST_RAM_TYPE_r;
  output     [23:0] l2h_NVDLA_BDMA_CFG_LINE_REPEAT_NUMBER_r;
  output     [26:0] l2h_NVDLA_BDMA_CFG_SRC_LINE_STRIDE_r;
  output     [26:0] l2h_NVDLA_BDMA_CFG_DST_LINE_STRIDE_r;
  output     [23:0] l2h_NVDLA_BDMA_CFG_SURF_REPEAT_NUMBER_r;
  output     [26:0] l2h_NVDLA_BDMA_CFG_SRC_SURF_STRIDE_r;
  output     [26:0] l2h_NVDLA_BDMA_CFG_DST_SURF_STRIDE_r;
  output    l2h_NVDLA_BDMA_CFG_OP_EN_r;
  output    l2h_NVDLA_BDMA_CFG_LAUNCH0_GRP0_LAUNCH_r;
  output    l2h_NVDLA_BDMA_CFG_LAUNCH1_GRP1_LAUNCH_r;
  output    l2h_NVDLA_BDMA_CFG_STATUS_STALL_COUNT_EN_r;


  //------- reg defines
  reg   [26:0] rg_NVDLA_BDMA_CFG_SRC_ADDR_LOW_V32;
  reg   [26:0] reg_NVDLA_BDMA_CFG_SRC_ADDR_LOW_V32_next;
  reg   [26:0] l2h_NVDLA_BDMA_CFG_SRC_ADDR_LOW_V32_r;
  reg   [31:0] l2d_NVDLA_BDMA_CFG_SRC_ADDR_LOW_r;
  reg   [31:0] rg_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_V8;
  reg   [31:0] reg_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_V8_next;
  reg   [31:0] l2h_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_V8_r;
  reg   [31:0] l2d_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_r;
  reg   [26:0] rg_NVDLA_BDMA_CFG_DST_ADDR_LOW_V32;
  reg   [26:0] reg_NVDLA_BDMA_CFG_DST_ADDR_LOW_V32_next;
  reg   [26:0] l2h_NVDLA_BDMA_CFG_DST_ADDR_LOW_V32_r;
  reg   [31:0] l2d_NVDLA_BDMA_CFG_DST_ADDR_LOW_r;
  reg   [31:0] rg_NVDLA_BDMA_CFG_DST_ADDR_HIGH_V8;
  reg   [31:0] reg_NVDLA_BDMA_CFG_DST_ADDR_HIGH_V8_next;
  reg   [31:0] l2h_NVDLA_BDMA_CFG_DST_ADDR_HIGH_V8_r;
  reg   [31:0] l2d_NVDLA_BDMA_CFG_DST_ADDR_HIGH_r;
  reg   [12:0] rg_NVDLA_BDMA_CFG_LINE_SIZE;
  reg   [12:0] reg_NVDLA_BDMA_CFG_LINE_SIZE_next;
  reg   [12:0] l2h_NVDLA_BDMA_CFG_LINE_SIZE_r;
  reg   [31:0] l2d_NVDLA_BDMA_CFG_LINE_r;
  reg  rg_NVDLA_BDMA_CFG_CMD_SRC_RAM_TYPE;
  reg  reg_NVDLA_BDMA_CFG_CMD_SRC_RAM_TYPE_next;
  reg  l2h_NVDLA_BDMA_CFG_CMD_SRC_RAM_TYPE_r;
  reg  rg_NVDLA_BDMA_CFG_CMD_DST_RAM_TYPE;
  reg  reg_NVDLA_BDMA_CFG_CMD_DST_RAM_TYPE_next;
  reg  l2h_NVDLA_BDMA_CFG_CMD_DST_RAM_TYPE_r;
  reg   [31:0] l2d_NVDLA_BDMA_CFG_CMD_r;
  reg   [23:0] rg_NVDLA_BDMA_CFG_LINE_REPEAT_NUMBER;
  reg   [23:0] reg_NVDLA_BDMA_CFG_LINE_REPEAT_NUMBER_next;
  reg   [23:0] l2h_NVDLA_BDMA_CFG_LINE_REPEAT_NUMBER_r;
  reg   [31:0] l2d_NVDLA_BDMA_CFG_LINE_REPEAT_r;
  reg   [26:0] rg_NVDLA_BDMA_CFG_SRC_LINE_STRIDE;
  reg   [26:0] reg_NVDLA_BDMA_CFG_SRC_LINE_STRIDE_next;
  reg   [26:0] l2h_NVDLA_BDMA_CFG_SRC_LINE_STRIDE_r;
  reg   [31:0] l2d_NVDLA_BDMA_CFG_SRC_LINE_r;
  reg   [26:0] rg_NVDLA_BDMA_CFG_DST_LINE_STRIDE;
  reg   [26:0] reg_NVDLA_BDMA_CFG_DST_LINE_STRIDE_next;
  reg   [26:0] l2h_NVDLA_BDMA_CFG_DST_LINE_STRIDE_r;
  reg   [31:0] l2d_NVDLA_BDMA_CFG_DST_LINE_r;
  reg   [23:0] rg_NVDLA_BDMA_CFG_SURF_REPEAT_NUMBER;
  reg   [23:0] reg_NVDLA_BDMA_CFG_SURF_REPEAT_NUMBER_next;
  reg   [23:0] l2h_NVDLA_BDMA_CFG_SURF_REPEAT_NUMBER_r;
  reg   [31:0] l2d_NVDLA_BDMA_CFG_SURF_REPEAT_r;
  reg   [26:0] rg_NVDLA_BDMA_CFG_SRC_SURF_STRIDE;
  reg   [26:0] reg_NVDLA_BDMA_CFG_SRC_SURF_STRIDE_next;
  reg   [26:0] l2h_NVDLA_BDMA_CFG_SRC_SURF_STRIDE_r;
  reg   [31:0] l2d_NVDLA_BDMA_CFG_SRC_SURF_r;
  reg   [26:0] rg_NVDLA_BDMA_CFG_DST_SURF_STRIDE;
  reg   [26:0] reg_NVDLA_BDMA_CFG_DST_SURF_STRIDE_next;
  reg   [26:0] l2h_NVDLA_BDMA_CFG_DST_SURF_STRIDE_r;
  reg   [31:0] l2d_NVDLA_BDMA_CFG_DST_SURF_r;
  reg  rg_NVDLA_BDMA_CFG_OP_EN;
  reg  reg_NVDLA_BDMA_CFG_OP_EN_next;
  reg  l2h_NVDLA_BDMA_CFG_OP_EN_r;
  reg   [31:0] l2d_NVDLA_BDMA_CFG_OP_r;
  reg  rg_NVDLA_BDMA_CFG_LAUNCH0_GRP0_LAUNCH;
  reg  reg_NVDLA_BDMA_CFG_LAUNCH0_GRP0_LAUNCH_next;
  reg  l2h_NVDLA_BDMA_CFG_LAUNCH0_GRP0_LAUNCH_r;
  reg   [31:0] l2d_NVDLA_BDMA_CFG_LAUNCH0_r;
  reg  rg_NVDLA_BDMA_CFG_LAUNCH1_GRP1_LAUNCH;
  reg  reg_NVDLA_BDMA_CFG_LAUNCH1_GRP1_LAUNCH_next;
  reg  l2h_NVDLA_BDMA_CFG_LAUNCH1_GRP1_LAUNCH_r;
  reg   [31:0] l2d_NVDLA_BDMA_CFG_LAUNCH1_r;
  reg  rg_NVDLA_BDMA_CFG_STATUS_STALL_COUNT_EN;
  reg  reg_NVDLA_BDMA_CFG_STATUS_STALL_COUNT_EN_next;
  reg  l2h_NVDLA_BDMA_CFG_STATUS_STALL_COUNT_EN_r;
  reg   [31:0] l2d_NVDLA_BDMA_CFG_STATUS_r;
  reg   [7:0] rg_NVDLA_BDMA_STATUS_FREE_SLOT;
  reg  rg_NVDLA_BDMA_STATUS_IDLE;
  reg  rg_NVDLA_BDMA_STATUS_GRP0_BUSY;
  reg  rg_NVDLA_BDMA_STATUS_GRP1_BUSY;
  reg   [31:0] l2d_NVDLA_BDMA_STATUS_r;
  reg   [31:0] rg_NVDLA_BDMA_STATUS_GRP0_READ_STALL_COUNT;
  reg   [31:0] l2d_NVDLA_BDMA_STATUS_GRP0_READ_STALL_r;
  reg   [31:0] rg_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_COUNT;
  reg   [31:0] l2d_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_r;
  reg   [31:0] rg_NVDLA_BDMA_STATUS_GRP1_READ_STALL_COUNT;
  reg   [31:0] l2d_NVDLA_BDMA_STATUS_GRP1_READ_STALL_r;
  reg   [31:0] rg_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_COUNT;
  reg   [31:0] l2d_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_r;
  
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_LINE_REPEAT
  always @ (*) begin
    reg_NVDLA_BDMA_CFG_LINE_REPEAT_NUMBER_next = rg_NVDLA_BDMA_CFG_LINE_REPEAT_NUMBER;
    l2h_NVDLA_BDMA_CFG_LINE_REPEAT_NUMBER_r = rg_NVDLA_BDMA_CFG_LINE_REPEAT_NUMBER;
    if (d2l_NVDLA_BDMA_CFG_LINE_REPEAT_we) reg_NVDLA_BDMA_CFG_LINE_REPEAT_NUMBER_next = d2l_NVDLA_BDMA_CFG_LINE_REPEAT_w [23:0] ;
  end
  
  //------- reg assigns for NVDLA_BDMA_CFG_LINE_REPEAT
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_BDMA_CFG_LINE_REPEAT_NUMBER <= #1 24'h0;
    end
    else begin
      rg_NVDLA_BDMA_CFG_LINE_REPEAT_NUMBER <= #1  reg_NVDLA_BDMA_CFG_LINE_REPEAT_NUMBER_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_LAUNCH1 (pio read data)
  always @ (*) begin
    l2d_NVDLA_BDMA_CFG_LAUNCH1_r = 32'b0;
    l2d_NVDLA_BDMA_CFG_LAUNCH1_r [0]  = rg_NVDLA_BDMA_CFG_LAUNCH1_GRP1_LAUNCH;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_STATUS_GRP0_WRITE_STALL (pio read data)
  always @ (*) begin
    l2d_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_r = rg_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_COUNT;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_SRC_ADDR_HIGH
  always @ (*) begin
    reg_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_V8_next = rg_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_V8;
    l2h_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_V8_r = rg_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_V8;
    if (d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_we) reg_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_V8_next = d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_w;
  end
  
  //------- reg assigns for NVDLA_BDMA_CFG_SRC_ADDR_HIGH
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_V8 <= #1 32'h0;
    end
    else begin
      rg_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_V8 <= #1  reg_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_V8_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_STATUS_GRP1_READ_STALL
  always @ (*) begin
    rg_NVDLA_BDMA_STATUS_GRP1_READ_STALL_COUNT =  h2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_COUNT_w;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_SRC_LINE (pio read data)
  always @ (*) begin
    l2d_NVDLA_BDMA_CFG_SRC_LINE_r = 32'b0;
    l2d_NVDLA_BDMA_CFG_SRC_LINE_r [31:5]  = rg_NVDLA_BDMA_CFG_SRC_LINE_STRIDE;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_STATUS_GRP1_WRITE_STALL
  always @ (*) begin
    rg_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_COUNT =  h2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_COUNT_w;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_DST_LINE (pio read data)
  always @ (*) begin
    l2d_NVDLA_BDMA_CFG_DST_LINE_r = 32'b0;
    l2d_NVDLA_BDMA_CFG_DST_LINE_r [31:5]  = rg_NVDLA_BDMA_CFG_DST_LINE_STRIDE;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_DST_SURF
  always @ (*) begin
    reg_NVDLA_BDMA_CFG_DST_SURF_STRIDE_next = rg_NVDLA_BDMA_CFG_DST_SURF_STRIDE;
    l2h_NVDLA_BDMA_CFG_DST_SURF_STRIDE_r = rg_NVDLA_BDMA_CFG_DST_SURF_STRIDE;
    if (d2l_NVDLA_BDMA_CFG_DST_SURF_we) reg_NVDLA_BDMA_CFG_DST_SURF_STRIDE_next = d2l_NVDLA_BDMA_CFG_DST_SURF_w [31:5] ;
  end
  
  //------- reg assigns for NVDLA_BDMA_CFG_DST_SURF
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_BDMA_CFG_DST_SURF_STRIDE <= #1 27'h0;
    end
    else begin
      rg_NVDLA_BDMA_CFG_DST_SURF_STRIDE <= #1  reg_NVDLA_BDMA_CFG_DST_SURF_STRIDE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_DST_ADDR_HIGH
  always @ (*) begin
    reg_NVDLA_BDMA_CFG_DST_ADDR_HIGH_V8_next = rg_NVDLA_BDMA_CFG_DST_ADDR_HIGH_V8;
    l2h_NVDLA_BDMA_CFG_DST_ADDR_HIGH_V8_r = rg_NVDLA_BDMA_CFG_DST_ADDR_HIGH_V8;
    if (d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_we) reg_NVDLA_BDMA_CFG_DST_ADDR_HIGH_V8_next = d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_w;
  end
  
  //------- reg assigns for NVDLA_BDMA_CFG_DST_ADDR_HIGH
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_BDMA_CFG_DST_ADDR_HIGH_V8 <= #1 32'h0;
    end
    else begin
      rg_NVDLA_BDMA_CFG_DST_ADDR_HIGH_V8 <= #1  reg_NVDLA_BDMA_CFG_DST_ADDR_HIGH_V8_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_SURF_REPEAT (pio read data)
  always @ (*) begin
    l2d_NVDLA_BDMA_CFG_SURF_REPEAT_r = 32'b0;
    l2d_NVDLA_BDMA_CFG_SURF_REPEAT_r [23:0]  = rg_NVDLA_BDMA_CFG_SURF_REPEAT_NUMBER;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_STATUS_GRP0_WRITE_STALL
  always @ (*) begin
    rg_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_COUNT =  h2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_COUNT_w;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_SRC_SURF (pio read data)
  always @ (*) begin
    l2d_NVDLA_BDMA_CFG_SRC_SURF_r = 32'b0;
    l2d_NVDLA_BDMA_CFG_SRC_SURF_r [31:5]  = rg_NVDLA_BDMA_CFG_SRC_SURF_STRIDE;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_STATUS (pio read data)
  always @ (*) begin
    l2d_NVDLA_BDMA_CFG_STATUS_r = 32'b0;
    l2d_NVDLA_BDMA_CFG_STATUS_r [0]  = rg_NVDLA_BDMA_CFG_STATUS_STALL_COUNT_EN;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_DST_ADDR_HIGH (pio read data)
  always @ (*) begin
    l2d_NVDLA_BDMA_CFG_DST_ADDR_HIGH_r = rg_NVDLA_BDMA_CFG_DST_ADDR_HIGH_V8;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_SRC_SURF
  always @ (*) begin
    reg_NVDLA_BDMA_CFG_SRC_SURF_STRIDE_next = rg_NVDLA_BDMA_CFG_SRC_SURF_STRIDE;
    l2h_NVDLA_BDMA_CFG_SRC_SURF_STRIDE_r = rg_NVDLA_BDMA_CFG_SRC_SURF_STRIDE;
    if (d2l_NVDLA_BDMA_CFG_SRC_SURF_we) reg_NVDLA_BDMA_CFG_SRC_SURF_STRIDE_next = d2l_NVDLA_BDMA_CFG_SRC_SURF_w [31:5] ;
  end
  
  //------- reg assigns for NVDLA_BDMA_CFG_SRC_SURF
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_BDMA_CFG_SRC_SURF_STRIDE <= #1 27'h0;
    end
    else begin
      rg_NVDLA_BDMA_CFG_SRC_SURF_STRIDE <= #1  reg_NVDLA_BDMA_CFG_SRC_SURF_STRIDE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_STATUS_GRP1_WRITE_STALL (pio read data)
  always @ (*) begin
    l2d_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_r = rg_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_COUNT;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_STATUS_GRP0_READ_STALL (pio read data)
  always @ (*) begin
    l2d_NVDLA_BDMA_STATUS_GRP0_READ_STALL_r = rg_NVDLA_BDMA_STATUS_GRP0_READ_STALL_COUNT;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_STATUS
  always @ (*) begin
    reg_NVDLA_BDMA_CFG_STATUS_STALL_COUNT_EN_next = rg_NVDLA_BDMA_CFG_STATUS_STALL_COUNT_EN;
    l2h_NVDLA_BDMA_CFG_STATUS_STALL_COUNT_EN_r = rg_NVDLA_BDMA_CFG_STATUS_STALL_COUNT_EN;
    if (d2l_NVDLA_BDMA_CFG_STATUS_we) reg_NVDLA_BDMA_CFG_STATUS_STALL_COUNT_EN_next = d2l_NVDLA_BDMA_CFG_STATUS_w [0] ;
  end
  
  //------- reg assigns for NVDLA_BDMA_CFG_STATUS
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_BDMA_CFG_STATUS_STALL_COUNT_EN <= #1 1'h0;
    end
    else begin
      rg_NVDLA_BDMA_CFG_STATUS_STALL_COUNT_EN <= #1  reg_NVDLA_BDMA_CFG_STATUS_STALL_COUNT_EN_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_STATUS_GRP0_READ_STALL
  always @ (*) begin
    rg_NVDLA_BDMA_STATUS_GRP0_READ_STALL_COUNT =  h2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_COUNT_w;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_LINE
  always @ (*) begin
    reg_NVDLA_BDMA_CFG_LINE_SIZE_next = rg_NVDLA_BDMA_CFG_LINE_SIZE;
    l2h_NVDLA_BDMA_CFG_LINE_SIZE_r = rg_NVDLA_BDMA_CFG_LINE_SIZE;
    if (d2l_NVDLA_BDMA_CFG_LINE_we) reg_NVDLA_BDMA_CFG_LINE_SIZE_next = d2l_NVDLA_BDMA_CFG_LINE_w [12:0] ;
  end
  
  //------- reg assigns for NVDLA_BDMA_CFG_LINE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_BDMA_CFG_LINE_SIZE <= #1 13'h0;
    end
    else begin
      rg_NVDLA_BDMA_CFG_LINE_SIZE <= #1  reg_NVDLA_BDMA_CFG_LINE_SIZE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_LINE_REPEAT (pio read data)
  always @ (*) begin
    l2d_NVDLA_BDMA_CFG_LINE_REPEAT_r = 32'b0;
    l2d_NVDLA_BDMA_CFG_LINE_REPEAT_r [23:0]  = rg_NVDLA_BDMA_CFG_LINE_REPEAT_NUMBER;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_SURF_REPEAT
  always @ (*) begin
    reg_NVDLA_BDMA_CFG_SURF_REPEAT_NUMBER_next = rg_NVDLA_BDMA_CFG_SURF_REPEAT_NUMBER;
    l2h_NVDLA_BDMA_CFG_SURF_REPEAT_NUMBER_r = rg_NVDLA_BDMA_CFG_SURF_REPEAT_NUMBER;
    if (d2l_NVDLA_BDMA_CFG_SURF_REPEAT_we) reg_NVDLA_BDMA_CFG_SURF_REPEAT_NUMBER_next = d2l_NVDLA_BDMA_CFG_SURF_REPEAT_w [23:0] ;
  end
  
  //------- reg assigns for NVDLA_BDMA_CFG_SURF_REPEAT
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_BDMA_CFG_SURF_REPEAT_NUMBER <= #1 24'h0;
    end
    else begin
      rg_NVDLA_BDMA_CFG_SURF_REPEAT_NUMBER <= #1  reg_NVDLA_BDMA_CFG_SURF_REPEAT_NUMBER_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_SRC_ADDR_LOW
  always @ (*) begin
    reg_NVDLA_BDMA_CFG_SRC_ADDR_LOW_V32_next = rg_NVDLA_BDMA_CFG_SRC_ADDR_LOW_V32;
    l2h_NVDLA_BDMA_CFG_SRC_ADDR_LOW_V32_r = rg_NVDLA_BDMA_CFG_SRC_ADDR_LOW_V32;
    if (d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_we) reg_NVDLA_BDMA_CFG_SRC_ADDR_LOW_V32_next = d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_w [31:5] ;
  end
  
  //------- reg assigns for NVDLA_BDMA_CFG_SRC_ADDR_LOW
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_BDMA_CFG_SRC_ADDR_LOW_V32 <= #1 27'h0;
    end
    else begin
      rg_NVDLA_BDMA_CFG_SRC_ADDR_LOW_V32 <= #1  reg_NVDLA_BDMA_CFG_SRC_ADDR_LOW_V32_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_LAUNCH0
  always @ (*) begin
    reg_NVDLA_BDMA_CFG_LAUNCH0_GRP0_LAUNCH_next = rg_NVDLA_BDMA_CFG_LAUNCH0_GRP0_LAUNCH;
    l2h_NVDLA_BDMA_CFG_LAUNCH0_GRP0_LAUNCH_r = rg_NVDLA_BDMA_CFG_LAUNCH0_GRP0_LAUNCH;
    if (d2l_NVDLA_BDMA_CFG_LAUNCH0_we) reg_NVDLA_BDMA_CFG_LAUNCH0_GRP0_LAUNCH_next = d2l_NVDLA_BDMA_CFG_LAUNCH0_w [0] ;
  end
  
  //------- reg assigns for NVDLA_BDMA_CFG_LAUNCH0
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_BDMA_CFG_LAUNCH0_GRP0_LAUNCH <= #1 1'h0;
    end
    else begin
      rg_NVDLA_BDMA_CFG_LAUNCH0_GRP0_LAUNCH <= #1  reg_NVDLA_BDMA_CFG_LAUNCH0_GRP0_LAUNCH_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_LINE (pio read data)
  always @ (*) begin
    l2d_NVDLA_BDMA_CFG_LINE_r = 32'b0;
    l2d_NVDLA_BDMA_CFG_LINE_r [12:0]  = rg_NVDLA_BDMA_CFG_LINE_SIZE;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_LAUNCH1
  always @ (*) begin
    reg_NVDLA_BDMA_CFG_LAUNCH1_GRP1_LAUNCH_next = rg_NVDLA_BDMA_CFG_LAUNCH1_GRP1_LAUNCH;
    l2h_NVDLA_BDMA_CFG_LAUNCH1_GRP1_LAUNCH_r = rg_NVDLA_BDMA_CFG_LAUNCH1_GRP1_LAUNCH;
    if (d2l_NVDLA_BDMA_CFG_LAUNCH1_we) reg_NVDLA_BDMA_CFG_LAUNCH1_GRP1_LAUNCH_next = d2l_NVDLA_BDMA_CFG_LAUNCH1_w [0] ;
  end
  
  //------- reg assigns for NVDLA_BDMA_CFG_LAUNCH1
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_BDMA_CFG_LAUNCH1_GRP1_LAUNCH <= #1 1'h0;
    end
    else begin
      rg_NVDLA_BDMA_CFG_LAUNCH1_GRP1_LAUNCH <= #1  reg_NVDLA_BDMA_CFG_LAUNCH1_GRP1_LAUNCH_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_LAUNCH0 (pio read data)
  always @ (*) begin
    l2d_NVDLA_BDMA_CFG_LAUNCH0_r = 32'b0;
    l2d_NVDLA_BDMA_CFG_LAUNCH0_r [0]  = rg_NVDLA_BDMA_CFG_LAUNCH0_GRP0_LAUNCH;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_DST_LINE
  always @ (*) begin
    reg_NVDLA_BDMA_CFG_DST_LINE_STRIDE_next = rg_NVDLA_BDMA_CFG_DST_LINE_STRIDE;
    l2h_NVDLA_BDMA_CFG_DST_LINE_STRIDE_r = rg_NVDLA_BDMA_CFG_DST_LINE_STRIDE;
    if (d2l_NVDLA_BDMA_CFG_DST_LINE_we) reg_NVDLA_BDMA_CFG_DST_LINE_STRIDE_next = d2l_NVDLA_BDMA_CFG_DST_LINE_w [31:5] ;
  end
  
  //------- reg assigns for NVDLA_BDMA_CFG_DST_LINE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_BDMA_CFG_DST_LINE_STRIDE <= #1 27'h0;
    end
    else begin
      rg_NVDLA_BDMA_CFG_DST_LINE_STRIDE <= #1  reg_NVDLA_BDMA_CFG_DST_LINE_STRIDE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_STATUS
  always @ (*) begin
    rg_NVDLA_BDMA_STATUS_FREE_SLOT =  h2l_NVDLA_BDMA_STATUS_FREE_SLOT_w;
    rg_NVDLA_BDMA_STATUS_IDLE =  h2l_NVDLA_BDMA_STATUS_IDLE_w;
    rg_NVDLA_BDMA_STATUS_GRP0_BUSY =  h2l_NVDLA_BDMA_STATUS_GRP0_BUSY_w;
    rg_NVDLA_BDMA_STATUS_GRP1_BUSY =  h2l_NVDLA_BDMA_STATUS_GRP1_BUSY_w;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_DST_ADDR_LOW
  always @ (*) begin
    reg_NVDLA_BDMA_CFG_DST_ADDR_LOW_V32_next = rg_NVDLA_BDMA_CFG_DST_ADDR_LOW_V32;
    l2h_NVDLA_BDMA_CFG_DST_ADDR_LOW_V32_r = rg_NVDLA_BDMA_CFG_DST_ADDR_LOW_V32;
    if (d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_we) reg_NVDLA_BDMA_CFG_DST_ADDR_LOW_V32_next = d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_w [31:5] ;
  end
  
  //------- reg assigns for NVDLA_BDMA_CFG_DST_ADDR_LOW
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_BDMA_CFG_DST_ADDR_LOW_V32 <= #1 27'h0;
    end
    else begin
      rg_NVDLA_BDMA_CFG_DST_ADDR_LOW_V32 <= #1  reg_NVDLA_BDMA_CFG_DST_ADDR_LOW_V32_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_DST_SURF (pio read data)
  always @ (*) begin
    l2d_NVDLA_BDMA_CFG_DST_SURF_r = 32'b0;
    l2d_NVDLA_BDMA_CFG_DST_SURF_r [31:5]  = rg_NVDLA_BDMA_CFG_DST_SURF_STRIDE;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_SRC_ADDR_HIGH (pio read data)
  always @ (*) begin
    l2d_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_r = rg_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_V8;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_CMD
  always @ (*) begin
    reg_NVDLA_BDMA_CFG_CMD_SRC_RAM_TYPE_next = rg_NVDLA_BDMA_CFG_CMD_SRC_RAM_TYPE;
    l2h_NVDLA_BDMA_CFG_CMD_SRC_RAM_TYPE_r = rg_NVDLA_BDMA_CFG_CMD_SRC_RAM_TYPE;
    reg_NVDLA_BDMA_CFG_CMD_DST_RAM_TYPE_next = rg_NVDLA_BDMA_CFG_CMD_DST_RAM_TYPE;
    l2h_NVDLA_BDMA_CFG_CMD_DST_RAM_TYPE_r = rg_NVDLA_BDMA_CFG_CMD_DST_RAM_TYPE;
    if (d2l_NVDLA_BDMA_CFG_CMD_we) reg_NVDLA_BDMA_CFG_CMD_SRC_RAM_TYPE_next = d2l_NVDLA_BDMA_CFG_CMD_w [0] ;
    if (d2l_NVDLA_BDMA_CFG_CMD_we) reg_NVDLA_BDMA_CFG_CMD_DST_RAM_TYPE_next = d2l_NVDLA_BDMA_CFG_CMD_w [1] ;
  end
  
  //------- reg assigns for NVDLA_BDMA_CFG_CMD
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_BDMA_CFG_CMD_SRC_RAM_TYPE <= #1 1'h0;
      rg_NVDLA_BDMA_CFG_CMD_DST_RAM_TYPE <= #1 1'h0;
    end
    else begin
      rg_NVDLA_BDMA_CFG_CMD_SRC_RAM_TYPE <= #1  reg_NVDLA_BDMA_CFG_CMD_SRC_RAM_TYPE_next;
      rg_NVDLA_BDMA_CFG_CMD_DST_RAM_TYPE <= #1  reg_NVDLA_BDMA_CFG_CMD_DST_RAM_TYPE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_SRC_LINE
  always @ (*) begin
    reg_NVDLA_BDMA_CFG_SRC_LINE_STRIDE_next = rg_NVDLA_BDMA_CFG_SRC_LINE_STRIDE;
    l2h_NVDLA_BDMA_CFG_SRC_LINE_STRIDE_r = rg_NVDLA_BDMA_CFG_SRC_LINE_STRIDE;
    if (d2l_NVDLA_BDMA_CFG_SRC_LINE_we) reg_NVDLA_BDMA_CFG_SRC_LINE_STRIDE_next = d2l_NVDLA_BDMA_CFG_SRC_LINE_w [31:5] ;
  end
  
  //------- reg assigns for NVDLA_BDMA_CFG_SRC_LINE
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_BDMA_CFG_SRC_LINE_STRIDE <= #1 27'h0;
    end
    else begin
      rg_NVDLA_BDMA_CFG_SRC_LINE_STRIDE <= #1  reg_NVDLA_BDMA_CFG_SRC_LINE_STRIDE_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_OP (pio read data)
  always @ (*) begin
    l2d_NVDLA_BDMA_CFG_OP_r = 32'b0;
    l2d_NVDLA_BDMA_CFG_OP_r [0]  = rg_NVDLA_BDMA_CFG_OP_EN;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_OP
  always @ (*) begin
    reg_NVDLA_BDMA_CFG_OP_EN_next = rg_NVDLA_BDMA_CFG_OP_EN;
    l2h_NVDLA_BDMA_CFG_OP_EN_r = rg_NVDLA_BDMA_CFG_OP_EN;
    if (d2l_NVDLA_BDMA_CFG_OP_we) reg_NVDLA_BDMA_CFG_OP_EN_next = d2l_NVDLA_BDMA_CFG_OP_w [0] ;
  end
  
  //------- reg assigns for NVDLA_BDMA_CFG_OP
  always @ (posedge clk) begin
    if (reset) begin
      rg_NVDLA_BDMA_CFG_OP_EN <= #1 1'h0;
    end
    else begin
      rg_NVDLA_BDMA_CFG_OP_EN <= #1  reg_NVDLA_BDMA_CFG_OP_EN_next;
    end
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_STATUS (pio read data)
  always @ (*) begin
    l2d_NVDLA_BDMA_STATUS_r = 32'b0;
    l2d_NVDLA_BDMA_STATUS_r [7:0]  = rg_NVDLA_BDMA_STATUS_FREE_SLOT;
    l2d_NVDLA_BDMA_STATUS_r [8]  = rg_NVDLA_BDMA_STATUS_IDLE;
    l2d_NVDLA_BDMA_STATUS_r [9]  = rg_NVDLA_BDMA_STATUS_GRP0_BUSY;
    l2d_NVDLA_BDMA_STATUS_r [10]  = rg_NVDLA_BDMA_STATUS_GRP1_BUSY;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_STATUS_GRP1_READ_STALL (pio read data)
  always @ (*) begin
    l2d_NVDLA_BDMA_STATUS_GRP1_READ_STALL_r = rg_NVDLA_BDMA_STATUS_GRP1_READ_STALL_COUNT;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_CMD (pio read data)
  always @ (*) begin
    l2d_NVDLA_BDMA_CFG_CMD_r = 32'b0;
    l2d_NVDLA_BDMA_CFG_CMD_r [0]  = rg_NVDLA_BDMA_CFG_CMD_SRC_RAM_TYPE;
    l2d_NVDLA_BDMA_CFG_CMD_r [1]  = rg_NVDLA_BDMA_CFG_CMD_DST_RAM_TYPE;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_DST_ADDR_LOW (pio read data)
  always @ (*) begin
    l2d_NVDLA_BDMA_CFG_DST_ADDR_LOW_r = 32'b0;
    l2d_NVDLA_BDMA_CFG_DST_ADDR_LOW_r [31:5]  = rg_NVDLA_BDMA_CFG_DST_ADDR_LOW_V32;
  end
  
  //------- combinatorial assigns for NVDLA_BDMA_CFG_SRC_ADDR_LOW (pio read data)
  always @ (*) begin
    l2d_NVDLA_BDMA_CFG_SRC_ADDR_LOW_r = 32'b0;
    l2d_NVDLA_BDMA_CFG_SRC_ADDR_LOW_r [31:5]  = rg_NVDLA_BDMA_CFG_SRC_ADDR_LOW_V32;
  end
  
endmodule

//
//---------- module addrmap_NVDLA_jrdl_decode
//
module addrmap_NVDLA_jrdl_decode
(
  clk,
  reset,
  leaf_dec_wr_data,
  leaf_dec_addr,
  leaf_dec_block_sel,
  leaf_dec_valid,
  leaf_dec_wr_dvld,
  leaf_dec_cycle,
  leaf_dec_wr_width,
  l2d_NVDLA_BDMA_CFG_SRC_ADDR_LOW_r,
  l2d_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_r,
  l2d_NVDLA_BDMA_CFG_DST_ADDR_LOW_r,
  l2d_NVDLA_BDMA_CFG_DST_ADDR_HIGH_r,
  l2d_NVDLA_BDMA_CFG_LINE_r,
  l2d_NVDLA_BDMA_CFG_CMD_r,
  l2d_NVDLA_BDMA_CFG_LINE_REPEAT_r,
  l2d_NVDLA_BDMA_CFG_SRC_LINE_r,
  l2d_NVDLA_BDMA_CFG_DST_LINE_r,
  l2d_NVDLA_BDMA_CFG_SURF_REPEAT_r,
  l2d_NVDLA_BDMA_CFG_SRC_SURF_r,
  l2d_NVDLA_BDMA_CFG_DST_SURF_r,
  l2d_NVDLA_BDMA_CFG_OP_r,
  l2d_NVDLA_BDMA_CFG_LAUNCH0_r,
  l2d_NVDLA_BDMA_CFG_LAUNCH1_r,
  l2d_NVDLA_BDMA_CFG_STATUS_r,
  l2d_NVDLA_BDMA_STATUS_r,
  l2d_NVDLA_BDMA_STATUS_GRP0_READ_STALL_r,
  l2d_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_r,
  l2d_NVDLA_BDMA_STATUS_GRP1_READ_STALL_r,
  l2d_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_r,

  dec_leaf_rd_data,
  dec_leaf_ack,
  dec_leaf_nack,
  dec_leaf_accept,
  dec_leaf_reject,
  dec_leaf_retry_atomic,
  dec_leaf_data_width,
  d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_w,
  d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_we,
  d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_re,
  d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_w,
  d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_we,
  d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_re,
  d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_w,
  d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_we,
  d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_re,
  d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_w,
  d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_we,
  d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_re,
  d2l_NVDLA_BDMA_CFG_LINE_w,
  d2l_NVDLA_BDMA_CFG_LINE_we,
  d2l_NVDLA_BDMA_CFG_LINE_re,
  d2l_NVDLA_BDMA_CFG_CMD_w,
  d2l_NVDLA_BDMA_CFG_CMD_we,
  d2l_NVDLA_BDMA_CFG_CMD_re,
  d2l_NVDLA_BDMA_CFG_LINE_REPEAT_w,
  d2l_NVDLA_BDMA_CFG_LINE_REPEAT_we,
  d2l_NVDLA_BDMA_CFG_LINE_REPEAT_re,
  d2l_NVDLA_BDMA_CFG_SRC_LINE_w,
  d2l_NVDLA_BDMA_CFG_SRC_LINE_we,
  d2l_NVDLA_BDMA_CFG_SRC_LINE_re,
  d2l_NVDLA_BDMA_CFG_DST_LINE_w,
  d2l_NVDLA_BDMA_CFG_DST_LINE_we,
  d2l_NVDLA_BDMA_CFG_DST_LINE_re,
  d2l_NVDLA_BDMA_CFG_SURF_REPEAT_w,
  d2l_NVDLA_BDMA_CFG_SURF_REPEAT_we,
  d2l_NVDLA_BDMA_CFG_SURF_REPEAT_re,
  d2l_NVDLA_BDMA_CFG_SRC_SURF_w,
  d2l_NVDLA_BDMA_CFG_SRC_SURF_we,
  d2l_NVDLA_BDMA_CFG_SRC_SURF_re,
  d2l_NVDLA_BDMA_CFG_DST_SURF_w,
  d2l_NVDLA_BDMA_CFG_DST_SURF_we,
  d2l_NVDLA_BDMA_CFG_DST_SURF_re,
  d2l_NVDLA_BDMA_CFG_OP_w,
  d2l_NVDLA_BDMA_CFG_OP_we,
  d2l_NVDLA_BDMA_CFG_OP_re,
  d2l_NVDLA_BDMA_CFG_LAUNCH0_w,
  d2l_NVDLA_BDMA_CFG_LAUNCH0_we,
  d2l_NVDLA_BDMA_CFG_LAUNCH0_re,
  d2l_NVDLA_BDMA_CFG_LAUNCH1_w,
  d2l_NVDLA_BDMA_CFG_LAUNCH1_we,
  d2l_NVDLA_BDMA_CFG_LAUNCH1_re,
  d2l_NVDLA_BDMA_CFG_STATUS_w,
  d2l_NVDLA_BDMA_CFG_STATUS_we,
  d2l_NVDLA_BDMA_CFG_STATUS_re,
  d2l_NVDLA_BDMA_STATUS_w,
  d2l_NVDLA_BDMA_STATUS_we,
  d2l_NVDLA_BDMA_STATUS_re,
  d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_w,
  d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_we,
  d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_re,
  d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_w,
  d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_we,
  d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_re,
  d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_w,
  d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_we,
  d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_re,
  d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_w,
  d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_we,
  d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_re );

  //------- inputs
  input    clk;
  input    reset;
  input     [31:0] leaf_dec_wr_data;
  input     [39:0] leaf_dec_addr;
  input    leaf_dec_block_sel;
  input    leaf_dec_valid;
  input    leaf_dec_wr_dvld;
  input     [1:0] leaf_dec_cycle;
  input     [2:0] leaf_dec_wr_width;
  input     [31:0] l2d_NVDLA_BDMA_CFG_SRC_ADDR_LOW_r;
  input     [31:0] l2d_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_r;
  input     [31:0] l2d_NVDLA_BDMA_CFG_DST_ADDR_LOW_r;
  input     [31:0] l2d_NVDLA_BDMA_CFG_DST_ADDR_HIGH_r;
  input     [31:0] l2d_NVDLA_BDMA_CFG_LINE_r;
  input     [31:0] l2d_NVDLA_BDMA_CFG_CMD_r;
  input     [31:0] l2d_NVDLA_BDMA_CFG_LINE_REPEAT_r;
  input     [31:0] l2d_NVDLA_BDMA_CFG_SRC_LINE_r;
  input     [31:0] l2d_NVDLA_BDMA_CFG_DST_LINE_r;
  input     [31:0] l2d_NVDLA_BDMA_CFG_SURF_REPEAT_r;
  input     [31:0] l2d_NVDLA_BDMA_CFG_SRC_SURF_r;
  input     [31:0] l2d_NVDLA_BDMA_CFG_DST_SURF_r;
  input     [31:0] l2d_NVDLA_BDMA_CFG_OP_r;
  input     [31:0] l2d_NVDLA_BDMA_CFG_LAUNCH0_r;
  input     [31:0] l2d_NVDLA_BDMA_CFG_LAUNCH1_r;
  input     [31:0] l2d_NVDLA_BDMA_CFG_STATUS_r;
  input     [31:0] l2d_NVDLA_BDMA_STATUS_r;
  input     [31:0] l2d_NVDLA_BDMA_STATUS_GRP0_READ_STALL_r;
  input     [31:0] l2d_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_r;
  input     [31:0] l2d_NVDLA_BDMA_STATUS_GRP1_READ_STALL_r;
  input     [31:0] l2d_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_r;

  //------- outputs
  output     [31:0] dec_leaf_rd_data;
  output    dec_leaf_ack;
  output    dec_leaf_nack;
  output    dec_leaf_accept;
  output    dec_leaf_reject;
  output    dec_leaf_retry_atomic;
  output     [2:0] dec_leaf_data_width;
  output     [31:0] d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_w;
  output    d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_we;
  output    d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_re;
  output     [31:0] d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_w;
  output    d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_we;
  output    d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_re;
  output     [31:0] d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_w;
  output    d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_we;
  output    d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_re;
  output     [31:0] d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_w;
  output    d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_we;
  output    d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_re;
  output     [31:0] d2l_NVDLA_BDMA_CFG_LINE_w;
  output    d2l_NVDLA_BDMA_CFG_LINE_we;
  output    d2l_NVDLA_BDMA_CFG_LINE_re;
  output     [31:0] d2l_NVDLA_BDMA_CFG_CMD_w;
  output    d2l_NVDLA_BDMA_CFG_CMD_we;
  output    d2l_NVDLA_BDMA_CFG_CMD_re;
  output     [31:0] d2l_NVDLA_BDMA_CFG_LINE_REPEAT_w;
  output    d2l_NVDLA_BDMA_CFG_LINE_REPEAT_we;
  output    d2l_NVDLA_BDMA_CFG_LINE_REPEAT_re;
  output     [31:0] d2l_NVDLA_BDMA_CFG_SRC_LINE_w;
  output    d2l_NVDLA_BDMA_CFG_SRC_LINE_we;
  output    d2l_NVDLA_BDMA_CFG_SRC_LINE_re;
  output     [31:0] d2l_NVDLA_BDMA_CFG_DST_LINE_w;
  output    d2l_NVDLA_BDMA_CFG_DST_LINE_we;
  output    d2l_NVDLA_BDMA_CFG_DST_LINE_re;
  output     [31:0] d2l_NVDLA_BDMA_CFG_SURF_REPEAT_w;
  output    d2l_NVDLA_BDMA_CFG_SURF_REPEAT_we;
  output    d2l_NVDLA_BDMA_CFG_SURF_REPEAT_re;
  output     [31:0] d2l_NVDLA_BDMA_CFG_SRC_SURF_w;
  output    d2l_NVDLA_BDMA_CFG_SRC_SURF_we;
  output    d2l_NVDLA_BDMA_CFG_SRC_SURF_re;
  output     [31:0] d2l_NVDLA_BDMA_CFG_DST_SURF_w;
  output    d2l_NVDLA_BDMA_CFG_DST_SURF_we;
  output    d2l_NVDLA_BDMA_CFG_DST_SURF_re;
  output     [31:0] d2l_NVDLA_BDMA_CFG_OP_w;
  output    d2l_NVDLA_BDMA_CFG_OP_we;
  output    d2l_NVDLA_BDMA_CFG_OP_re;
  output     [31:0] d2l_NVDLA_BDMA_CFG_LAUNCH0_w;
  output    d2l_NVDLA_BDMA_CFG_LAUNCH0_we;
  output    d2l_NVDLA_BDMA_CFG_LAUNCH0_re;
  output     [31:0] d2l_NVDLA_BDMA_CFG_LAUNCH1_w;
  output    d2l_NVDLA_BDMA_CFG_LAUNCH1_we;
  output    d2l_NVDLA_BDMA_CFG_LAUNCH1_re;
  output     [31:0] d2l_NVDLA_BDMA_CFG_STATUS_w;
  output    d2l_NVDLA_BDMA_CFG_STATUS_we;
  output    d2l_NVDLA_BDMA_CFG_STATUS_re;
  output     [31:0] d2l_NVDLA_BDMA_STATUS_w;
  output    d2l_NVDLA_BDMA_STATUS_we;
  output    d2l_NVDLA_BDMA_STATUS_re;
  output     [31:0] d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_w;
  output    d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_we;
  output    d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_re;
  output     [31:0] d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_w;
  output    d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_we;
  output    d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_re;
  output     [31:0] d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_w;
  output    d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_we;
  output    d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_re;
  output     [31:0] d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_w;
  output    d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_we;
  output    d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_re;


  //------- wire defines
  wire   [31:0] pio_dec_write_data;
  wire   [16:2] pio_dec_address;
  wire  pio_dec_read;
  wire  pio_dec_write;
  wire   [39:0] block_sel_addr;
  wire  block_sel;
  wire  leaf_dec_valid_active;
  wire  leaf_dec_wr_dvld_active;
  
  //------- reg defines
  reg   [31:0] d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_w;
  reg  d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_we;
  reg  d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_re;
  reg   [31:0] d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_w;
  reg  d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_we;
  reg  d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_re;
  reg   [31:0] d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_w;
  reg  d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_we;
  reg  d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_re;
  reg   [31:0] d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_w;
  reg  d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_we;
  reg  d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_re;
  reg   [31:0] d2l_NVDLA_BDMA_CFG_LINE_w;
  reg  d2l_NVDLA_BDMA_CFG_LINE_we;
  reg  d2l_NVDLA_BDMA_CFG_LINE_re;
  reg   [31:0] d2l_NVDLA_BDMA_CFG_CMD_w;
  reg  d2l_NVDLA_BDMA_CFG_CMD_we;
  reg  d2l_NVDLA_BDMA_CFG_CMD_re;
  reg   [31:0] d2l_NVDLA_BDMA_CFG_LINE_REPEAT_w;
  reg  d2l_NVDLA_BDMA_CFG_LINE_REPEAT_we;
  reg  d2l_NVDLA_BDMA_CFG_LINE_REPEAT_re;
  reg   [31:0] d2l_NVDLA_BDMA_CFG_SRC_LINE_w;
  reg  d2l_NVDLA_BDMA_CFG_SRC_LINE_we;
  reg  d2l_NVDLA_BDMA_CFG_SRC_LINE_re;
  reg   [31:0] d2l_NVDLA_BDMA_CFG_DST_LINE_w;
  reg  d2l_NVDLA_BDMA_CFG_DST_LINE_we;
  reg  d2l_NVDLA_BDMA_CFG_DST_LINE_re;
  reg   [31:0] d2l_NVDLA_BDMA_CFG_SURF_REPEAT_w;
  reg  d2l_NVDLA_BDMA_CFG_SURF_REPEAT_we;
  reg  d2l_NVDLA_BDMA_CFG_SURF_REPEAT_re;
  reg   [31:0] d2l_NVDLA_BDMA_CFG_SRC_SURF_w;
  reg  d2l_NVDLA_BDMA_CFG_SRC_SURF_we;
  reg  d2l_NVDLA_BDMA_CFG_SRC_SURF_re;
  reg   [31:0] d2l_NVDLA_BDMA_CFG_DST_SURF_w;
  reg  d2l_NVDLA_BDMA_CFG_DST_SURF_we;
  reg  d2l_NVDLA_BDMA_CFG_DST_SURF_re;
  reg   [31:0] d2l_NVDLA_BDMA_CFG_OP_w;
  reg  d2l_NVDLA_BDMA_CFG_OP_we;
  reg  d2l_NVDLA_BDMA_CFG_OP_re;
  reg   [31:0] d2l_NVDLA_BDMA_CFG_LAUNCH0_w;
  reg  d2l_NVDLA_BDMA_CFG_LAUNCH0_we;
  reg  d2l_NVDLA_BDMA_CFG_LAUNCH0_re;
  reg   [31:0] d2l_NVDLA_BDMA_CFG_LAUNCH1_w;
  reg  d2l_NVDLA_BDMA_CFG_LAUNCH1_we;
  reg  d2l_NVDLA_BDMA_CFG_LAUNCH1_re;
  reg   [31:0] d2l_NVDLA_BDMA_CFG_STATUS_w;
  reg  d2l_NVDLA_BDMA_CFG_STATUS_we;
  reg  d2l_NVDLA_BDMA_CFG_STATUS_re;
  reg   [31:0] d2l_NVDLA_BDMA_STATUS_w;
  reg  d2l_NVDLA_BDMA_STATUS_we;
  reg  d2l_NVDLA_BDMA_STATUS_re;
  reg   [31:0] d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_w;
  reg  d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_we;
  reg  d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_re;
  reg   [31:0] d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_w;
  reg  d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_we;
  reg  d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_re;
  reg   [31:0] d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_w;
  reg  d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_we;
  reg  d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_re;
  reg   [31:0] d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_w;
  reg  d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_we;
  reg  d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_re;
  reg  leaf_dec_valid_hld1;
  reg  leaf_dec_valid_hld1_next;
  reg  leaf_dec_wr_dvld_hld1;
  reg  leaf_dec_wr_dvld_hld1_next;
  reg  pio_write_active;
  reg  pio_read_active;
  reg   [16:2] pio_dec_address_d1;
  reg   [31:0] pio_dec_write_data_d1;
  reg   [31:0] dec_pio_read_data;
  reg   [31:0] dec_pio_read_data_d1;
  reg  dec_pio_ack;
  reg  dec_pio_nack;
  reg  dec_pio_ack_next;
  reg  dec_pio_nack_next;
  reg  pio_internal_ack;
  reg  pio_internal_nack;
  reg  pio_external_ack;
  reg  pio_external_nack;
  reg  pio_external_ack_next;
  reg  pio_external_nack_next;
  reg  pio_no_acks;
  reg  pio_activate_write;
  reg  pio_activate_read;
  reg   [31:0] dec_pio_read_data_next;
  reg  external_transaction_active;
  
  
  //------- assigns
  assign  pio_dec_write_data = leaf_dec_wr_data;
  assign  dec_leaf_rd_data = dec_pio_read_data;
  assign  dec_leaf_ack = dec_pio_ack;
  assign  dec_leaf_nack = dec_pio_nack;
  assign  pio_dec_address = leaf_dec_addr [16:2] ;
  assign  block_sel_addr = 40'h0;
  assign  block_sel = leaf_dec_block_sel;
  assign  leaf_dec_wr_dvld_active = leaf_dec_wr_dvld | leaf_dec_wr_dvld_hld1;
  assign  leaf_dec_valid_active = leaf_dec_valid | leaf_dec_valid_hld1;
  assign  dec_leaf_accept = leaf_dec_valid & block_sel;
  assign  dec_leaf_reject = leaf_dec_valid & ~block_sel;
  assign  pio_dec_read = block_sel & leaf_dec_valid_active & (leaf_dec_cycle == 2'b10);
  assign  pio_dec_write = block_sel & leaf_dec_wr_dvld_active & (leaf_dec_cycle[1] == 1'b0);
  assign  dec_leaf_retry_atomic = 1'b0;
  assign  dec_leaf_data_width = 3'b0;
  
  //------- combinatorial assigns for pio read data
  always @ (*) begin
    dec_pio_read_data = dec_pio_read_data_d1;
  end
  
  //------- reg assigns for pio read data
  always @ (posedge clk) begin
    if (reset) begin
      dec_pio_read_data_d1 <= #1  32'b0;
    end
    else begin
      dec_pio_read_data_d1 <= #1 dec_pio_read_data_next;
    end
  end
  
  //------- reg assigns for pio i/f
  always @ (posedge clk) begin
    if (reset) begin
      pio_write_active <= #1  1'b0;
      pio_read_active <= #1  1'b0;
    end
    else begin
      pio_write_active <= #1  pio_write_active ? pio_no_acks : pio_activate_write;
      pio_read_active <= #1  pio_read_active ? pio_no_acks : pio_activate_read;
      pio_dec_address_d1 <= #1   pio_dec_address;
      pio_dec_write_data_d1 <= #1  pio_dec_write_data;
    end
  end
  
  //------- combinatorial assigns for leaf i/f
  always @ (*) begin
    leaf_dec_valid_hld1_next = leaf_dec_valid | leaf_dec_valid_hld1;
    if (dec_pio_ack_next | dec_pio_nack_next) leaf_dec_valid_hld1_next = 1'b0;
    leaf_dec_wr_dvld_hld1_next = leaf_dec_wr_dvld | leaf_dec_wr_dvld_hld1;
    if (dec_pio_ack_next | dec_pio_nack_next | leaf_dec_valid) leaf_dec_wr_dvld_hld1_next = 1'b0;
  end
  
  //------- reg assigns for leaf i/f
  always @ (posedge clk) begin
    if (reset) begin
      leaf_dec_valid_hld1 <= #1  1'b0;
      leaf_dec_wr_dvld_hld1 <= #1  1'b0;
    end
    else begin
      leaf_dec_valid_hld1 <= #1 leaf_dec_valid_hld1_next;
      leaf_dec_wr_dvld_hld1 <= #1 leaf_dec_wr_dvld_hld1_next;
    end
  end
  
  //------- combinatorial assigns for pio ack/nack
  always @ (*) begin
    pio_internal_nack = (pio_read_active | pio_write_active) & ~pio_internal_ack & ~external_transaction_active;
    dec_pio_ack_next = (pio_internal_ack | (pio_external_ack_next & external_transaction_active));
    dec_pio_nack_next = (pio_internal_nack | (pio_external_nack_next & external_transaction_active));
    pio_no_acks = ~(dec_pio_ack | dec_pio_nack | pio_external_ack | pio_external_nack);
    pio_activate_write = (pio_dec_write & ~(dec_pio_ack | dec_pio_nack));
    pio_activate_read = (pio_dec_read & ~(dec_pio_ack | dec_pio_nack));
  end
  
  //------- reg assigns for pio ack/nack
  always @ (posedge clk) begin
    if (reset) begin
      dec_pio_ack <= #1 1'b0;
      dec_pio_nack <= #1 1'b0;
      pio_external_ack <= #1  1'b0;
      pio_external_nack <= #1  1'b0;
    end
    else begin
      dec_pio_ack <= #1 dec_pio_ack ? 1'b0 : dec_pio_ack_next;
      dec_pio_nack <= #1 dec_pio_nack ? 1'b0 : dec_pio_nack_next;
      pio_external_ack <= #1 pio_external_ack_next;
      pio_external_nack <= #1 pio_external_nack_next;
    end
  end
  
  
  //------- address decode
  always @ (*) begin
    pio_internal_ack = 1'b0;
    external_transaction_active = 1'b0;
    pio_external_ack_next = 1'b0;
    pio_external_nack_next = 1'b0;
    dec_pio_read_data_next = 32'b0;
    
    d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_we = 1'b0;
    d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_re = 1'b0;
    d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_we = 1'b0;
    d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_re = 1'b0;
    d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_we = 1'b0;
    d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_re = 1'b0;
    d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_we = 1'b0;
    d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_re = 1'b0;
    d2l_NVDLA_BDMA_CFG_LINE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_BDMA_CFG_LINE_we = 1'b0;
    d2l_NVDLA_BDMA_CFG_LINE_re = 1'b0;
    d2l_NVDLA_BDMA_CFG_CMD_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_BDMA_CFG_CMD_we = 1'b0;
    d2l_NVDLA_BDMA_CFG_CMD_re = 1'b0;
    d2l_NVDLA_BDMA_CFG_LINE_REPEAT_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_BDMA_CFG_LINE_REPEAT_we = 1'b0;
    d2l_NVDLA_BDMA_CFG_LINE_REPEAT_re = 1'b0;
    d2l_NVDLA_BDMA_CFG_SRC_LINE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_BDMA_CFG_SRC_LINE_we = 1'b0;
    d2l_NVDLA_BDMA_CFG_SRC_LINE_re = 1'b0;
    d2l_NVDLA_BDMA_CFG_DST_LINE_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_BDMA_CFG_DST_LINE_we = 1'b0;
    d2l_NVDLA_BDMA_CFG_DST_LINE_re = 1'b0;
    d2l_NVDLA_BDMA_CFG_SURF_REPEAT_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_BDMA_CFG_SURF_REPEAT_we = 1'b0;
    d2l_NVDLA_BDMA_CFG_SURF_REPEAT_re = 1'b0;
    d2l_NVDLA_BDMA_CFG_SRC_SURF_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_BDMA_CFG_SRC_SURF_we = 1'b0;
    d2l_NVDLA_BDMA_CFG_SRC_SURF_re = 1'b0;
    d2l_NVDLA_BDMA_CFG_DST_SURF_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_BDMA_CFG_DST_SURF_we = 1'b0;
    d2l_NVDLA_BDMA_CFG_DST_SURF_re = 1'b0;
    d2l_NVDLA_BDMA_CFG_OP_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_BDMA_CFG_OP_we = 1'b0;
    d2l_NVDLA_BDMA_CFG_OP_re = 1'b0;
    d2l_NVDLA_BDMA_CFG_LAUNCH0_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_BDMA_CFG_LAUNCH0_we = 1'b0;
    d2l_NVDLA_BDMA_CFG_LAUNCH0_re = 1'b0;
    d2l_NVDLA_BDMA_CFG_LAUNCH1_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_BDMA_CFG_LAUNCH1_we = 1'b0;
    d2l_NVDLA_BDMA_CFG_LAUNCH1_re = 1'b0;
    d2l_NVDLA_BDMA_CFG_STATUS_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_BDMA_CFG_STATUS_we = 1'b0;
    d2l_NVDLA_BDMA_CFG_STATUS_re = 1'b0;
    d2l_NVDLA_BDMA_STATUS_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_BDMA_STATUS_we = 1'b0;
    d2l_NVDLA_BDMA_STATUS_re = 1'b0;
    d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_we = 1'b0;
    d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_re = 1'b0;
    d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_we = 1'b0;
    d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_re = 1'b0;
    d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_we = 1'b0;
    d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_re = 1'b0;
    d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_w = pio_dec_write_data_d1  [31:0] ;
    d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_we = 1'b0;
    d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_re = 1'b0;
    
    casez(pio_dec_address_d1)
    //  Register: NVDLA_BDMA.CFG_SRC_ADDR_LOW     Address: 0x10000     External: false
    15'b100000000000000:
      begin
        d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_BDMA_CFG_SRC_ADDR_LOW_r;
      end
    //  Register: NVDLA_BDMA.CFG_SRC_ADDR_HIGH     Address: 0x10004     External: false
    15'b100000000000001:
      begin
        d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_r;
      end
    //  Register: NVDLA_BDMA.CFG_DST_ADDR_LOW     Address: 0x10008     External: false
    15'b100000000000010:
      begin
        d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_BDMA_CFG_DST_ADDR_LOW_r;
      end
    //  Register: NVDLA_BDMA.CFG_DST_ADDR_HIGH     Address: 0x1000c     External: false
    15'b100000000000011:
      begin
        d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_BDMA_CFG_DST_ADDR_HIGH_r;
      end
    //  Register: NVDLA_BDMA.CFG_LINE     Address: 0x10010     External: false
    15'b100000000000100:
      begin
        d2l_NVDLA_BDMA_CFG_LINE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_BDMA_CFG_LINE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_BDMA_CFG_LINE_r;
      end
    //  Register: NVDLA_BDMA.CFG_CMD     Address: 0x10014     External: false
    15'b100000000000101:
      begin
        d2l_NVDLA_BDMA_CFG_CMD_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_BDMA_CFG_CMD_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_BDMA_CFG_CMD_r;
      end
    //  Register: NVDLA_BDMA.CFG_LINE_REPEAT     Address: 0x10018     External: false
    15'b100000000000110:
      begin
        d2l_NVDLA_BDMA_CFG_LINE_REPEAT_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_BDMA_CFG_LINE_REPEAT_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_BDMA_CFG_LINE_REPEAT_r;
      end
    //  Register: NVDLA_BDMA.CFG_SRC_LINE     Address: 0x1001c     External: false
    15'b100000000000111:
      begin
        d2l_NVDLA_BDMA_CFG_SRC_LINE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_BDMA_CFG_SRC_LINE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_BDMA_CFG_SRC_LINE_r;
      end
    //  Register: NVDLA_BDMA.CFG_DST_LINE     Address: 0x10020     External: false
    15'b100000000001000:
      begin
        d2l_NVDLA_BDMA_CFG_DST_LINE_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_BDMA_CFG_DST_LINE_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_BDMA_CFG_DST_LINE_r;
      end
    //  Register: NVDLA_BDMA.CFG_SURF_REPEAT     Address: 0x10024     External: false
    15'b100000000001001:
      begin
        d2l_NVDLA_BDMA_CFG_SURF_REPEAT_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_BDMA_CFG_SURF_REPEAT_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_BDMA_CFG_SURF_REPEAT_r;
      end
    //  Register: NVDLA_BDMA.CFG_SRC_SURF     Address: 0x10028     External: false
    15'b100000000001010:
      begin
        d2l_NVDLA_BDMA_CFG_SRC_SURF_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_BDMA_CFG_SRC_SURF_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_BDMA_CFG_SRC_SURF_r;
      end
    //  Register: NVDLA_BDMA.CFG_DST_SURF     Address: 0x1002c     External: false
    15'b100000000001011:
      begin
        d2l_NVDLA_BDMA_CFG_DST_SURF_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_BDMA_CFG_DST_SURF_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_BDMA_CFG_DST_SURF_r;
      end
    //  Register: NVDLA_BDMA.CFG_OP     Address: 0x10030     External: false
    15'b100000000001100:
      begin
        d2l_NVDLA_BDMA_CFG_OP_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_BDMA_CFG_OP_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_BDMA_CFG_OP_r;
      end
    //  Register: NVDLA_BDMA.CFG_LAUNCH0     Address: 0x10034     External: false
    15'b100000000001101:
      begin
        d2l_NVDLA_BDMA_CFG_LAUNCH0_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_BDMA_CFG_LAUNCH0_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_BDMA_CFG_LAUNCH0_r;
      end
    //  Register: NVDLA_BDMA.CFG_LAUNCH1     Address: 0x10038     External: false
    15'b100000000001110:
      begin
        d2l_NVDLA_BDMA_CFG_LAUNCH1_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_BDMA_CFG_LAUNCH1_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_BDMA_CFG_LAUNCH1_r;
      end
    //  Register: NVDLA_BDMA.CFG_STATUS     Address: 0x1003c     External: false
    15'b100000000001111:
      begin
        d2l_NVDLA_BDMA_CFG_STATUS_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_BDMA_CFG_STATUS_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_BDMA_CFG_STATUS_r;
      end
    //  Register: NVDLA_BDMA.STATUS     Address: 0x10040     External: false
    15'b100000000010000:
      begin
        d2l_NVDLA_BDMA_STATUS_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_BDMA_STATUS_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_BDMA_STATUS_r;
      end
    //  Register: NVDLA_BDMA.STATUS_GRP0_READ_STALL     Address: 0x10044     External: false
    15'b100000000010001:
      begin
        d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_BDMA_STATUS_GRP0_READ_STALL_r;
      end
    //  Register: NVDLA_BDMA.STATUS_GRP0_WRITE_STALL     Address: 0x10048     External: false
    15'b100000000010010:
      begin
        d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_r;
      end
    //  Register: NVDLA_BDMA.STATUS_GRP1_READ_STALL     Address: 0x1004c     External: false
    15'b100000000010011:
      begin
        d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_BDMA_STATUS_GRP1_READ_STALL_r;
      end
    //  Register: NVDLA_BDMA.STATUS_GRP1_WRITE_STALL     Address: 0x10050     External: false
    15'b100000000010100:
      begin
        d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_we = pio_write_active & ~dec_pio_ack;
        d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_r;
      end
    endcase
  end
  
endmodule

//
//---------- module addrmap_NVDLA_pio
//
module addrmap_NVDLA_pio
(
  clk,
  reset,
  h2l_NVDLA_BDMA_STATUS_FREE_SLOT_w,
  h2l_NVDLA_BDMA_STATUS_IDLE_w,
  h2l_NVDLA_BDMA_STATUS_GRP0_BUSY_w,
  h2l_NVDLA_BDMA_STATUS_GRP1_BUSY_w,
  h2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_COUNT_w,
  h2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_COUNT_w,
  h2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_COUNT_w,
  h2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_COUNT_w,
  leaf_dec_wr_data,
  leaf_dec_addr,
  leaf_dec_block_sel,
  leaf_dec_valid,
  leaf_dec_wr_dvld,
  leaf_dec_cycle,
  leaf_dec_wr_width,

  l2h_NVDLA_BDMA_CFG_SRC_ADDR_LOW_V32_r,
  l2h_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_V8_r,
  l2h_NVDLA_BDMA_CFG_DST_ADDR_LOW_V32_r,
  l2h_NVDLA_BDMA_CFG_DST_ADDR_HIGH_V8_r,
  l2h_NVDLA_BDMA_CFG_LINE_SIZE_r,
  l2h_NVDLA_BDMA_CFG_CMD_SRC_RAM_TYPE_r,
  l2h_NVDLA_BDMA_CFG_CMD_DST_RAM_TYPE_r,
  l2h_NVDLA_BDMA_CFG_LINE_REPEAT_NUMBER_r,
  l2h_NVDLA_BDMA_CFG_SRC_LINE_STRIDE_r,
  l2h_NVDLA_BDMA_CFG_DST_LINE_STRIDE_r,
  l2h_NVDLA_BDMA_CFG_SURF_REPEAT_NUMBER_r,
  l2h_NVDLA_BDMA_CFG_SRC_SURF_STRIDE_r,
  l2h_NVDLA_BDMA_CFG_DST_SURF_STRIDE_r,
  l2h_NVDLA_BDMA_CFG_OP_EN_r,
  l2h_NVDLA_BDMA_CFG_LAUNCH0_GRP0_LAUNCH_r,
  l2h_NVDLA_BDMA_CFG_LAUNCH1_GRP1_LAUNCH_r,
  l2h_NVDLA_BDMA_CFG_STATUS_STALL_COUNT_EN_r,
  dec_leaf_rd_data,
  dec_leaf_ack,
  dec_leaf_nack,
  dec_leaf_accept,
  dec_leaf_reject,
  dec_leaf_retry_atomic,
  dec_leaf_data_width );

  //------- inputs
  input    clk;
  input    reset;
  input     [7:0] h2l_NVDLA_BDMA_STATUS_FREE_SLOT_w;
  input    h2l_NVDLA_BDMA_STATUS_IDLE_w;
  input    h2l_NVDLA_BDMA_STATUS_GRP0_BUSY_w;
  input    h2l_NVDLA_BDMA_STATUS_GRP1_BUSY_w;
  input     [31:0] h2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_COUNT_w;
  input     [31:0] h2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_COUNT_w;
  input     [31:0] h2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_COUNT_w;
  input     [31:0] h2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_COUNT_w;
  input     [31:0] leaf_dec_wr_data;
  input     [39:0] leaf_dec_addr;
  input    leaf_dec_block_sel;
  input    leaf_dec_valid;
  input    leaf_dec_wr_dvld;
  input     [1:0] leaf_dec_cycle;
  input     [2:0] leaf_dec_wr_width;

  //------- outputs
  output     [26:0] l2h_NVDLA_BDMA_CFG_SRC_ADDR_LOW_V32_r;
  output     [31:0] l2h_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_V8_r;
  output     [26:0] l2h_NVDLA_BDMA_CFG_DST_ADDR_LOW_V32_r;
  output     [31:0] l2h_NVDLA_BDMA_CFG_DST_ADDR_HIGH_V8_r;
  output     [12:0] l2h_NVDLA_BDMA_CFG_LINE_SIZE_r;
  output    l2h_NVDLA_BDMA_CFG_CMD_SRC_RAM_TYPE_r;
  output    l2h_NVDLA_BDMA_CFG_CMD_DST_RAM_TYPE_r;
  output     [23:0] l2h_NVDLA_BDMA_CFG_LINE_REPEAT_NUMBER_r;
  output     [26:0] l2h_NVDLA_BDMA_CFG_SRC_LINE_STRIDE_r;
  output     [26:0] l2h_NVDLA_BDMA_CFG_DST_LINE_STRIDE_r;
  output     [23:0] l2h_NVDLA_BDMA_CFG_SURF_REPEAT_NUMBER_r;
  output     [26:0] l2h_NVDLA_BDMA_CFG_SRC_SURF_STRIDE_r;
  output     [26:0] l2h_NVDLA_BDMA_CFG_DST_SURF_STRIDE_r;
  output    l2h_NVDLA_BDMA_CFG_OP_EN_r;
  output    l2h_NVDLA_BDMA_CFG_LAUNCH0_GRP0_LAUNCH_r;
  output    l2h_NVDLA_BDMA_CFG_LAUNCH1_GRP1_LAUNCH_r;
  output    l2h_NVDLA_BDMA_CFG_STATUS_STALL_COUNT_EN_r;
  output     [31:0] dec_leaf_rd_data;
  output    dec_leaf_ack;
  output    dec_leaf_nack;
  output    dec_leaf_accept;
  output    dec_leaf_reject;
  output    dec_leaf_retry_atomic;
  output     [2:0] dec_leaf_data_width;


  //------- wire defines
  wire   [31:0] d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_w;
  wire  d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_we;
  wire  d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_re;
  wire   [31:0] d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_w;
  wire  d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_we;
  wire  d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_re;
  wire   [31:0] d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_w;
  wire  d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_we;
  wire  d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_re;
  wire   [31:0] d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_w;
  wire  d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_we;
  wire  d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_re;
  wire   [31:0] d2l_NVDLA_BDMA_CFG_LINE_w;
  wire  d2l_NVDLA_BDMA_CFG_LINE_we;
  wire  d2l_NVDLA_BDMA_CFG_LINE_re;
  wire   [31:0] d2l_NVDLA_BDMA_CFG_CMD_w;
  wire  d2l_NVDLA_BDMA_CFG_CMD_we;
  wire  d2l_NVDLA_BDMA_CFG_CMD_re;
  wire   [31:0] d2l_NVDLA_BDMA_CFG_LINE_REPEAT_w;
  wire  d2l_NVDLA_BDMA_CFG_LINE_REPEAT_we;
  wire  d2l_NVDLA_BDMA_CFG_LINE_REPEAT_re;
  wire   [31:0] d2l_NVDLA_BDMA_CFG_SRC_LINE_w;
  wire  d2l_NVDLA_BDMA_CFG_SRC_LINE_we;
  wire  d2l_NVDLA_BDMA_CFG_SRC_LINE_re;
  wire   [31:0] d2l_NVDLA_BDMA_CFG_DST_LINE_w;
  wire  d2l_NVDLA_BDMA_CFG_DST_LINE_we;
  wire  d2l_NVDLA_BDMA_CFG_DST_LINE_re;
  wire   [31:0] d2l_NVDLA_BDMA_CFG_SURF_REPEAT_w;
  wire  d2l_NVDLA_BDMA_CFG_SURF_REPEAT_we;
  wire  d2l_NVDLA_BDMA_CFG_SURF_REPEAT_re;
  wire   [31:0] d2l_NVDLA_BDMA_CFG_SRC_SURF_w;
  wire  d2l_NVDLA_BDMA_CFG_SRC_SURF_we;
  wire  d2l_NVDLA_BDMA_CFG_SRC_SURF_re;
  wire   [31:0] d2l_NVDLA_BDMA_CFG_DST_SURF_w;
  wire  d2l_NVDLA_BDMA_CFG_DST_SURF_we;
  wire  d2l_NVDLA_BDMA_CFG_DST_SURF_re;
  wire   [31:0] d2l_NVDLA_BDMA_CFG_OP_w;
  wire  d2l_NVDLA_BDMA_CFG_OP_we;
  wire  d2l_NVDLA_BDMA_CFG_OP_re;
  wire   [31:0] d2l_NVDLA_BDMA_CFG_LAUNCH0_w;
  wire  d2l_NVDLA_BDMA_CFG_LAUNCH0_we;
  wire  d2l_NVDLA_BDMA_CFG_LAUNCH0_re;
  wire   [31:0] d2l_NVDLA_BDMA_CFG_LAUNCH1_w;
  wire  d2l_NVDLA_BDMA_CFG_LAUNCH1_we;
  wire  d2l_NVDLA_BDMA_CFG_LAUNCH1_re;
  wire   [31:0] d2l_NVDLA_BDMA_CFG_STATUS_w;
  wire  d2l_NVDLA_BDMA_CFG_STATUS_we;
  wire  d2l_NVDLA_BDMA_CFG_STATUS_re;
  wire   [31:0] d2l_NVDLA_BDMA_STATUS_w;
  wire  d2l_NVDLA_BDMA_STATUS_we;
  wire  d2l_NVDLA_BDMA_STATUS_re;
  wire   [31:0] d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_w;
  wire  d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_we;
  wire  d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_re;
  wire   [31:0] d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_w;
  wire  d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_we;
  wire  d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_re;
  wire   [31:0] d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_w;
  wire  d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_we;
  wire  d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_re;
  wire   [31:0] d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_w;
  wire  d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_we;
  wire  d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_re;
  wire   [31:0] l2d_NVDLA_BDMA_CFG_SRC_ADDR_LOW_r;
  wire   [31:0] l2d_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_r;
  wire   [31:0] l2d_NVDLA_BDMA_CFG_DST_ADDR_LOW_r;
  wire   [31:0] l2d_NVDLA_BDMA_CFG_DST_ADDR_HIGH_r;
  wire   [31:0] l2d_NVDLA_BDMA_CFG_LINE_r;
  wire   [31:0] l2d_NVDLA_BDMA_CFG_CMD_r;
  wire   [31:0] l2d_NVDLA_BDMA_CFG_LINE_REPEAT_r;
  wire   [31:0] l2d_NVDLA_BDMA_CFG_SRC_LINE_r;
  wire   [31:0] l2d_NVDLA_BDMA_CFG_DST_LINE_r;
  wire   [31:0] l2d_NVDLA_BDMA_CFG_SURF_REPEAT_r;
  wire   [31:0] l2d_NVDLA_BDMA_CFG_SRC_SURF_r;
  wire   [31:0] l2d_NVDLA_BDMA_CFG_DST_SURF_r;
  wire   [31:0] l2d_NVDLA_BDMA_CFG_OP_r;
  wire   [31:0] l2d_NVDLA_BDMA_CFG_LAUNCH0_r;
  wire   [31:0] l2d_NVDLA_BDMA_CFG_LAUNCH1_r;
  wire   [31:0] l2d_NVDLA_BDMA_CFG_STATUS_r;
  wire   [31:0] l2d_NVDLA_BDMA_STATUS_r;
  wire   [31:0] l2d_NVDLA_BDMA_STATUS_GRP0_READ_STALL_r;
  wire   [31:0] l2d_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_r;
  wire   [31:0] l2d_NVDLA_BDMA_STATUS_GRP1_READ_STALL_r;
  wire   [31:0] l2d_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_r;
  
  
  addrmap_NVDLA_jrdl_decode pio_decode (
    .clk(clk),
    .reset(reset),
    .leaf_dec_wr_data(leaf_dec_wr_data),
    .leaf_dec_addr(leaf_dec_addr),
    .leaf_dec_block_sel(leaf_dec_block_sel),
    .leaf_dec_valid(leaf_dec_valid),
    .leaf_dec_wr_dvld(leaf_dec_wr_dvld),
    .leaf_dec_cycle(leaf_dec_cycle),
    .leaf_dec_wr_width(leaf_dec_wr_width),
    .l2d_NVDLA_BDMA_CFG_SRC_ADDR_LOW_r(l2d_NVDLA_BDMA_CFG_SRC_ADDR_LOW_r),
    .l2d_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_r(l2d_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_r),
    .l2d_NVDLA_BDMA_CFG_DST_ADDR_LOW_r(l2d_NVDLA_BDMA_CFG_DST_ADDR_LOW_r),
    .l2d_NVDLA_BDMA_CFG_DST_ADDR_HIGH_r(l2d_NVDLA_BDMA_CFG_DST_ADDR_HIGH_r),
    .l2d_NVDLA_BDMA_CFG_LINE_r(l2d_NVDLA_BDMA_CFG_LINE_r),
    .l2d_NVDLA_BDMA_CFG_CMD_r(l2d_NVDLA_BDMA_CFG_CMD_r),
    .l2d_NVDLA_BDMA_CFG_LINE_REPEAT_r(l2d_NVDLA_BDMA_CFG_LINE_REPEAT_r),
    .l2d_NVDLA_BDMA_CFG_SRC_LINE_r(l2d_NVDLA_BDMA_CFG_SRC_LINE_r),
    .l2d_NVDLA_BDMA_CFG_DST_LINE_r(l2d_NVDLA_BDMA_CFG_DST_LINE_r),
    .l2d_NVDLA_BDMA_CFG_SURF_REPEAT_r(l2d_NVDLA_BDMA_CFG_SURF_REPEAT_r),
    .l2d_NVDLA_BDMA_CFG_SRC_SURF_r(l2d_NVDLA_BDMA_CFG_SRC_SURF_r),
    .l2d_NVDLA_BDMA_CFG_DST_SURF_r(l2d_NVDLA_BDMA_CFG_DST_SURF_r),
    .l2d_NVDLA_BDMA_CFG_OP_r(l2d_NVDLA_BDMA_CFG_OP_r),
    .l2d_NVDLA_BDMA_CFG_LAUNCH0_r(l2d_NVDLA_BDMA_CFG_LAUNCH0_r),
    .l2d_NVDLA_BDMA_CFG_LAUNCH1_r(l2d_NVDLA_BDMA_CFG_LAUNCH1_r),
    .l2d_NVDLA_BDMA_CFG_STATUS_r(l2d_NVDLA_BDMA_CFG_STATUS_r),
    .l2d_NVDLA_BDMA_STATUS_r(l2d_NVDLA_BDMA_STATUS_r),
    .l2d_NVDLA_BDMA_STATUS_GRP0_READ_STALL_r(l2d_NVDLA_BDMA_STATUS_GRP0_READ_STALL_r),
    .l2d_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_r(l2d_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_r),
    .l2d_NVDLA_BDMA_STATUS_GRP1_READ_STALL_r(l2d_NVDLA_BDMA_STATUS_GRP1_READ_STALL_r),
    .l2d_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_r(l2d_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_r),
    .dec_leaf_rd_data(dec_leaf_rd_data),
    .dec_leaf_ack(dec_leaf_ack),
    .dec_leaf_nack(dec_leaf_nack),
    .dec_leaf_accept(dec_leaf_accept),
    .dec_leaf_reject(dec_leaf_reject),
    .dec_leaf_retry_atomic(dec_leaf_retry_atomic),
    .dec_leaf_data_width(dec_leaf_data_width),
    .d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_w(d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_w),
    .d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_we(d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_we),
    .d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_re(d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_re),
    .d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_w(d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_w),
    .d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_we(d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_we),
    .d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_re(d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_re),
    .d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_w(d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_w),
    .d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_we(d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_we),
    .d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_re(d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_re),
    .d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_w(d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_w),
    .d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_we(d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_we),
    .d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_re(d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_re),
    .d2l_NVDLA_BDMA_CFG_LINE_w(d2l_NVDLA_BDMA_CFG_LINE_w),
    .d2l_NVDLA_BDMA_CFG_LINE_we(d2l_NVDLA_BDMA_CFG_LINE_we),
    .d2l_NVDLA_BDMA_CFG_LINE_re(d2l_NVDLA_BDMA_CFG_LINE_re),
    .d2l_NVDLA_BDMA_CFG_CMD_w(d2l_NVDLA_BDMA_CFG_CMD_w),
    .d2l_NVDLA_BDMA_CFG_CMD_we(d2l_NVDLA_BDMA_CFG_CMD_we),
    .d2l_NVDLA_BDMA_CFG_CMD_re(d2l_NVDLA_BDMA_CFG_CMD_re),
    .d2l_NVDLA_BDMA_CFG_LINE_REPEAT_w(d2l_NVDLA_BDMA_CFG_LINE_REPEAT_w),
    .d2l_NVDLA_BDMA_CFG_LINE_REPEAT_we(d2l_NVDLA_BDMA_CFG_LINE_REPEAT_we),
    .d2l_NVDLA_BDMA_CFG_LINE_REPEAT_re(d2l_NVDLA_BDMA_CFG_LINE_REPEAT_re),
    .d2l_NVDLA_BDMA_CFG_SRC_LINE_w(d2l_NVDLA_BDMA_CFG_SRC_LINE_w),
    .d2l_NVDLA_BDMA_CFG_SRC_LINE_we(d2l_NVDLA_BDMA_CFG_SRC_LINE_we),
    .d2l_NVDLA_BDMA_CFG_SRC_LINE_re(d2l_NVDLA_BDMA_CFG_SRC_LINE_re),
    .d2l_NVDLA_BDMA_CFG_DST_LINE_w(d2l_NVDLA_BDMA_CFG_DST_LINE_w),
    .d2l_NVDLA_BDMA_CFG_DST_LINE_we(d2l_NVDLA_BDMA_CFG_DST_LINE_we),
    .d2l_NVDLA_BDMA_CFG_DST_LINE_re(d2l_NVDLA_BDMA_CFG_DST_LINE_re),
    .d2l_NVDLA_BDMA_CFG_SURF_REPEAT_w(d2l_NVDLA_BDMA_CFG_SURF_REPEAT_w),
    .d2l_NVDLA_BDMA_CFG_SURF_REPEAT_we(d2l_NVDLA_BDMA_CFG_SURF_REPEAT_we),
    .d2l_NVDLA_BDMA_CFG_SURF_REPEAT_re(d2l_NVDLA_BDMA_CFG_SURF_REPEAT_re),
    .d2l_NVDLA_BDMA_CFG_SRC_SURF_w(d2l_NVDLA_BDMA_CFG_SRC_SURF_w),
    .d2l_NVDLA_BDMA_CFG_SRC_SURF_we(d2l_NVDLA_BDMA_CFG_SRC_SURF_we),
    .d2l_NVDLA_BDMA_CFG_SRC_SURF_re(d2l_NVDLA_BDMA_CFG_SRC_SURF_re),
    .d2l_NVDLA_BDMA_CFG_DST_SURF_w(d2l_NVDLA_BDMA_CFG_DST_SURF_w),
    .d2l_NVDLA_BDMA_CFG_DST_SURF_we(d2l_NVDLA_BDMA_CFG_DST_SURF_we),
    .d2l_NVDLA_BDMA_CFG_DST_SURF_re(d2l_NVDLA_BDMA_CFG_DST_SURF_re),
    .d2l_NVDLA_BDMA_CFG_OP_w(d2l_NVDLA_BDMA_CFG_OP_w),
    .d2l_NVDLA_BDMA_CFG_OP_we(d2l_NVDLA_BDMA_CFG_OP_we),
    .d2l_NVDLA_BDMA_CFG_OP_re(d2l_NVDLA_BDMA_CFG_OP_re),
    .d2l_NVDLA_BDMA_CFG_LAUNCH0_w(d2l_NVDLA_BDMA_CFG_LAUNCH0_w),
    .d2l_NVDLA_BDMA_CFG_LAUNCH0_we(d2l_NVDLA_BDMA_CFG_LAUNCH0_we),
    .d2l_NVDLA_BDMA_CFG_LAUNCH0_re(d2l_NVDLA_BDMA_CFG_LAUNCH0_re),
    .d2l_NVDLA_BDMA_CFG_LAUNCH1_w(d2l_NVDLA_BDMA_CFG_LAUNCH1_w),
    .d2l_NVDLA_BDMA_CFG_LAUNCH1_we(d2l_NVDLA_BDMA_CFG_LAUNCH1_we),
    .d2l_NVDLA_BDMA_CFG_LAUNCH1_re(d2l_NVDLA_BDMA_CFG_LAUNCH1_re),
    .d2l_NVDLA_BDMA_CFG_STATUS_w(d2l_NVDLA_BDMA_CFG_STATUS_w),
    .d2l_NVDLA_BDMA_CFG_STATUS_we(d2l_NVDLA_BDMA_CFG_STATUS_we),
    .d2l_NVDLA_BDMA_CFG_STATUS_re(d2l_NVDLA_BDMA_CFG_STATUS_re),
    .d2l_NVDLA_BDMA_STATUS_w(d2l_NVDLA_BDMA_STATUS_w),
    .d2l_NVDLA_BDMA_STATUS_we(d2l_NVDLA_BDMA_STATUS_we),
    .d2l_NVDLA_BDMA_STATUS_re(d2l_NVDLA_BDMA_STATUS_re),
    .d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_w(d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_w),
    .d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_we(d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_we),
    .d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_re(d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_re),
    .d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_w(d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_w),
    .d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_we(d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_we),
    .d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_re(d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_re),
    .d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_w(d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_w),
    .d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_we(d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_we),
    .d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_re(d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_re),
    .d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_w(d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_w),
    .d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_we(d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_we),
    .d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_re(d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_re) );
    
  addrmap_NVDLA_jrdl_logic pio_logic (
    .clk(clk),
    .reset(reset),
    .d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_w(d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_w),
    .d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_we(d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_we),
    .d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_re(d2l_NVDLA_BDMA_CFG_SRC_ADDR_LOW_re),
    .d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_w(d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_w),
    .d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_we(d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_we),
    .d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_re(d2l_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_re),
    .d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_w(d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_w),
    .d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_we(d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_we),
    .d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_re(d2l_NVDLA_BDMA_CFG_DST_ADDR_LOW_re),
    .d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_w(d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_w),
    .d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_we(d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_we),
    .d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_re(d2l_NVDLA_BDMA_CFG_DST_ADDR_HIGH_re),
    .d2l_NVDLA_BDMA_CFG_LINE_w(d2l_NVDLA_BDMA_CFG_LINE_w),
    .d2l_NVDLA_BDMA_CFG_LINE_we(d2l_NVDLA_BDMA_CFG_LINE_we),
    .d2l_NVDLA_BDMA_CFG_LINE_re(d2l_NVDLA_BDMA_CFG_LINE_re),
    .d2l_NVDLA_BDMA_CFG_CMD_w(d2l_NVDLA_BDMA_CFG_CMD_w),
    .d2l_NVDLA_BDMA_CFG_CMD_we(d2l_NVDLA_BDMA_CFG_CMD_we),
    .d2l_NVDLA_BDMA_CFG_CMD_re(d2l_NVDLA_BDMA_CFG_CMD_re),
    .d2l_NVDLA_BDMA_CFG_LINE_REPEAT_w(d2l_NVDLA_BDMA_CFG_LINE_REPEAT_w),
    .d2l_NVDLA_BDMA_CFG_LINE_REPEAT_we(d2l_NVDLA_BDMA_CFG_LINE_REPEAT_we),
    .d2l_NVDLA_BDMA_CFG_LINE_REPEAT_re(d2l_NVDLA_BDMA_CFG_LINE_REPEAT_re),
    .d2l_NVDLA_BDMA_CFG_SRC_LINE_w(d2l_NVDLA_BDMA_CFG_SRC_LINE_w),
    .d2l_NVDLA_BDMA_CFG_SRC_LINE_we(d2l_NVDLA_BDMA_CFG_SRC_LINE_we),
    .d2l_NVDLA_BDMA_CFG_SRC_LINE_re(d2l_NVDLA_BDMA_CFG_SRC_LINE_re),
    .d2l_NVDLA_BDMA_CFG_DST_LINE_w(d2l_NVDLA_BDMA_CFG_DST_LINE_w),
    .d2l_NVDLA_BDMA_CFG_DST_LINE_we(d2l_NVDLA_BDMA_CFG_DST_LINE_we),
    .d2l_NVDLA_BDMA_CFG_DST_LINE_re(d2l_NVDLA_BDMA_CFG_DST_LINE_re),
    .d2l_NVDLA_BDMA_CFG_SURF_REPEAT_w(d2l_NVDLA_BDMA_CFG_SURF_REPEAT_w),
    .d2l_NVDLA_BDMA_CFG_SURF_REPEAT_we(d2l_NVDLA_BDMA_CFG_SURF_REPEAT_we),
    .d2l_NVDLA_BDMA_CFG_SURF_REPEAT_re(d2l_NVDLA_BDMA_CFG_SURF_REPEAT_re),
    .d2l_NVDLA_BDMA_CFG_SRC_SURF_w(d2l_NVDLA_BDMA_CFG_SRC_SURF_w),
    .d2l_NVDLA_BDMA_CFG_SRC_SURF_we(d2l_NVDLA_BDMA_CFG_SRC_SURF_we),
    .d2l_NVDLA_BDMA_CFG_SRC_SURF_re(d2l_NVDLA_BDMA_CFG_SRC_SURF_re),
    .d2l_NVDLA_BDMA_CFG_DST_SURF_w(d2l_NVDLA_BDMA_CFG_DST_SURF_w),
    .d2l_NVDLA_BDMA_CFG_DST_SURF_we(d2l_NVDLA_BDMA_CFG_DST_SURF_we),
    .d2l_NVDLA_BDMA_CFG_DST_SURF_re(d2l_NVDLA_BDMA_CFG_DST_SURF_re),
    .d2l_NVDLA_BDMA_CFG_OP_w(d2l_NVDLA_BDMA_CFG_OP_w),
    .d2l_NVDLA_BDMA_CFG_OP_we(d2l_NVDLA_BDMA_CFG_OP_we),
    .d2l_NVDLA_BDMA_CFG_OP_re(d2l_NVDLA_BDMA_CFG_OP_re),
    .d2l_NVDLA_BDMA_CFG_LAUNCH0_w(d2l_NVDLA_BDMA_CFG_LAUNCH0_w),
    .d2l_NVDLA_BDMA_CFG_LAUNCH0_we(d2l_NVDLA_BDMA_CFG_LAUNCH0_we),
    .d2l_NVDLA_BDMA_CFG_LAUNCH0_re(d2l_NVDLA_BDMA_CFG_LAUNCH0_re),
    .d2l_NVDLA_BDMA_CFG_LAUNCH1_w(d2l_NVDLA_BDMA_CFG_LAUNCH1_w),
    .d2l_NVDLA_BDMA_CFG_LAUNCH1_we(d2l_NVDLA_BDMA_CFG_LAUNCH1_we),
    .d2l_NVDLA_BDMA_CFG_LAUNCH1_re(d2l_NVDLA_BDMA_CFG_LAUNCH1_re),
    .d2l_NVDLA_BDMA_CFG_STATUS_w(d2l_NVDLA_BDMA_CFG_STATUS_w),
    .d2l_NVDLA_BDMA_CFG_STATUS_we(d2l_NVDLA_BDMA_CFG_STATUS_we),
    .d2l_NVDLA_BDMA_CFG_STATUS_re(d2l_NVDLA_BDMA_CFG_STATUS_re),
    .d2l_NVDLA_BDMA_STATUS_w(d2l_NVDLA_BDMA_STATUS_w),
    .d2l_NVDLA_BDMA_STATUS_we(d2l_NVDLA_BDMA_STATUS_we),
    .d2l_NVDLA_BDMA_STATUS_re(d2l_NVDLA_BDMA_STATUS_re),
    .d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_w(d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_w),
    .d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_we(d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_we),
    .d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_re(d2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_re),
    .d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_w(d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_w),
    .d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_we(d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_we),
    .d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_re(d2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_re),
    .d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_w(d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_w),
    .d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_we(d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_we),
    .d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_re(d2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_re),
    .d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_w(d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_w),
    .d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_we(d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_we),
    .d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_re(d2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_re),
    .h2l_NVDLA_BDMA_STATUS_FREE_SLOT_w(h2l_NVDLA_BDMA_STATUS_FREE_SLOT_w),
    .h2l_NVDLA_BDMA_STATUS_IDLE_w(h2l_NVDLA_BDMA_STATUS_IDLE_w),
    .h2l_NVDLA_BDMA_STATUS_GRP0_BUSY_w(h2l_NVDLA_BDMA_STATUS_GRP0_BUSY_w),
    .h2l_NVDLA_BDMA_STATUS_GRP1_BUSY_w(h2l_NVDLA_BDMA_STATUS_GRP1_BUSY_w),
    .h2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_COUNT_w(h2l_NVDLA_BDMA_STATUS_GRP0_READ_STALL_COUNT_w),
    .h2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_COUNT_w(h2l_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_COUNT_w),
    .h2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_COUNT_w(h2l_NVDLA_BDMA_STATUS_GRP1_READ_STALL_COUNT_w),
    .h2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_COUNT_w(h2l_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_COUNT_w),
    .l2d_NVDLA_BDMA_CFG_SRC_ADDR_LOW_r(l2d_NVDLA_BDMA_CFG_SRC_ADDR_LOW_r),
    .l2d_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_r(l2d_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_r),
    .l2d_NVDLA_BDMA_CFG_DST_ADDR_LOW_r(l2d_NVDLA_BDMA_CFG_DST_ADDR_LOW_r),
    .l2d_NVDLA_BDMA_CFG_DST_ADDR_HIGH_r(l2d_NVDLA_BDMA_CFG_DST_ADDR_HIGH_r),
    .l2d_NVDLA_BDMA_CFG_LINE_r(l2d_NVDLA_BDMA_CFG_LINE_r),
    .l2d_NVDLA_BDMA_CFG_CMD_r(l2d_NVDLA_BDMA_CFG_CMD_r),
    .l2d_NVDLA_BDMA_CFG_LINE_REPEAT_r(l2d_NVDLA_BDMA_CFG_LINE_REPEAT_r),
    .l2d_NVDLA_BDMA_CFG_SRC_LINE_r(l2d_NVDLA_BDMA_CFG_SRC_LINE_r),
    .l2d_NVDLA_BDMA_CFG_DST_LINE_r(l2d_NVDLA_BDMA_CFG_DST_LINE_r),
    .l2d_NVDLA_BDMA_CFG_SURF_REPEAT_r(l2d_NVDLA_BDMA_CFG_SURF_REPEAT_r),
    .l2d_NVDLA_BDMA_CFG_SRC_SURF_r(l2d_NVDLA_BDMA_CFG_SRC_SURF_r),
    .l2d_NVDLA_BDMA_CFG_DST_SURF_r(l2d_NVDLA_BDMA_CFG_DST_SURF_r),
    .l2d_NVDLA_BDMA_CFG_OP_r(l2d_NVDLA_BDMA_CFG_OP_r),
    .l2d_NVDLA_BDMA_CFG_LAUNCH0_r(l2d_NVDLA_BDMA_CFG_LAUNCH0_r),
    .l2d_NVDLA_BDMA_CFG_LAUNCH1_r(l2d_NVDLA_BDMA_CFG_LAUNCH1_r),
    .l2d_NVDLA_BDMA_CFG_STATUS_r(l2d_NVDLA_BDMA_CFG_STATUS_r),
    .l2d_NVDLA_BDMA_STATUS_r(l2d_NVDLA_BDMA_STATUS_r),
    .l2d_NVDLA_BDMA_STATUS_GRP0_READ_STALL_r(l2d_NVDLA_BDMA_STATUS_GRP0_READ_STALL_r),
    .l2d_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_r(l2d_NVDLA_BDMA_STATUS_GRP0_WRITE_STALL_r),
    .l2d_NVDLA_BDMA_STATUS_GRP1_READ_STALL_r(l2d_NVDLA_BDMA_STATUS_GRP1_READ_STALL_r),
    .l2d_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_r(l2d_NVDLA_BDMA_STATUS_GRP1_WRITE_STALL_r),
    .l2h_NVDLA_BDMA_CFG_SRC_ADDR_LOW_V32_r(l2h_NVDLA_BDMA_CFG_SRC_ADDR_LOW_V32_r),
    .l2h_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_V8_r(l2h_NVDLA_BDMA_CFG_SRC_ADDR_HIGH_V8_r),
    .l2h_NVDLA_BDMA_CFG_DST_ADDR_LOW_V32_r(l2h_NVDLA_BDMA_CFG_DST_ADDR_LOW_V32_r),
    .l2h_NVDLA_BDMA_CFG_DST_ADDR_HIGH_V8_r(l2h_NVDLA_BDMA_CFG_DST_ADDR_HIGH_V8_r),
    .l2h_NVDLA_BDMA_CFG_LINE_SIZE_r(l2h_NVDLA_BDMA_CFG_LINE_SIZE_r),
    .l2h_NVDLA_BDMA_CFG_CMD_SRC_RAM_TYPE_r(l2h_NVDLA_BDMA_CFG_CMD_SRC_RAM_TYPE_r),
    .l2h_NVDLA_BDMA_CFG_CMD_DST_RAM_TYPE_r(l2h_NVDLA_BDMA_CFG_CMD_DST_RAM_TYPE_r),
    .l2h_NVDLA_BDMA_CFG_LINE_REPEAT_NUMBER_r(l2h_NVDLA_BDMA_CFG_LINE_REPEAT_NUMBER_r),
    .l2h_NVDLA_BDMA_CFG_SRC_LINE_STRIDE_r(l2h_NVDLA_BDMA_CFG_SRC_LINE_STRIDE_r),
    .l2h_NVDLA_BDMA_CFG_DST_LINE_STRIDE_r(l2h_NVDLA_BDMA_CFG_DST_LINE_STRIDE_r),
    .l2h_NVDLA_BDMA_CFG_SURF_REPEAT_NUMBER_r(l2h_NVDLA_BDMA_CFG_SURF_REPEAT_NUMBER_r),
    .l2h_NVDLA_BDMA_CFG_SRC_SURF_STRIDE_r(l2h_NVDLA_BDMA_CFG_SRC_SURF_STRIDE_r),
    .l2h_NVDLA_BDMA_CFG_DST_SURF_STRIDE_r(l2h_NVDLA_BDMA_CFG_DST_SURF_STRIDE_r),
    .l2h_NVDLA_BDMA_CFG_OP_EN_r(l2h_NVDLA_BDMA_CFG_OP_EN_r),
    .l2h_NVDLA_BDMA_CFG_LAUNCH0_GRP0_LAUNCH_r(l2h_NVDLA_BDMA_CFG_LAUNCH0_GRP0_LAUNCH_r),
    .l2h_NVDLA_BDMA_CFG_LAUNCH1_GRP1_LAUNCH_r(l2h_NVDLA_BDMA_CFG_LAUNCH1_GRP1_LAUNCH_r),
    .l2h_NVDLA_BDMA_CFG_STATUS_STALL_COUNT_EN_r(l2h_NVDLA_BDMA_CFG_STATUS_STALL_COUNT_EN_r) );
    
endmodule

