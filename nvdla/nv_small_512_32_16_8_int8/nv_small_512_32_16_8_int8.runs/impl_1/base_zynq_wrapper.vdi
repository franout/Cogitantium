#-----------------------------------------------------------
# Vivado v2019.2.1 (64-bit)
# SW Build 2729669 on Thu Dec  5 04:49:17 MST 2019
# IP Build 2729494 on Thu Dec  5 07:38:25 MST 2019
# Start of session at: Wed Feb 19 11:48:28 2020
# Process ID: 2924
# Current directory: D:/uni/2019-2020/thesis/cogitantium/nvdla/nv_small_512_32_16_8_int8/nv_small_512_32_16_8_int8.runs/impl_1
# Command line: vivado.exe -log base_zynq_wrapper.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source base_zynq_wrapper.tcl -notrace
# Log file: D:/uni/2019-2020/thesis/cogitantium/nvdla/nv_small_512_32_16_8_int8/nv_small_512_32_16_8_int8.runs/impl_1/base_zynq_wrapper.vdi
# Journal file: D:/uni/2019-2020/thesis/cogitantium/nvdla/nv_small_512_32_16_8_int8/nv_small_512_32_16_8_int8.runs/impl_1\vivado.jou
#-----------------------------------------------------------
source base_zynq_wrapper.tcl -notrace
Command: open_checkpoint base_zynq_wrapper_postroute_physopt.dcp

Starting open_checkpoint Task

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.082 . Memory (MB): peak = 290.711 ; gain = 1.574
INFO: [Device 21-403] Loading part xc7z020clg400-1
Netlist sorting complete. Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 920.777 ; gain = 0.000
INFO: [Netlist 29-17] Analyzing 3066 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2019.2.1
INFO: [Project 1-570] Preparing netlist for logic optimization
INFO: [Timing 38-478] Restoring timing data from binary archive.
INFO: [Timing 38-479] Binary timing data restore complete.
INFO: [Project 1-856] Restoring constraints from binary archive.
INFO: [Project 1-853] Binary constraint restore complete.
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF File: Time (s): cpu = 00:00:12 ; elapsed = 00:00:12 . Memory (MB): peak = 1894.398 ; gain = 82.445
Restored from archive | CPU: 12.000000 secs | Memory: 0.000000 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:12 ; elapsed = 00:00:12 . Memory (MB): peak = 1894.398 ; gain = 82.445
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.064 . Memory (MB): peak = 1894.398 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 32 instances were transformed.
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 20 instances
  RAM64M => RAM64M (RAMD64E(x4)): 12 instances

INFO: [Project 1-604] Checkpoint was created with Vivado v2019.2.1 (64-bit) build 2729669
open_checkpoint: Time (s): cpu = 00:01:00 ; elapsed = 00:01:03 . Memory (MB): peak = 1894.398 ; gain = 1605.262
Command: write_bitstream -force base_zynq_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'D:/programmi/Xilinx/Vivado/2019.2/data/ip'.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC CHECK-3] Report rule limit reached: REQP-1839 rule limit reached: 20 violations have been found.
WARNING: [DRC CHECK-3] Report rule limit reached: REQP-1840 rule limit reached: 20 violations have been found.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_0/mul_dout0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_0/mul_dout0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_1/mul_dout0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_1/mul_dout0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_2/mul_dout0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_2/mul_dout0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_3/mul_dout0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_3/mul_dout0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_4/mul_dout0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_4/mul_dout0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_5/mul_dout0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_5/mul_dout0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_6/mul_dout0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_6/mul_dout0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_7/mul_dout0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_7/mul_dout0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_per_batch0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_per_batch0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_per_batch0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_per_batch0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w__0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w__0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_cur_atomic0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_cur_atomic0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_cur_atomic0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_cur_atomic0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_0_stride_w0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_0_stride_w0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_0_stride_w0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_0_stride_w0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_0_w0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_0_w0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_0_w0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_0_w0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_1_stride_w0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_1_stride_w0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_1_stride_w0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_1_stride_w0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_1_w0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_1_w0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_1_w0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_1_w0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_2_w0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_2_w0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_bs/u_sdp_x_mul_0/x_mul_prelu/data_out0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_bs/u_sdp_x_mul_0/x_mul_prelu/data_out0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_bs/u_sdp_x_mul_0/x_mul_prelu/data_out0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_bs/u_sdp_x_mul_0/x_mul_prelu/data_out0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_bs/u_sdp_x_mul_0/x_mul_prelu/data_out0__0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_bs/u_sdp_x_mul_0/x_mul_prelu/data_out0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_bs/u_sdp_x_mul_0/x_mul_prelu/data_out0__0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_bs/u_sdp_x_mul_0/x_mul_prelu/data_out0__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_c/c_int_0/mul_dout0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_c/c_int_0/mul_dout0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_c/c_int_0/mul_dout0__0 input base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_c/c_int_0/mul_dout0__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0 output base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w output base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0 output base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_bs/u_sdp_x_mul_0/x_mul_prelu/data_out0 output base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_bs/u_sdp_x_mul_0/x_mul_prelu/data_out0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_bs/u_sdp_x_mul_0/x_mul_prelu/data_out0__0 output base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_bs/u_sdp_x_mul_0/x_mul_prelu/data_out0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_c/c_int_0/mul_dout0 output base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_c/c_int_0/mul_dout0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_c/c_int_0/mul_dout0__0 output base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_c/c_int_0/mul_dout0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_0/mul_dout0 multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_0/mul_dout0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_1/mul_dout0 multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_1/mul_dout0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_2/mul_dout0 multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_2/mul_dout0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_3/mul_dout0 multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_3/mul_dout0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_4/mul_dout0 multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_4/mul_dout0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_5/mul_dout0 multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_5/mul_dout0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_6/mul_dout0 multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_6/mul_dout0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_7/mul_dout0 multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_cvt/u_cell_7/mul_dout0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_per_batch0 multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_per_batch0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0 multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w__0 multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_cur_atomic0 multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_cur_atomic0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_0_stride_w0 multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_0_stride_w0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_0_w0 multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_0_w0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_1_stride_w0 multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_1_stride_w0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_1_w0 multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_1_w0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_2_w0 multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/h_bias_2_w0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0 multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_bs/u_sdp_x_mul_0/x_mul_prelu/data_out0 multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_bs/u_sdp_x_mul_0/x_mul_prelu/data_out0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_bs/u_sdp_x_mul_0/x_mul_prelu/data_out0__0 multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_bs/u_sdp_x_mul_0/x_mul_prelu/data_out0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_c/c_int_0/mul_dout0 multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_c/c_int_0/mul_dout0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_c/c_int_0/mul_dout0__0 multiplier stage base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_p/u_NV_NVDLA_sdp/u_core/u_c/c_int_0/mul_dout0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_0_d3_reg[0], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_1_d3_reg[0]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_0_d3_reg[10], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_1_d3_reg[10]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_0_d3_reg[11], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_1_d3_reg[11]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_0_d3_reg[12], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_1_d3_reg[12]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_0_d3_reg[13], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_1_d3_reg[13]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_0_d3_reg[14], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_1_d3_reg[14]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_0_d3_reg[1], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_1_d3_reg[1]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_0_d3_reg[2], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_1_d3_reg[2]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_0_d3_reg[3], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_1_d3_reg[3]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_0_d3_reg[4], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_1_d3_reg[4]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_0_d3_reg[5], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_1_d3_reg[5]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_0_d3_reg[6], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_1_d3_reg[6]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_0_d3_reg[7], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_1_d3_reg[7]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_0_d3_reg[8], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_1_d3_reg[8]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/entry_required0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_0_d3_reg[9], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/req_entry_1_d3_reg[9]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_reg[0]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_reg[10]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_reg[11]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_reg[12]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_reg[13]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_reg[14]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_reg[15]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_reg[16]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_reg[1]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_reg[2]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_reg[3]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_reg[4]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_reg[5]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_reg[6]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_reg[7]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_reg[8]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_w output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_dc/grain_addr_reg[9]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/last_entries_reg[0], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/rls_entries_reg[0]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/last_entries_reg[10], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/rls_entries_reg[10]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/last_entries_reg[11], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/rls_entries_reg[11]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/last_entries_reg[12], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/rls_entries_reg[12]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/last_entries_reg[13], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/rls_entries_reg[13]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/last_entries_reg[14], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/rls_entries_reg[14]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/last_entries_reg[1], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/rls_entries_reg[1]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/last_entries_reg[2], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/rls_entries_reg[2]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/last_entries_reg[3], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/rls_entries_reg[3]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/last_entries_reg[4], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/rls_entries_reg[4]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/last_entries_reg[5], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/rls_entries_reg[5]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/last_entries_reg[6], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/rls_entries_reg[6]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/last_entries_reg[7], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/rls_entries_reg[7]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/last_entries_reg[8], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/rls_entries_reg[8]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/slice_entries_w0 output is connected to registers with an asynchronous reset (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/last_entries_reg[9], and base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_csc/u_dl/rls_entries_reg[9]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0 has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0/ADDRARDADDR[6] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/ADDRARDADDR[0]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_ctrl/accu_channel_st_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0 has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0/ADDRARDADDR[6] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/ADDRARDADDR[0]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_ctrl/accu_cnt_reg[0]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0 has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0/ADDRARDADDR[6] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/ADDRARDADDR[0]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_ctrl/accu_valid_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0 has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0/ADDRARDADDR[7] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/ADDRARDADDR[1]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_ctrl/accu_channel_st_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0 has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0/ADDRARDADDR[7] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/ADDRARDADDR[1]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_ctrl/accu_cnt_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0 has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0/ADDRARDADDR[7] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/ADDRARDADDR[1]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_ctrl/accu_valid_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0 has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0/ADDRARDADDR[8] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/ADDRARDADDR[2]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_ctrl/accu_channel_st_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0 has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0/ADDRARDADDR[8] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/ADDRARDADDR[2]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_ctrl/accu_cnt_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0 has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0/ADDRARDADDR[8] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/ADDRARDADDR[2]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_ctrl/accu_valid_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0 has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0/ADDRARDADDR[9] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/ADDRARDADDR[3]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_ctrl/accu_channel_st_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0 has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0/ADDRARDADDR[9] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/ADDRARDADDR[3]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_ctrl/accu_cnt_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0 has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0/ADDRARDADDR[9] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/ADDRARDADDR[3]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_ctrl/accu_valid_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0 has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0/ADDRBWRADDR[6] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/Q[0]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_calculator/abuf_wr_addr_reg[0]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0 has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0/ADDRBWRADDR[7] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/Q[1]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_calculator/abuf_wr_addr_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0 has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0/ADDRBWRADDR[8] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/Q[2]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_calculator/abuf_wr_addr_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0 has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0/ADDRBWRADDR[9] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/Q[3]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_calculator/abuf_wr_addr_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0 has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0/ENARDEN (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0_ENARDEN_cooolgate_en_sig_282) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_calculator/abuf_wr_en_reg_rep) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0 has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0/ENARDEN (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0_ENARDEN_cooolgate_en_sig_282) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_partition_a_reset/sync_reset_synced_rstn/NV_GENERIC_CELL/q_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0 has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0/ENBWREN (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0_ENBWREN_cooolgate_en_sig_1) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_calculator/abuf_wr_en_reg_rep) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0 has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/M_reg_0/WEBWE[7] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_assembly_buffer/u_accu_abuf_0/WEBWE[0]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_a/u_NV_NVDLA_cacc/u_calculator/abuf_wr_en_reg_rep) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg/ADDRARDADDR[10] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg_5[6]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/wr_adr_reg[6]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg/ADDRARDADDR[4] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg_5[0]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/wr_adr_reg[0]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg/ADDRARDADDR[5] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg_5[1]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/wr_adr_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg/ADDRARDADDR[6] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg_5[2]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/wr_adr_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg/ADDRARDADDR[7] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg_5[3]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/wr_adr_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg/ADDRARDADDR[8] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg_5[4]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/wr_adr_reg[4]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg/ADDRARDADDR[9] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg_5[5]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/wr_adr_reg[5]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg/ENARDEN (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg_i_1__80_n_0) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/wr_busy_int_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg/ENARDEN (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg_i_1__80_n_0) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/wr_req_in_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg/ENBWREN (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg_ENBWREN_cooolgate_en_sig_17) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/NV_NVDLA_PDP_RDMA_rdrsp/pipe_skid_dma_rd_rsp_vld_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg/ENBWREN (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg_ENBWREN_cooolgate_en_sig_17) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/dma_rsp_size_cnt_reg[0]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg/ENBWREN (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg_ENBWREN_cooolgate_en_sig_17) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/dma_rsp_size_cnt_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg/ENBWREN (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg_ENBWREN_cooolgate_en_sig_17) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/dma_rsp_size_cnt_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg/ENBWREN (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg_ENBWREN_cooolgate_en_sig_17) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/dma_rsp_size_cnt_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg/ENBWREN (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg_ENBWREN_cooolgate_en_sig_17) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/dma_rsp_size_cnt_reg[4]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg/ENBWREN (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg_ENBWREN_cooolgate_en_sig_17) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/rd_req_int_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg/ENBWREN (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg_ENBWREN_cooolgate_en_sig_17) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/rd_req_p_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg/ENBWREN (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg_ENBWREN_cooolgate_en_sig_17) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/wr_busy_int_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg/ENBWREN (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/ram/M_reg_ENBWREN_cooolgate_en_sig_17) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_c/u_NV_NVDLA_cdma/u_img/u_sg/u_NV_NVDLA_CDMA_IMG_fifo/wr_req_in_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_o/u_NV_NVDLA_mcif/u_write/u_cq/adr_ram/M_reg has an input control pin base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_o/u_NV_NVDLA_mcif/u_write/u_cq/adr_ram/M_reg/ADDRARDADDR[11] (net: base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_o/u_NV_NVDLA_mcif/u_write/u_cq/adr_ram/adr_ram_wr_adr[7]) which is driven by a register (base_zynq_i/nv_nvdla_wrapper_0/inst/nv_core/u_partition_o/u_NV_NVDLA_mcif/u_write/u_ig/u_cvt/pipe_p1/pipe_spt2cvt_cmd_valid_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 154 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./base_zynq_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-120] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-186] 'D:/uni/2019-2020/thesis/cogitantium/nvdla/nv_small_512_32_16_8_int8/nv_small_512_32_16_8_int8.runs/impl_1/usage_statistics_webtalk.xml' has been successfully sent to Xilinx on Wed Feb 19 11:50:56 2020. For additional details about this file, please refer to the WebTalk help file at D:/programmi/Xilinx/Vivado/2019.2/doc/webtalk_introduction.html.
INFO: [Common 17-83] Releasing license: Implementation
23 Infos, 154 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:01:52 ; elapsed = 00:01:17 . Memory (MB): peak = 2550.520 ; gain = 656.121
INFO: [Common 17-206] Exiting Vivado at Wed Feb 19 11:50:56 2020...
